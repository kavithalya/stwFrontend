{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox1';\nimport { Row, Col, Container } from 'reactstrap';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst TopCollection = ({\n  type,\n  title,\n  subtitle,\n  designClass,\n  noSlider,\n  cartClass\n}) => {\n  const context = useContext(CartContext);\n  const contextWishlist = useContext(WishlistContext);\n  const contextCompare = useContext(CompareContext);\n  const quatity = context.quatity;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1 title-gradient  section-t-space\"\n  }, subtitle ? __jsx(\"h4\", null, subtitle) : '', __jsx(\"h2\", {\n    className: \"title-inner1\"\n  }, title)), __jsx(\"section\", {\n    className: designClass\n  }, noSlider ? __jsx(Container, null, __jsx(Row, null, data && data.products.items.slice(0, 8).map((product, index) => __jsx(Col, {\n    xl: \"3\",\n    xs: \"6\",\n    key: index\n  }, __jsx(ProductItem, {\n    product: product,\n    addCompare: () => contextCompare.addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product, quatity),\n    key: index,\n    cartClass: cartClass\n  }))))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1 title-gradient  section-t-space\"\n  }, subtitle ? __jsx(\"h4\", null, subtitle) : '', __jsx(\"h2\", {\n    className: \"title-inner1\"\n  }, title)), __jsx(Container, null, __jsx(Row, {\n    className: \"partition-cls\"\n  }, data && data.products.items.slice(0, 8).map((product, index) => __jsx(Col, {\n    xl: \"3\",\n    xs: \"6\",\n    key: index\n  }, __jsx(\"div\", null, __jsx(ProductItem, {\n    product: product,\n    addCompare: () => contextCompare.addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product, quatity),\n    key: index\n  })))))))));\n};\n\nexport default TopCollection;","map":null,"metadata":{},"sourceType":"module"}