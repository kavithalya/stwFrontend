{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Slider from 'react-slick';\nimport { Media } from 'reactstrap';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                stock\n                new\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst LeftCollection = ({\n  type,\n  border,\n  product\n}) => {\n  const curContext = useContext(CurrencyContext);\n  const currency = curContext.state;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(\"div\", {\n    className: `theme-card ${border} `\n  }, __jsx(\"h5\", {\n    className: \"title-border\"\n  }, \"new product\"), __jsx(Slider, {\n    className: \"offer-slider slide-1\"\n  }, __jsx(\"div\", null, data && data.products.items.slice(0, product).map((product, index) => __jsx(\"div\", {\n    className: \"media\",\n    key: index\n  }, __jsx(\"a\", {\n    href: product.images[0].src\n  }, __jsx(Media, {\n    alt: \"\",\n    className: \"img-fluid blur-up lazyload\",\n    src: product.images[0].src\n  })), __jsx(\"div\", {\n    className: \"media-body align-self-center\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  })), __jsx(\"a\", {\n    href: product.images[0].src\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, currency.symbol, (product.price * currency.value).toFixed(2)))))), __jsx(\"div\", null, data && data.products.items.slice(3, 6).map((product, index) => __jsx(\"div\", {\n    className: \"media\",\n    key: index\n  }, __jsx(\"a\", {\n    href: product.images[0].src\n  }, __jsx(Media, {\n    alt: \"\",\n    className: \"img-fluid blur-up lazyload\",\n    src: product.images[0].src\n  })), __jsx(\"div\", {\n    className: \"media-body align-self-center\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  })), __jsx(\"a\", {\n    href: product.images[0].src\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, currency.symbol, (product.price * currency.value).toFixed(2))))))));\n};\n\nexport default LeftCollection;","map":null,"metadata":{},"sourceType":"module"}