{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { Media, Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport PostLoader from '../../../components/common/PostLoader';\nimport Lightbox from 'react-image-lightbox';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                sale\n                stock\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\nconst images = [require(\"../../../public/assets/images/pets/pro/9.jpg\"), require(\"../../../public/assets/images/pets/pro/2.jpg\"), require(\"../../../public/assets/images/pets/pro/12.jpg\"), require(\"../../../public/assets/images/pets/pro/13.jpg\"), require(\"../../../public/assets/images/pets/pro/10.jpg\"), require(\"../../../public/assets/images/pets/pro/11.jpg\"), require(\"../../../public/assets/images/pets/pro/14.jpg\"), require(\"../../../public/assets/images/pets/pro/8.jpg\")];\nconst fashionImages = [require(\"../../../public/assets/images/pro3/39.jpg\"), require(\"../../../public/assets/images/pro3/3.jpg\"), require(\"../../../public/assets/images/pro3/1.jpg\"), require(\"../../../public/assets/images/pro3/8.jpg\"), require(\"../../../public/assets/images/pro3/9.jpg\"), require(\"../../../public/assets/images/pro3/11.jpg\"), require(\"../../../public/assets/images/pro3/13.jpg\"), require(\"../../../public/assets/images/pro3/14.jpg\")];\nconst bagImages = [require(\"../../../public/assets/images/pro1/1.jpg\"), require(\"../../../public/assets/images/pro1/4.jpg\"), require(\"../../../public/assets/images/pro1/10.jpg\"), require(\"../../../public/assets/images/pro1/2.jpg\"), require(\"../../../public/assets/images/pro1/16.jpg\"), require(\"../../../public/assets/images/pro1/7.jpg\"), require(\"../../../public/assets/images/pro1/4.jpg\"), require(\"../../../public/assets/images/pro1/12.jpg\")];\nconst shoesImages = [require(\"../../../public/assets/images/pro/1.jpg\"), require(\"../../../public/assets/images/pro/16.jpg\"), require(\"../../../public/assets/images/pro/23.jpg\"), require(\"../../../public/assets/images/pro/26.jpg\"), require(\"../../../public/assets/images/pro/6.jpg\"), require(\"../../../public/assets/images/pro/33.jpg\"), require(\"../../../public/assets/images/pro/37.jpg\"), require(\"../../../public/assets/images/pro/13.jpg\")];\nconst watchImages = [require(\"../../../public/assets/images/pro2/2.jpg\"), require(\"../../../public/assets/images/pro2/3.jpg\"), require(\"../../../public/assets/images/pro2/6.jpg\"), require(\"../../../public/assets/images/pro2/15.jpg\"), require(\"../../../public/assets/images/pro2/8.jpg\"), require(\"../../../public/assets/images/pro2/9.jpg\"), require(\"../../../public/assets/images/pro2/13.jpg\"), require(\"../../../public/assets/images/pro2/4.jpg\")];\n\nconst GridTwoPage = ({\n  colClass,\n  limit\n}) => {\n  const l = parseInt(limit);\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState('pets');\n  const initilindex = {\n    index: 0,\n    isOpen: false\n  };\n  const {\n    0: photoIndex,\n    1: setPhotoIndex\n  } = useState(initilindex);\n\n  const onMovePrev = () => {\n    const prev = (photoIndex.index + images.length - 1) % images.length;\n    setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: prev\n    }));\n  };\n\n  const onMoveNext = () => {\n    const next = (photoIndex.index + 1) % images.length;\n    setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: next\n    }));\n  };\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: activeTab,\n      indexFrom: 0,\n      limit: parseInt(l)\n    }\n  });\n  return __jsx(\"section\", {\n    className: \"portfolio-section grid-portfolio ratio2_3 portfolio-padding\"\n  }, __jsx(Container, null, __jsx(Tabs, null, __jsx(TabList, {\n    align: \"center\",\n    id: \"form1\"\n  }, __jsx(Tab, {\n    className: `filter-button project_button ${activeTab == 'pets' ? 'active' : ''}`,\n    onClick: () => setActiveTab('pets'),\n    \"data-filter\": \"all\"\n  }, \"All\"), __jsx(Tab, {\n    className: `filter-button project_button ${activeTab == 'fashion' ? 'active' : ''}`,\n    onClick: () => setActiveTab('fashion'),\n    \"data-filter\": \"fashion\"\n  }, \"Fashion\"), __jsx(Tab, {\n    className: `filter-button project_button ${activeTab == 'bags' ? 'active' : ''}`,\n    onClick: () => setActiveTab('bags'),\n    \"data-filter\": \"bags\"\n  }, \"Bags\"), __jsx(Tab, {\n    className: `filter-button project_button ${activeTab == 'shoes' ? 'active' : ''}`,\n    onClick: () => setActiveTab('shoes'),\n    \"data-filter\": \"shoes\"\n  }, \"Shoes\"), __jsx(Tab, {\n    className: `filter-button project_button ${activeTab == 'watch' ? 'active' : ''}`,\n    onClick: () => setActiveTab('watch'),\n    \"data-filter\": \"watch\"\n  }, \"Watch\")), __jsx(Row, {\n    className: \"row zoom-gallery\"\n  }, __jsx(TabPanel, null, !data || !data.products || data.products.items.length === 0 || loading ? __jsx(PostLoader, null) : __jsx(React.Fragment, null, data && data.products.items.map((product, index) => __jsx(\"div\", {\n    className: `isotopeSelector filter fashion ${colClass}`,\n    key: index\n  }, __jsx(\"div\", {\n    className: \"overlay\"\n  }, __jsx(\"div\", {\n    className: \"border-portfolio\"\n  }, __jsx(\"a\", null, __jsx(\"div\", {\n    className: \"overlay-background\",\n    onClick: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: index,\n      isOpen: true\n    }))\n  }, __jsx(\"i\", {\n    className: \"fa fa-plus\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload bg-img\"\n  })), photoIndex.isOpen && __jsx(Lightbox, {\n    mainSrc: images[photoIndex.index],\n    nextSrc: images[(photoIndex.index + 1) % images.length],\n    prevSrc: images[(photoIndex.index + images.length - 1) % images.length],\n    imageTitle: photoIndex.index + 1 + \"/\" + images.length,\n    onCloseRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      isOpen: false\n    })),\n    onMovePrevRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + images.length - 1) % images.length\n    })),\n    onMoveNextRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + 1) % images.length\n    }))\n  }))))))), __jsx(TabPanel, null, !data || !data.products || data.products.items.length === 0 || loading ? __jsx(PostLoader, null) : __jsx(React.Fragment, null, data && data.products.items.slice(0, l).map((product, index) => __jsx(\"div\", {\n    className: `isotopeSelector filter fashion ${colClass}`,\n    key: index\n  }, __jsx(\"div\", {\n    className: \"overlay\"\n  }, __jsx(\"div\", {\n    className: \"border-portfolio\"\n  }, __jsx(\"a\", null, __jsx(\"div\", {\n    className: \"overlay-background\",\n    onClick: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: index,\n      isOpen: true\n    }))\n  }, __jsx(\"i\", {\n    className: \"fa fa-plus\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload bg-img\"\n  })), photoIndex.isOpen && __jsx(Lightbox, {\n    mainSrc: fashionImages[photoIndex.index],\n    nextSrc: fashionImages[(photoIndex.index + 1) % fashionImages.length],\n    prevSrc: fashionImages[(photoIndex.index + fashionImages.length - 1) % fashionImages.length],\n    imageTitle: photoIndex.index + 1 + \"/\" + fashionImages.length,\n    onCloseRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      isOpen: false\n    })),\n    onMovePrevRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + fashionImages.length - 1) % fashionImages.length\n    })),\n    onMoveNextRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + 1) % fashionImages.length\n    }))\n  }))))))), __jsx(TabPanel, null, !data || !data.products || data.products.items.length === 0 || loading ? __jsx(PostLoader, null) : __jsx(React.Fragment, null, data && data.products.items.slice(0, l).map((product, index) => __jsx(\"div\", {\n    className: `isotopeSelector filter fashion ${colClass}`,\n    key: index\n  }, __jsx(\"div\", {\n    className: \"overlay\"\n  }, __jsx(\"div\", {\n    className: \"border-portfolio\"\n  }, __jsx(\"a\", null, __jsx(\"div\", {\n    className: \"overlay-background\",\n    onClick: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: index,\n      isOpen: true\n    }))\n  }, __jsx(\"i\", {\n    className: \"fa fa-plus\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload bg-img\"\n  })), photoIndex.isOpen && __jsx(Lightbox, {\n    mainSrc: bagImages[photoIndex.index],\n    nextSrc: bagImages[(photoIndex.index + 1) % bagImages.length],\n    prevSrc: bagImages[(photoIndex.index + bagImages.length - 1) % bagImages.length],\n    imageTitle: photoIndex.index + 1 + \"/\" + bagImages.length,\n    onCloseRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      isOpen: false\n    })),\n    onMovePrevRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + bagImages.length - 1) % bagImages.length\n    })),\n    onMoveNextRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + 1) % bagImages.length\n    }))\n  }))))))), __jsx(TabPanel, null, !data || !data.products || data.products.items.length === 0 || loading ? __jsx(PostLoader, null) : __jsx(React.Fragment, null, data && data.products.items.slice(0, l).map((product, index) => __jsx(\"div\", {\n    className: `isotopeSelector filter fashion ${colClass}`,\n    key: index\n  }, __jsx(\"div\", {\n    className: \"overlay\"\n  }, __jsx(\"div\", {\n    className: \"border-portfolio\"\n  }, __jsx(\"a\", null, __jsx(\"div\", {\n    className: \"overlay-background\",\n    onClick: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: index,\n      isOpen: true\n    }))\n  }, __jsx(\"i\", {\n    className: \"fa fa-plus\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload bg-img\"\n  })), photoIndex.isOpen && __jsx(Lightbox, {\n    mainSrc: shoesImages[photoIndex.index],\n    nextSrc: shoesImages[(photoIndex.index + 1) % shoesImages.length],\n    prevSrc: shoesImages[(photoIndex.index + shoesImages.length - 1) % shoesImages.length],\n    imageTitle: photoIndex.index + 1 + \"/\" + shoesImages.length,\n    onCloseRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      isOpen: false\n    })),\n    onMovePrevRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + shoesImages.length - 1) % shoesImages.length\n    })),\n    onMoveNextRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + 1) % shoesImages.length\n    }))\n  }))))))), __jsx(TabPanel, null, !data || !data.products || data.products.items.length === 0 || loading ? __jsx(PostLoader, null) : __jsx(React.Fragment, null, data && data.products.items.slice(0, l).map((product, index) => __jsx(\"div\", {\n    className: `isotopeSelector filter fashion ${colClass}`,\n    key: index\n  }, __jsx(\"div\", {\n    className: \"overlay\"\n  }, __jsx(\"div\", {\n    className: \"border-portfolio\"\n  }, __jsx(\"a\", null, __jsx(\"div\", {\n    className: \"overlay-background\",\n    onClick: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: index,\n      isOpen: true\n    }))\n  }, __jsx(\"i\", {\n    className: \"fa fa-plus\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload bg-img\"\n  })), photoIndex.isOpen && __jsx(Lightbox, {\n    mainSrc: watchImages[photoIndex.index],\n    nextSrc: watchImages[(photoIndex.index + 1) % watchImages.length],\n    prevSrc: watchImages[(photoIndex.index + watchImages.length - 1) % watchImages.length],\n    imageTitle: photoIndex.index + 1 + \"/\" + watchImages.length,\n    onCloseRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      isOpen: false\n    })),\n    onMovePrevRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + watchImages.length - 1) % watchImages.length\n    })),\n    onMoveNextRequest: () => setPhotoIndex(_objectSpread(_objectSpread({}, photoIndex), {}, {\n      index: (photoIndex.index + 1) % watchImages.length\n    }))\n  })))))))))));\n};\n\nexport default GridTwoPage;","map":null,"metadata":{},"sourceType":"module"}