{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n        items {\\n                id\\n                title\\n                description\\n                type\\n                brand\\n                category \\n                price\\n                new\\n                sale\\n                stock\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n    }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from 'react';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport { Col, Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport PostLoader from '../PostLoader';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport ProductItem from '../product-box/ProductBox10';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar Collection = function Collection(_ref) {\n  var type = _ref.type;\n  var cartContext = useContext(CartContext);\n  var wishlistContext = useContext(WishlistContext);\n  var compareContext = useContext(CompareContext);\n  var quantity = cartContext.quantity;\n\n  var _useState = useState(type),\n      activeTab = _useState[0],\n      setActiveTab = _useState[1];\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title4  section-t-space\"\n  }, __jsx(\"h4\", null, \"special offer\"), __jsx(\"h2\", {\n    className: \"title-inner4\"\n  }, \"top collection\"), __jsx(\"div\", {\n    className: \"line\"\n  }, __jsx(\"span\", null))), __jsx(\"section\", {\n    className: \"section-b-space p-t-0 absolute-product ratio_asos\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, __jsx(Tabs, {\n    className: \"theme-tab\"\n  }, __jsx(TabList, {\n    className: \"tabs tab-title\"\n  }, __jsx(Tab, {\n    className: activeTab == type ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab(type);\n    }\n  }, \"New Products\"), __jsx(Tab, {\n    className: activeTab == \"videoslider\" ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab(\"videoslider\");\n    }\n  }, \"Featured Products\"), __jsx(Tab, {\n    className: activeTab == \"videoslider\" ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab(\"videoslider\");\n    }\n  }, \"Best Sellers\")), __jsx(\"div\", {\n    className: \"tab-content-cls\"\n  }, __jsx(TabPanel, {\n    id: \"tab-4\",\n    className: \"tab-content active default\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null))) : __jsx(Row, {\n    className: \" no-slider\"\n  }, data && data.products.items.slice(0, 8).map(function (item, i) {\n    return __jsx(ProductItem, {\n      product: item,\n      addCart: function addCart() {\n        return cartContext.addToCart(item, quantity);\n      },\n      addWishlist: function addWishlist() {\n        return wishlistContext.addToWish(item);\n      },\n      addCompare: function addCompare() {\n        return compareContext.addToCompare(item);\n      },\n      key: i\n    });\n  }))), __jsx(TabPanel, {\n    id: \"tab-5\",\n    className: \"tab-content\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, null), __jsx(PostLoader, null), __jsx(PostLoader, null)) : __jsx(Row, {\n    className: \"no-slider\"\n  }, data && data.products.items.slice(4, 11).map(function (item, i) {\n    return __jsx(ProductItem, {\n      product: item,\n      addCart: function addCart() {\n        return cartContext.addToCart(item, quantity);\n      },\n      addWishlist: function addWishlist() {\n        return wishlistContext.addToWish(item);\n      },\n      addCompare: function addCompare() {\n        return compareContext.addToCompare(item);\n      },\n      key: i\n    });\n  }))), __jsx(TabPanel, {\n    id: \"tab-6\",\n    className: \"tab-content\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, null), __jsx(PostLoader, null), __jsx(PostLoader, null)) : __jsx(Row, {\n    className: \" no-slider\"\n  }, data && data.products.items.slice(0, 8).map(function (item, i) {\n    return __jsx(ProductItem, {\n      product: item,\n      addCart: function addCart() {\n        return cartContext.addToCart(item, quantity);\n      },\n      addWishlist: function addWishlist() {\n        return wishlistContext.addToWish(item);\n      },\n      addCompare: function addCompare() {\n        return compareContext.addToCompare(item);\n      },\n      key: i\n    });\n  }))))))))));\n};\n\nexport default Collection;","map":null,"metadata":{},"sourceType":"module"}