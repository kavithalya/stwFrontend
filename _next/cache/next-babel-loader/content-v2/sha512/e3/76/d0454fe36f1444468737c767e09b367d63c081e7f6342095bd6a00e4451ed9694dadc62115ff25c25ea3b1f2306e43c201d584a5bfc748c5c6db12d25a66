{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Media } from 'reactstrap';\nimport Slider from 'react-slick';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nconst GET_PRODUCTS = gql`\n    query  newProducts($type: String!) {\n        newProducts (type: $type ) {\n            title\n            price\n            images {\n                alt\n                src\n            }\n        }\n    }\n`;\n\nconst NewProduct = () => {\n  const CurContect = useContext(CurrencyContext);\n  const symbol = CurContect.state.symbol;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: \"fashion\"\n    }\n  });\n  return (// <!-- side-bar single product slider start --> \n    __jsx(\"div\", {\n      className: \"theme-card\"\n    }, __jsx(\"h5\", {\n      className: \"title-border\"\n    }, \"new product\"), __jsx(Slider, {\n      className: \"offer-slider slide-1\"\n    }, __jsx(\"div\", null, !data || !data.newProducts || data.newProducts.length === 0 || loading ? 'loading' : __jsx(React.Fragment, null, data && data.newProducts.slice(0, 3).map((product, index) => __jsx(\"div\", {\n      className: \"media\",\n      key: index\n    }, __jsx(\"a\", {\n      href: \"\"\n    }, __jsx(Media, {\n      className: \"img-fluid blur-up lazyload\",\n      src: product.images[0].src,\n      alt: product.images[0].alt\n    })), __jsx(\"div\", {\n      className: \"media-body align-self-center\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    })), __jsx(\"a\", {\n      href: null\n    }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, symbol, product.price)))))), __jsx(\"div\", null, !data || !data.newProducts || data.newProducts.length === 0 || loading ? 'loading' : __jsx(React.Fragment, null, data && data.newProducts.slice(4, 7).map((product, index) => __jsx(\"div\", {\n      className: \"media\",\n      key: index\n    }, __jsx(\"a\", {\n      href: \"\"\n    }, __jsx(Media, {\n      className: \"img-fluid blur-up lazyload\",\n      src: product.images[0].src,\n      alt: product.images[0].alt\n    })), __jsx(\"div\", {\n      className: \"media-body align-self-center\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    })), __jsx(\"a\", {\n      href: null\n    }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, \"$\", product.price)))))))) //  <!-- side-bar single product slider end -->\n\n  );\n};\n\nexport default NewProduct;","map":null,"metadata":{},"sourceType":"module"}