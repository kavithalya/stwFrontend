{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nexport const Context = /*#__PURE__*/createContext({\n  wishlistItems: Function,\n  addToWish: Function,\n  removeFromWish: Function\n});\n\nconst getLocalWishlistItems = () => {\n  try {\n    const list = localStorage.getItem('wishlist');\n\n    if (list === null) {\n      return [];\n    } else {\n      return JSON.parse(list);\n    }\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const Provider = props => {\n  const {\n    0: wishlistItems,\n    1: setWishlistItems\n  } = useState(getLocalWishlistItems());\n  useEffect(() => {\n    localStorage.setItem('wishlist', JSON.stringify(wishlistItems));\n  }, [wishlistItems]); // Add Product To Wishlist\n\n  const addToWish = item => {\n    const index = wishlistItems.findIndex(wish => wish.id === item.id);\n\n    if (index === -1) {\n      toast.success(\"Product Added Successfully !\");\n      setWishlistItems([...wishlistItems, item]);\n    } else {\n      toast.error(\"This Product Already Added !\");\n    }\n  }; // Remove Product From Wishlist\n\n\n  const removeFromWish = item => {\n    setWishlistItems(wishlistItems.filter(e => e.id !== item.id));\n    toast.error(\"Product Removed Successfully !\");\n  };\n\n  const {\n    value\n  } = props;\n  return __jsx(Context.Provider, {\n    value: {\n      wishlistItems: wishlistItems,\n      addToWish: addToWish,\n      removeFromWish: removeFromWish\n    }\n  }, props.children);\n};\nexport { Context as WishlistContext, Provider as WishlistContextProvider } from \"./WishlistContext\";","map":null,"metadata":{},"sourceType":"module"}