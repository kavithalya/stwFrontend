{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { MENUITEMS } from '../../constant/menu';\nimport { Container, Row } from 'reactstrap';\nimport { useTranslation } from \"react-i18next\";\nimport { useRouter } from 'next/router';\n\nconst NavBar = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    0: navClose,\n    1: setNavClose\n  } = useState({\n    right: '0px'\n  });\n  const router = useRouter();\n  useEffect(() => {\n    if (window.innerWidth < 750) {\n      setNavClose({\n        right: '-410px'\n      });\n    }\n\n    if (window.innerWidth < 1199) {\n      setNavClose({\n        right: '-300px'\n      });\n    }\n  }, []);\n\n  const openNav = () => {\n    setNavClose({\n      right: '0px'\n    });\n    if (router.asPath == '/layouts/Gym') document.querySelector(\"#topHeader\").classList.add(\"zindex-class\");\n  };\n\n  const closeNav = () => {\n    setNavClose({\n      right: '-410px'\n    });\n    if (router.asPath == '/layouts/Gym') document.querySelector(\"#topHeader\").classList.remove(\"zindex-class\");\n  }; // eslint-disable-next-line\n\n\n  const onMouseEnterHandler = () => {\n    if (window.innerWidth > 1199) {\n      document.querySelector(\"#main-menu\").classList.add(\"hover-unset\");\n    }\n  };\n\n  const handleMegaSubmenu = event => {\n    if (event.target.classList.contains('sub-arrow')) return;\n    if (event.target.parentNode.nextElementSibling.classList.contains('opensubmegamenu')) event.target.parentNode.nextElementSibling.classList.remove('opensubmegamenu');else {\n      document.querySelectorAll('.menu-content').forEach(function (value) {\n        value.classList.remove('opensubmegamenu');\n      });\n      event.target.parentNode.nextElementSibling.classList.add('opensubmegamenu');\n    }\n  };\n\n  const {\n    0: mainmenu,\n    1: setMainMenu\n  } = useState(MENUITEMS);\n  useEffect(() => {\n    const currentUrl = location.pathname;\n    MENUITEMS.filter(items => {\n      if (items.path === currentUrl) setNavActive(items);\n      if (!items.children) return false;\n      items.children.filter(subItems => {\n        if (subItems.path === currentUrl) setNavActive(subItems);\n        if (!subItems.children) return false;\n        subItems.children.filter(subSubItems => {\n          if (subSubItems.path === currentUrl) setNavActive(subSubItems);\n        });\n      });\n    });\n  }, []);\n\n  const setNavActive = item => {\n    MENUITEMS.filter(menuItem => {\n      if (menuItem != item) menuItem.active = false;\n      if (menuItem.children && menuItem.children.includes(item)) menuItem.active = true;\n\n      if (menuItem.children) {\n        menuItem.children.filter(submenuItems => {\n          if (submenuItems.children && submenuItems.children.includes(item)) {\n            menuItem.active = true;\n            submenuItems.active = false;\n          }\n        });\n      }\n    });\n    item.active = !item.active;\n    setMainMenu({\n      mainmenu: MENUITEMS\n    });\n  }; // Click Toggle menu\n\n\n  const toggletNavActive = item => {\n    if (!item.active) {\n      MENUITEMS.forEach(a => {\n        if (MENUITEMS.includes(item)) a.active = false;\n        if (!a.children) return false;\n        a.children.forEach(b => {\n          if (a.children.includes(item)) {\n            b.active = false;\n          }\n\n          if (!b.children) return false;\n          b.children.forEach(c => {\n            if (b.children.includes(item)) {\n              c.active = false;\n            }\n          });\n        });\n      });\n    }\n\n    item.active = !item.active;\n    setMainMenu({\n      mainmenu: MENUITEMS\n    });\n  };\n\n  const openMblNav = event => {\n    if (event.target.classList.contains('sub-arrow')) return;\n    if (event.target.nextElementSibling.classList.contains('opensubmenu')) event.target.nextElementSibling.classList.remove('opensubmenu');else {\n      document.querySelectorAll('.nav-submenu').forEach(function (value) {\n        value.classList.remove('opensubmenu');\n      });\n      document.querySelector('.mega-menu-container').classList.remove('opensubmenu');\n      event.target.nextElementSibling.classList.add('opensubmenu');\n    }\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"main-navbar\"\n  }, __jsx(\"div\", {\n    id: \"mainnav\"\n  }, __jsx(\"div\", {\n    className: \"toggle-nav\",\n    onClick: openNav.bind(this)\n  }, __jsx(\"i\", {\n    className: \"fa fa-bars sidebar-bar\"\n  })), __jsx(\"ul\", {\n    className: \"nav-menu\",\n    style: navClose\n  }, __jsx(\"li\", {\n    className: \"back-btn\",\n    onClick: closeNav.bind(this)\n  }, __jsx(\"div\", {\n    className: \"mobile-back text-right\"\n  }, __jsx(\"span\", null, \"Back  navbar\"), __jsx(\"i\", {\n    className: \"fa fa-angle-right pl-2\",\n    \"aria-hidden\": \"true\"\n  }))), MENUITEMS.map((menuItem, i) => {\n    return __jsx(\"li\", {\n      key: i,\n      className: ` ${menuItem.megaMenu ? 'mega-menu' : ''}`\n    }, __jsx(\"a\", {\n      className: \"nav-link\",\n      onClick: e => openMblNav(e)\n    }, \" \", t(menuItem.title), __jsx(\"span\", {\n      className: \"sub-arrow\"\n    })), menuItem.children && !menuItem.megaMenu ? __jsx(\"ul\", {\n      className: \"nav-submenu\"\n    }, menuItem.children.map((childrenItem, index) => {\n      return __jsx(\"li\", {\n        key: index,\n        className: `${childrenItem.children ? 'sub-menu ' : ''}`\n      }, childrenItem.type === 'sub' ? __jsx(\"a\", {\n        href: null,\n        onClick: () => toggletNavActive(childrenItem)\n      }, childrenItem.title, childrenItem.tag === 'new' ? __jsx(\"span\", {\n        className: \"new-tag\"\n      }, \"new\") : '', __jsx(\"i\", {\n        className: \"fa fa-angle-right pl-2\"\n      })) : '', childrenItem.type === 'link' ? __jsx(Link, {\n        href: `${childrenItem.path}`\n      }, __jsx(\"a\", null, \" \", childrenItem.title, childrenItem.tag === 'new' ? __jsx(\"span\", {\n        className: \"new-tag\"\n      }, \"new\") : '')) : '', childrenItem.children ? __jsx(\"ul\", {\n        className: `nav-sub-childmenu ${childrenItem.active ? 'menu-open ' : 'active'}`\n      }, childrenItem.children.map((childrenSubItem, key) => __jsx(\"li\", {\n        key: key\n      }, childrenSubItem.type === 'link' ? __jsx(Link, {\n        href: childrenSubItem.path\n      }, __jsx(\"a\", {\n        className: \"sub-menu-title\"\n      }, childrenSubItem.title, childrenSubItem.tag === 'new' ? __jsx(\"span\", {\n        className: \"new-tag\"\n      }, \"new\") : '')) : ''))) : '');\n    })) : __jsx(\"div\", {\n      className: `mega-menu-container  ${menuItem.megaMenu ? '' : 'opensubmenu'}`\n    }, menuItem.megaMenu === true ? __jsx(Container, null, __jsx(Row, null, menuItem.children.map((megaMenuItem, i) => {\n      return __jsx(\"div\", {\n        className: `${menuItem.megaMenuType == 'small' ? 'col mega-box' : menuItem.megaMenuType == 'medium' ? 'col-lg-3' : menuItem.megaMenuType == 'large' ? 'col' : ''} `,\n        key: i\n      }, __jsx(\"div\", {\n        className: \"link-section\"\n      }, __jsx(\"div\", {\n        className: \"menu-title\"\n      }, __jsx(\"h5\", {\n        onClick: e => handleMegaSubmenu(e)\n      }, megaMenuItem.title)), __jsx(\"div\", {\n        className: \"menu-content\"\n      }, __jsx(\"ul\", null, menuItem.title === 'Elements' ? megaMenuItem.children.map((subMegaMenuItem, i) => {\n        return __jsx(\"li\", {\n          key: i\n        }, __jsx(\"a\", {\n          href: subMegaMenuItem.path\n        }, __jsx(\"i\", {\n          className: `icon-${subMegaMenuItem.icon}`\n        }), subMegaMenuItem.title));\n      }) : megaMenuItem.children.map((subMegaMenuItem, i) => {\n        return __jsx(\"li\", {\n          key: i\n        }, __jsx(\"a\", {\n          href: subMegaMenuItem.path\n        }, subMegaMenuItem.title));\n      })))));\n    }))) : ''));\n  })))));\n};\n\nexport default NavBar;","map":null,"metadata":{},"sourceType":"module"}