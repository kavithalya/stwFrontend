{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Template/StwEcommerce/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Template\\\\StwEcommerce\\\\frontend\\\\pages\\\\shop\\\\common\\\\brand.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query  getBrands($type:String) {\\n        getBrands(type: $type) {\\n            brand\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Collapse, Input } from 'reactstrap';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nvar GET_BRAND = gql(_templateObject());\n\nvar Brand = function Brand() {\n  _s();\n\n  var context = useContext(FilterContext);\n  var isChecked = context.isChecked;\n  var filterChecked = context.filterChecked;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var toggleBrand = function toggleBrand() {\n    return setIsOpen(!isOpen);\n  };\n\n  var _useQuery = useQuery(GET_BRAND, {\n    variables: {\n      type: context.state\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggleBrand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"brand\"), __jsx(Collapse, {\n    isOpen: isOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-brand-filter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, !data || !data.getBrands || data.getBrands.length === 0 || loading ? 'loading' : data && data.getBrands.brand.map(function (brand, index) {\n    return __jsx(\"div\", {\n      className: \"custom-control custom-checkbox collection-filter-checkbox\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }\n    }, __jsx(Input, {\n      checked: context.selectedBrands.includes(brand),\n      onChange: function onChange() {\n        context.handleBrands(brand, isChecked), context.setFilterChecked(brand, !filterChecked.isChecked);\n      },\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: brand,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }\n    }), __jsx(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: brand,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }, brand));\n  })))));\n};\n\n_s(Brand, \"uiTXk8T+hywocA6G/Sl4G9LYOMs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Brand;\nexport default Brand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Brand\");","map":{"version":3,"sources":["C:/Mani/Office/Template/StwEcommerce/frontend/pages/shop/common/brand.js"],"names":["React","useState","useContext","useQuery","gql","Collapse","Input","FilterContext","GET_BRAND","Brand","context","isChecked","filterChecked","isOpen","setIsOpen","toggleBrand","variables","type","state","loading","data","getBrands","length","brand","map","index","selectedBrands","includes","handleBrands","setFilterChecked"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,UAAxB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,YAAhC;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AAGA,IAAMC,SAAS,GAAGJ,GAAH,mBAAf;;AAQA,IAAMK,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAEhB,MAAMC,OAAO,GAAGR,UAAU,CAACK,aAAD,CAA1B;AACA,MAAMI,SAAS,GAAGD,OAAO,CAACC,SAA1B;AACA,MAAMC,aAAa,GAAGF,OAAO,CAACE,aAA9B;;AAJgB,kBAKYX,QAAQ,CAAC,KAAD,CALpB;AAAA,MAKTY,MALS;AAAA,MAKDC,SALC;;AAMhB,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,GAApB;;AANgB,kBAQQV,QAAQ,CAACK,SAAD,EAAY;AACxCQ,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEP,OAAO,CAACQ;AADP;AAD6B,GAAZ,CARhB;AAAA,MAQVC,OARU,aAQVA,OARU;AAAA,MAQDC,IARC,aAQDA,IARC;;AAchB,SACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAqC,IAAA,OAAO,EAAEL,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR,EAEQ,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,CAACO,IAAD,IAAS,CAACA,IAAI,CAACC,SAAf,IAA4BD,IAAI,CAACC,SAAL,CAAeC,MAAf,KAA0B,CAAtD,IAA2DH,OAA5D,GACG,SADH,GAGGC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeE,KAAf,CAAqBC,GAArB,CAAyB,UAACD,KAAD,EAAQE,KAAR;AAAA,WAC7B;AAAK,MAAA,SAAS,EAAC,2DAAf;AAA2E,MAAA,GAAG,EAAEA,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AACI,MAAA,OAAO,EAAEf,OAAO,CAACgB,cAAR,CAAuBC,QAAvB,CAAgCJ,KAAhC,CADb;AAEI,MAAA,QAAQ,EAAE,oBAAM;AACRb,QAAAA,OAAO,CAACkB,YAAR,CAAqBL,KAArB,EAA4BZ,SAA5B,GACAD,OAAO,CAACmB,gBAAR,CAAyBN,KAAzB,EAAgC,CAACX,aAAa,CAACD,SAA/C,CADA;AAEP,OALL;AAOI,MAAA,IAAI,EAAC,UAPT;AAOoB,MAAA,SAAS,EAAC,sBAP9B;AAOqD,MAAA,EAAE,EAAEY,KAPzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAwC,MAAA,OAAO,EAAEA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyDA,KAAzD,CATJ,CAD6B;AAAA,GAAzB,CAJhB,CADJ,CADJ,CAFR,CADJ;AA4BH,CA1CD;;GAAMd,K;UAQsBN,Q;;;KARtBM,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React,{useState, useContext} from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Collapse ,Input } from 'reactstrap';\r\nimport FilterContext from '../../../helpers/filter/FilterContext';\r\n\r\n\r\nconst GET_BRAND = gql`\r\n    query  getBrands($type:String) {\r\n        getBrands(type: $type) {\r\n            brand\r\n        }\r\n    }\r\n`\r\n\r\nconst Brand = () => {\r\n    \r\n    const context = useContext(FilterContext);\r\n    const isChecked = context.isChecked;\r\n    const filterChecked = context.filterChecked\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggleBrand = () => setIsOpen(!isOpen);\r\n\r\n    var { loading, data } = useQuery(GET_BRAND, {\r\n        variables: {\r\n            type: context.state\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"collection-collapse-block open\">\r\n                <h3 className=\"collapse-block-title\" onClick={toggleBrand}>brand</h3>\r\n                <Collapse isOpen={isOpen}>\r\n                    <div className=\"collection-collapse-block-content\">\r\n                        <div className=\"collection-brand-filter\">\r\n                            {(!data || !data.getBrands || data.getBrands.length === 0 || loading) ?\r\n                                'loading'\r\n                                :\r\n                                data && data.getBrands.brand.map((brand, index) =>\r\n                                    <div className=\"custom-control custom-checkbox collection-filter-checkbox\" key={index}>\r\n                                        <Input\r\n                                            checked={context.selectedBrands.includes(brand)}\r\n                                            onChange={() => {\r\n                                                    context.handleBrands(brand, isChecked),\r\n                                                    context.setFilterChecked(brand, !filterChecked.isChecked)\r\n                                            }}\r\n\r\n                                            type=\"checkbox\" className=\"custom-control-input\" id={brand} />\r\n                                        <label className=\"custom-control-label\" htmlFor={brand}>{brand}</label>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Brand;"]},"metadata":{},"sourceType":"module"}