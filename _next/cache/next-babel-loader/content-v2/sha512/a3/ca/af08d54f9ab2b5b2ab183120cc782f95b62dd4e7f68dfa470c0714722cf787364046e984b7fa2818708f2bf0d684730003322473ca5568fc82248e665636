{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from 'react';\nimport { Container, Row, Col, Media } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Slider from 'react-slick';\nimport { Product4 } from '../../../services/script';\nimport ProductItem from '../product-box/ProductBox6';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\nimport banner1 from '../../../public/assets/images/offer-banner1.jpg';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                sale\n                stock\n                discount\n                picture\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst ProductSlider = ({\n  type\n}) => {\n  const curContext = useContext(CurrencyContext);\n  const currency = curContext.state;\n  const context = useContext(CartContext);\n  const contextWishlist = useContext(WishlistContext);\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 17\n    }\n  });\n  return __jsx(\"section\", {\n    className: \"tools_product bg-title section-b-space \"\n  }, __jsx(Container, null, __jsx(Row, {\n    className: \"multiple-slider\"\n  }, __jsx(Col, {\n    xl: \"4\",\n    lg: \"4\",\n    md: \"12\"\n  }, __jsx(\"div\", {\n    className: \"theme-card\"\n  }, __jsx(\"h5\", {\n    className: \"title-border\"\n  }, \"Under $20 | Free delivery\"), __jsx(Slider, {\n    className: \"offer-slider slide-1\"\n  }, __jsx(\"div\", null, data && data.products.items.slice(5, 9).map((product, index) => __jsx(\"div\", {\n    className: \"media\",\n    key: index\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    className: \"img-fluid blur-up lazyload\",\n    src: product.images[0].src,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"media-body align-self-center\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  })), __jsx(\"a\", {\n    href: null\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, currency.symbol, ((product.price - product.price * product.discount / 100) * currency.value).toFixed(2), __jsx(\"del\", null, __jsx(\"span\", {\n    className: \"money\"\n  }, currency.symbol, (product.price * currency.value).toFixed(2)))))))), __jsx(\"div\", null, data && data.products.items.slice(9, 12).map((product, index) => __jsx(\"div\", {\n    className: \"media\",\n    key: index\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    className: \"img-fluid blur-up lazyload\",\n    src: product.images[0].src,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"media-body align-self-center\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  })), __jsx(\"a\", {\n    href: null\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, currency.symbol, ((product.price - product.price * product.discount / 100) * currency.value).toFixed(2), __jsx(\"del\", null, __jsx(\"span\", {\n    className: \"money\"\n  }, currency.symbol, (product.price * currency.value).toFixed(2))))))))))), __jsx(Col, {\n    xl: \"8\",\n    lg: \"8\",\n    md: \"12\"\n  }, __jsx(Tabs, {\n    className: \"theme-tab\"\n  }, __jsx(\"div\", {\n    className: \"bg-title-part\"\n  }, __jsx(\"h5\", {\n    className: \"title-border\"\n  }, \"RECOMMENDATIONS FOR YOU\"), __jsx(TabList, {\n    className: \"tabs tab-title\"\n  }, __jsx(Tab, {\n    className: \"current\"\n  }, \"New Products\"), __jsx(Tab, {\n    className: \"\"\n  }, \"Featured Products\"))), __jsx(\"div\", {\n    className: \"tab-content-cls ratio_asos\"\n  }, __jsx(TabPanel, {\n    className: \"tab-content active default\"\n  }, __jsx(Slider, _extends({}, Product4, {\n    className: \"product-4 game-product product-m no-arrow slick-initialized slick-slider\"\n  }), data && data.products.items.slice(0, 8).map((product, index) => __jsx(\"div\", {\n    key: index\n  }, __jsx(ProductItem, {\n    product: product,\n    onAddToCompareClicked: () => addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product),\n    key: index\n  }))))), __jsx(TabPanel, {\n    className: \"tab-content active default\"\n  }, __jsx(Slider, _extends({}, Product4, {\n    className: \"product-4 game-product product-m no-arrow\"\n  }), data && data.products.items.slice(4, 12).map((product, index) => __jsx(\"div\", {\n    key: index\n  }, __jsx(ProductItem, {\n    product: product,\n    onAddToCompareClicked: () => addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product),\n    key: index\n  }))))))), __jsx(\"div\", {\n    className: \"banner-tools\"\n  }, __jsx(Media, {\n    src: banner1,\n    alt: \"\",\n    className: \"img-fluid\"\n  }))))));\n};\n\nexport default ProductSlider;","map":null,"metadata":{},"sourceType":"module"}