{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport SettingContext from '../../helpers/theme-setting/SettingContext';\nimport { SlideUpDown } from \"../../services/script\";\nimport { ToastContainer } from 'react-toastify';\nimport { config } from './config.json';\nimport { Media, Col, Row, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar ThemeSettings = function ThemeSettings() {\n  var context = useContext(SettingContext);\n\n  var _useState = useState(false),\n      themeLayout = _useState[0],\n      setThemeLayout = _useState[1];\n\n  var layoutType = context.layoutFun;\n  var layoutColorFunc = context.layoutColorFun;\n  var layoutState = context.state;\n\n  var _useState2 = useState(false),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n  /*=====================\r\n   Tap on Top\r\n   ==========================*/\n\n\n  useEffect(function () {\n    if (config.layout_version && config.layout_type) {\n      document.body.className = \"\".concat(config.layout_version, \"  \").concat(config.layout_type);\n    }\n\n    if (localStorage.getItem(\"color\")) {\n      document.documentElement.style.setProperty('--theme-deafult', localStorage.getItem(\"color\"));\n    }\n\n    window.addEventListener('scroll', handleScroll);\n    SlideUpDown('setting-title');\n    return function () {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  var handleScroll = function handleScroll() {\n    if (true) {\n      if (document.documentElement.scrollTop > 600) {\n        document.querySelector(\".tap-top\").style = \"display: block\";\n      } else {\n        document.querySelector(\".tap-top\").style = \"display: none\";\n      }\n    }\n  };\n\n  var openSetting = function openSetting() {\n    if (true) {\n      document.getElementById(\"setting_box\").classList.add('open-setting');\n      document.getElementById(\"setting-icon\").classList.add('open-icon');\n    }\n  };\n\n  var closeSetting = function closeSetting() {\n    if (true) {\n      document.getElementById(\"setting_box\").classList.remove('open-setting');\n      document.getElementById(\"setting-icon\").classList.remove('open-icon');\n    }\n  };\n\n  var changeThemeLayout = function changeThemeLayout() {\n    setThemeLayout(!themeLayout);\n  };\n\n  if (themeLayout) {\n    if (true) {\n      document.body.classList.add('dark');\n      config.layout_version = 'dark';\n    }\n  } else {\n    if (true) {\n      document.body.classList.remove('dark');\n      config.layout_version = 'light';\n    }\n  }\n\n  return __jsx(\"div\", null, __jsx(\"a\", {\n    href: null,\n    onClick: function onClick() {\n      return openSetting();\n    }\n  }, __jsx(\"div\", {\n    className: \"setting-sidebar\",\n    id: \"setting-icon\"\n  }, __jsx(\"div\", null, __jsx(\"i\", {\n    className: \"fa fa-cog\",\n    \"aria-hidden\": \"true\"\n  })))), __jsx(\"div\", {\n    id: \"setting_box\",\n    className: \"setting-box\"\n  }, __jsx(\"a\", {\n    href: \"# \",\n    className: \"overlay\",\n    onClick: function onClick() {\n      return closeSetting();\n    }\n  }), __jsx(\"div\", {\n    className: \"setting_box_body\"\n  }, __jsx(\"div\", {\n    onClick: function onClick() {\n      return closeSetting();\n    }\n  }, __jsx(\"div\", {\n    className: \"sidebar-back text-left\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-left pr-2\",\n    \"aria-hidden\": \"true\"\n  }), \" Back\")), __jsx(\"div\", {\n    className: \"setting-body\"\n  }, __jsx(\"div\", {\n    className: \"setting-title\"\n  }, __jsx(\"h4\", null, \"color option\")), __jsx(\"div\", {\n    className: \"setting-contant\"\n  }, __jsx(\"ul\", {\n    className: \"color-box\"\n  }, __jsx(\"li\", null, __jsx(\"input\", {\n    id: \"colorPicker1\",\n    type: \"color\",\n    defaultValue: \"#ff4c3b\",\n    name: \"Background\",\n    onChange: function onChange(e) {\n      return layoutColorFunc(e);\n    }\n  })), __jsx(\"span\", {\n    className: \"ml-3\"\n  }, \"theme deafult color\"))), __jsx(\"div\", {\n    className: \"setting-title\"\n  }, __jsx(\"h4\", null, \"RTL\")), __jsx(\"div\", {\n    className: \"setting-contant\"\n  }, __jsx(\"ul\", {\n    className: \"setting_buttons\"\n  }, __jsx(\"li\", {\n    className: \"active\",\n    id: \"ltr_btn\"\n  }, __jsx(\"a\", {\n    href: \"# \",\n    className: \"btn setting_btn\",\n    onClick: function onClick() {\n      return layoutType(layoutState);\n    }\n  }, layoutState)))), __jsx(\"div\", {\n    className: \"buy_btn\"\n  }, __jsx(\"a\", {\n    href: \"https://themeforest.net/item/multikart-responsive-react-ecommerce-template/23067773?s_rank=1\",\n    className: \"btn btn-block purchase_btn\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\",\n    \"aria-hidden\": \"true\"\n  }), \" purchase Multikart now!\"), __jsx(\"a\", {\n    href: \"https://themeforest.net/item/multikart-responsive-angular-ecommerce-template/22905358?s_rank=3\",\n    className: \"btn btn-block purchase_btn\"\n  }, __jsx(Media, {\n    src: \"/assets/images/icon/angular.png\",\n    alt: \"\",\n    className: \"img-fluid\"\n  }), \" Multikart Angular\"), __jsx(\"a\", {\n    href: \"https://themeforest.net/item/multikart-responsive-ecommerce-html-template/22809967\",\n    className: \"btn btn-block purchase_btn\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-html5\",\n    \"aria-hidden\": \"true\"\n  }), \" Multikart HTML\"), __jsx(\"a\", {\n    href: \"https://themeforest.net/item/multikart-multipurpose-shopify-sections-theme/23093831?s_rank=1\",\n    className: \"btn btn-block purchase_btn\"\n  }, __jsx(Media, {\n    src: \"/assets/images/icon/shopify.png\",\n    alt: \"\",\n    className: \"img-fluid\"\n  }), \" Multikart Shopify\"))))), __jsx(\"div\", {\n    className: \"sidebar-btn dark-light-btn\"\n  }, __jsx(\"div\", {\n    className: \"dark-light\"\n  }, __jsx(\"div\", {\n    className: \"theme-layout-version\",\n    onClick: function onClick() {\n      return changeThemeLayout();\n    }\n  }, themeLayout ? 'Light' : 'Dark'))), __jsx(\"div\", {\n    className: \"addcart_btm_popup\",\n    id: \"fixed_cart_icon\"\n  }, __jsx(\"a\", {\n    href: null,\n    className: \"fixed_cart\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-clone\",\n    \"aria-hidden\": \"true\",\n    onClick: toggle,\n    title: \"Configuration\"\n  }))), __jsx(Modal, {\n    centered: true,\n    isOpen: modal,\n    toggle: toggle\n  }, __jsx(ModalHeader, {\n    toggle: toggle\n  }, \"Config\"), __jsx(ModalBody, {\n    className: \"p-3\"\n  }, Object.keys(config).map(function (key, i) {\n    return __jsx(\"p\", {\n      key: i\n    }, __jsx(\"span\", null, key, \":\"), __jsx(\"span\", null, config[key]));\n  })), __jsx(ModalFooter, null, __jsx(\"p\", {\n    className: \"lh-cls\"\n  }, __jsx(\"b\", null, \"Note: \"), \"Copy upper config and paste it in \", __jsx(\"b\", null, \"\\\"/components/customizer/config.json\\\"\"), \" \"))), __jsx(ToastContainer, null));\n};\n\nexport default ThemeSettings;","map":null,"metadata":{},"sourceType":"module"}