{"ast":null,"code":"import _defineProperty from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nimport { Media, Container, Form, Row, Input, Col } from \"reactstrap\";\nimport { PayPalButton } from \"react-paypal-button\";\nimport CartContext from \"../../../../helpers/cart\";\nimport paypal from \"../../../../public/assets/images/paypal.png\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from \"next/router\";\nimport Axios from \"axios\";\nimport { CurrencyContext } from \"../../../../helpers/Currency/CurrencyContext\";\nimport strip from 'stripe';\nimport GooglePayButton from '@google-pay/button-react'; // import  Razorpay = require('razorpay');\n// const stripe = require('stripe')('pk_live_51IYvwgAR19qkTg2Rtd20aLk5vwFsCRajMN8I9aZl8zFfXj14qDxppEDhfLMp51b9OohTumAh7vSlO6IccIP5iIh600zA024lK7');\n\nvar CheckoutPage = function CheckoutPage() {\n  var _jsx, _jsx2, _jsx3, _jsx4, _jsx5;\n\n  var cartContext = useContext(CartContext);\n  var cartItems = cartContext.state;\n  var cartTotal = cartContext.cartTotal.toFixed(2);\n  var curContext = useContext(CurrencyContext);\n  var symbol = curContext.state.symbol;\n\n  var _useState = useState({}),\n      obj = _useState[0],\n      setObj = _useState[1];\n\n  var _useState2 = useState(\"Gpay\"),\n      payment = _useState2[0],\n      setPayment = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors; // initialise the hook\n\n\n  var router = useRouter();\n\n  var checkhandle = function checkhandle(value) {\n    setPayment(value);\n  };\n  /** Launches payment request flow when user taps on buy button. */\n\n\n  var onBuyClicked = function onBuyClicked() {\n    var creditCardPaymentMethod = {\n      supportedMethods: 'basic-card',\n      data: {\n        supportedNetworks: ['visa', 'mastercard'],\n        supportedTypes: ['credit', 'debit']\n      }\n    };\n    var supportedInstruments = [{\n      supportedMethods: ['https://tez.google.com/pay'],\n      //supportedMethods:[creditCardPaymentMethod],\n      data: {\n        pa: 'shoptheworld@dbs',\n        pn: 'STW E-Commerce',\n        tr: '123456ABCDEFSD',\n        url: 'http://localhost:3000/page/account/checkout',\n        mc: '5045',\n        tn: 'Purchase in Merchant'\n      }\n    }];\n    var details = {\n      total: {\n        label: 'Total',\n        amount: {\n          currency: 'INR',\n          value: '10.01' //sample amount \n\n        }\n      },\n      displayItems: [{\n        label: 'Original Amount',\n        amount: {\n          currency: 'INR',\n          value: '10.01'\n        }\n      }]\n    };\n    var request = null;\n\n    try {\n      request = new PaymentRequest(supportedInstruments, details);\n      console.log(request);\n      /*request.show()\r\n      .then(function(result){\r\n          alert(\"hai\");\r\n      })\r\n       .catch(function(err){\r\n          alert('Payment Request Error: '+ err.message+' 74'); \r\n      });*/\n    } catch (e) {\n      alert('Payment Request Error: ' + e.message + '77');\n      console.log('Payment Request Error: ' + e.message); //return;\n    }\n\n    if (!request) {\n      alert('Web payments are not supported in this browser 77');\n      console.log('Web payments are not supported in this browser.'); // return;\n    }\n\n    var canMakePaymentPromise = checkCanMakePayment(request);\n    canMakePaymentPromise.then(function (result) {\n      showPaymentUI(request, result);\n    })[\"catch\"](function (err) {\n      console.log('Error in calling checkCanMakePayment: ' + err);\n    });\n  };\n\n  var canMakePaymentCache = 'canMakePaymentCache'; // const loadScript=(src) => \n\n  var checkCanMakePayment = function checkCanMakePayment(request) {\n    // Checks canMakePayment cache, and use the cache result if it exists. \n    if (sessionStorage.hasOwnProperty(canMakePaymentCache)) {\n      return Promise.resolve(JSON.parse(sessionStorage[canMakePaymentCache]));\n    } // If canMakePayment() isn't available, default to assuming that the method is supported\n\n\n    var canMakePaymentPromise = request.canMakePayment();\n\n    if (request.canMakePayment) {\n      canMakePaymentPromise = request.canMakePayment();\n    }\n\n    return canMakePaymentPromise.then(function (result) {\n      sessionStorage[canMakePaymentCache] = result;\n      return result;\n    })[\"catch\"](function (err) {\n      alert('Error calling canMakePayment: ' + err);\n      console.log('Error calling canMakePayment: ' + err);\n    });\n  };\n\n  var showPaymentUI = function showPaymentUI(request, canMakePayment) {\n    if (!canMakePayment) {\n      handleNotReadyToPay();\n      return;\n    } // Set payment timeout.\n\n\n    var paymentTimeout = window.setTimeout(function () {\n      window.clearTimeout(paymentTimeout);\n      request.abort().then(function () {\n        alert('Payment timed out after 20 mins 129');\n        console.log('Payment timed out after 20 mins');\n      })[\"catch\"](function () {\n        alert('Unable to abort,user is in process of paying 132');\n        console.log('Unable to abort,user is in process of paying');\n      });\n    }, 20 * 60 * 1000);\n    request.show().then(function (paymentResponse) {\n      window.clearTimeout(paymentTimeout);\n      alert(\"Request Success\");\n      console.log(paymentResponse);\n      processResponse(paymentResponse); // Handle response from browser\n    })[\"catch\"](function (err) {\n      alert(err + '142');\n      console.log(err);\n    });\n  };\n\n  var handleNotReadyToPay = function handleNotReadyToPay() {\n    alert(\"Tez is not ready to handle 149\");\n  };\n\n  var processResponse = function processResponse(paymentResponse) {\n    var paymentResponseString = paymentResponseToJsonString(paymentResponse);\n    console.log(paymentResponseString);\n    /* fetch('/buy',{\r\n        method: 'POST',\r\n        headers: new Headers({'Content-Type':'application/json'}),\r\n        body:paymentResponseString\r\n    })\r\n    .then(function(buyResult){\r\n        console.log('Buy Result'+buyResult);   \r\n    })\r\n    .catch(function(err){\r\n      console.log('Unable to process payment. '+err);   \r\n    });*/\n  };\n\n  var loadScript = function loadScript(src) {\n    return new Promise(function (resolve) {\n      var script = document.createElement('script');\n      script.src = src;\n\n      script.onload = function () {\n        resolve(true);\n      };\n\n      script.onerror = function () {\n        resolve(false);\n      };\n\n      document.body.appendChild(script);\n    });\n  };\n\n  var razorPayPaymentHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(filledData) {\n      var res, API_URL, orderUrl, response, data, options, rzp1;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return loadScript('https://checkout.razorpay.com/v1/checkout.js');\n\n            case 2:\n              res = _context2.sent;\n\n              if (res) {\n                _context2.next = 6;\n                break;\n              }\n\n              alert('Razorpay SDK failed to load. Are you online?');\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              API_URL = \"http://localhost:7000/razorpay/\";\n              orderUrl = \"\".concat(API_URL, \"order\");\n              _context2.next = 10;\n              return Axios.post(orderUrl, {\n                amount: 1\n              });\n\n            case 10:\n              response = _context2.sent;\n              data = response.data;\n              console.log(\"App -> razorPayPaymentHandler -> data\", data);\n              options = {\n                key: \"\",\n                //replace razorpay API key\n                name: filledData.name,\n                description: filledData.firstName,\n                order_id: data.id,\n                handler: function () {\n                  var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                    var paymentId, url, captureResponse, successObj, captured;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.prev = 0;\n                            paymentId = response.razorpay_payment_id;\n                            console.log(paymentId);\n                            url = \"http://localhost:7000/razorpay/capture/\".concat(paymentId);\n                            _context.next = 6;\n                            return Axios.post(url, {\n                              amount: 1\n                            });\n\n                          case 6:\n                            captureResponse = _context.sent;\n                            successObj = JSON.parse(captureResponse.data);\n                            captured = successObj.captured;\n                            console.log(\"App -> razorPayPaymentHandler -> captured\", successObj);\n\n                            if (captured) {\n                              // swal(\"Payment Successfull\", \"\", \"success\");\n                              console.log(\"success\");\n\n                              _this.setState({\n                                name: \"\",\n                                decription: \"\",\n                                amount: \"\"\n                              });\n                            }\n\n                            _context.next = 16;\n                            break;\n\n                          case 13:\n                            _context.prev = 13;\n                            _context.t0 = _context[\"catch\"](0);\n                            console.log(_context.t0);\n\n                          case 16:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[0, 13]]);\n                  }));\n\n                  function handler(_x2) {\n                    return _handler.apply(this, arguments);\n                  }\n\n                  return handler;\n                }(),\n                theme: {\n                  color: \"#686CFD\"\n                }\n              };\n              rzp1 = new window.Razorpay(options);\n              rzp1.open();\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function razorPayPaymentHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSuccess = function onSuccess(payment) {\n    console.log(payment);\n    router.push({\n      pathname: \"/page/order-success\",\n      state: {\n        payment: payment,\n        items: cartItems,\n        orderTotal: total,\n        symbol: symbol\n      }\n    });\n  };\n\n  var onSubmit = function onSubmit(data) {\n    if (data !== \"\") {\n      if (payment == \"stripe\") {} else if (payment == \"Razorpay\") {\n        razorPayPaymentHandler(data);\n      } else if (payment == \"Gpay\") {\n        onBuyClicked(); // razorPayPaymentHandler(data);\n      } // getServerSideProps();\n      // const paymentIntent  =  stripe.paymentIntents.create({\n      //   amount: 1,\n      //   currency: 'usd',\n      //   payment_method_types: ['card'],\n      //   receipt_email: 'jenny.rosen@example.com',\n      // }).then((res)=>{\n      //   console.log(res);\n      // });\n      // setPayment\n\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  var setStateFromInput = function setStateFromInput(event) {\n    obj[event.target.name] = event.target.value;\n    setObj(obj);\n  };\n\n  var onCancel = function onCancel(data) {\n    console.log(\"The payment was cancelled!\", data);\n  };\n\n  var onError = function onError(err) {\n    console.log(\"Paypal not display\");\n    console.log(\"Error!\", err);\n  };\n\n  var paypalOptions = {\n    clientId: \"ASgLRZ4iCd_ijakIF5qE9CLiJY-lOiQN9kF50GNJ4d4g5lCJq5PhIaqhOSI9bJObkp4X6mgD0Op_DBCf\",\n    currency: \"USD\",\n    debug: true,\n    intent: \"capture\"\n  };\n  return __jsx(\"section\", {\n    className: \"section-b-space\"\n  }, __jsx(Container, null, __jsx(\"div\", {\n    className: \"checkout-page\"\n  }, __jsx(\"div\", {\n    className: \"checkout-form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(Row, null, __jsx(Col, {\n    lg: \"6\",\n    sm: \"12\",\n    xs: \"12\"\n  }, __jsx(\"div\", {\n    className: \"checkout-title\"\n  }, __jsx(\"h3\", null, \"Billing Details\")), __jsx(\"div\", {\n    className: \"row check-out\"\n  }, __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"First Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"\".concat(errors.firstName ? \"error_border\" : \"\"),\n    name: \"first_name\",\n    ref: register({\n      required: true\n    })\n  }), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.firstName && \"First name is required\")), __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"Last Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"\".concat(errors.last_name ? \"error_border\" : \"\"),\n    name: \"last_name\",\n    ref: register({\n      required: true\n    })\n  }), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.last_name && \"Last name is required\")), __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"Phone\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"\".concat(errors.phone ? \"error_border\" : \"\"),\n    ref: register({\n      pattern: /\\d+/\n    })\n  }), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.phone && \"Please enter number for phone.\")), __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"Email Address\"), __jsx(\"input\", (_jsx = {\n    className: \"form-control\"\n  }, _defineProperty(_jsx, \"className\", \"\".concat(errors.email ? \"error_border\" : \"\")), _defineProperty(_jsx, \"type\", \"text\"), _defineProperty(_jsx, \"name\", \"email\"), _defineProperty(_jsx, \"ref\", register({\n    required: true,\n    pattern: /^\\S+@\\S+$/i\n  })), _jsx)), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.email && \"Please enter proper email address .\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-12 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"Country\"), __jsx(\"select\", {\n    name: \"country\",\n    ref: register({\n      required: true\n    })\n  }, __jsx(\"option\", null, \"India\"), __jsx(\"option\", null, \"South Africa\"), __jsx(\"option\", null, \"United State\"), __jsx(\"option\", null, \"Australia\"))), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-12 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"Address\"), __jsx(\"input\", (_jsx2 = {\n    className: \"form-control\"\n  }, _defineProperty(_jsx2, \"className\", \"\".concat(errors.address ? \"error_border\" : \"\")), _defineProperty(_jsx2, \"type\", \"text\"), _defineProperty(_jsx2, \"name\", \"address\"), _defineProperty(_jsx2, \"ref\", register({\n    required: true,\n    min: 20,\n    max: 120\n  })), _defineProperty(_jsx2, \"placeholder\", \"Street address\"), _jsx2)), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.address && \"Please right your address .\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-12 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"Town/City\"), __jsx(\"input\", (_jsx3 = {\n    className: \"form-control\",\n    type: \"text\"\n  }, _defineProperty(_jsx3, \"className\", \"\".concat(errors.city ? \"error_border\" : \"\")), _defineProperty(_jsx3, \"name\", \"city\"), _defineProperty(_jsx3, \"ref\", register({\n    required: true\n  })), _defineProperty(_jsx3, \"onChange\", setStateFromInput), _jsx3)), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.city && \"select one city\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-6 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"State / County\"), __jsx(\"input\", (_jsx4 = {\n    className: \"form-control\",\n    type: \"text\"\n  }, _defineProperty(_jsx4, \"className\", \"\".concat(errors.state ? \"error_border\" : \"\")), _defineProperty(_jsx4, \"name\", \"state\"), _defineProperty(_jsx4, \"ref\", register({\n    required: true\n  })), _defineProperty(_jsx4, \"onChange\", setStateFromInput), _jsx4)), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.state && \"select one state\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-6 col-xs-12\"\n  }, __jsx(\"div\", {\n    className: \"field-label\"\n  }, \"Postal Code\"), __jsx(\"input\", (_jsx5 = {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"pincode\"\n  }, _defineProperty(_jsx5, \"className\", \"\".concat(errors.pincode ? \"error_border\" : \"\")), _defineProperty(_jsx5, \"ref\", register({\n    pattern: /\\d+/\n  })), _jsx5)), __jsx(\"span\", {\n    className: \"error-message\"\n  }, errors.pincode && \"Required integer\")), __jsx(\"div\", {\n    className: \"form-group col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"create_account\",\n    id: \"account-option\"\n  }), \"\\u2002\", \" \", __jsx(\"label\", {\n    htmlFor: \"account-option\"\n  }, \"Create An Account?\")))), __jsx(Col, {\n    lg: \"6\",\n    sm: \"12\",\n    xs: \"12\"\n  }, cartItems && cartItems.length > 0 > 0 ? __jsx(\"div\", {\n    className: \"checkout-details\"\n  }, __jsx(\"div\", {\n    className: \"order-box\"\n  }, __jsx(\"div\", {\n    className: \"title-box\"\n  }, __jsx(\"div\", null, \"Product \", __jsx(\"span\", null, \"Total\"))), __jsx(\"ul\", {\n    className: \"qty\"\n  }, cartItems.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: index\n    }, item.title, \" \\xD7 \", item.qty, __jsx(\"span\", null, symbol, item.total.toFixed(2)));\n  })), __jsx(\"ul\", {\n    className: \"sub-total\"\n  }, __jsx(\"li\", null, \"Subtotal\", __jsx(\"span\", {\n    className: \"count\"\n  }, symbol, cartTotal)), __jsx(\"li\", null, \"Shipping\", __jsx(\"div\", {\n    className: \"shipping\"\n  }, __jsx(\"div\", {\n    className: \"shopping-option\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"free-shipping\",\n    id: \"free-shipping\"\n  }), __jsx(\"label\", {\n    htmlFor: \"free-shipping\"\n  }, \"Free Shipping\")), __jsx(\"div\", {\n    className: \"shopping-option\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"local-pickup\",\n    id: \"local-pickup\"\n  }), __jsx(\"label\", {\n    htmlFor: \"local-pickup\"\n  }, \"Local Pickup\"))))), __jsx(\"ul\", {\n    className: \"total\"\n  }, __jsx(\"li\", null, \"Total\", \" \", __jsx(\"span\", {\n    className: \"count\"\n  }, symbol, cartTotal)))), __jsx(\"div\", {\n    className: \"payment-box\"\n  }, __jsx(\"div\", {\n    className: \"upper-box\"\n  }, __jsx(\"div\", {\n    className: \"payment-options\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"div\", {\n    className: \"radio-option gpay\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"payment-group\",\n    id: \"payment-4\",\n    defaultChecked: true,\n    onClick: function onClick() {\n      return checkhandle(\"Gpay\");\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"payment-4\"\n  }, \"Gpay\"))), __jsx(\"li\", null, __jsx(\"div\", {\n    className: \"radio-option Razorpay\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"payment-group\",\n    id: \"payment-3\",\n    onClick: function onClick() {\n      return checkhandle(\"Razorpay\");\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"payment-3\"\n  }, \"Razorpay\"))), __jsx(\"li\", null, __jsx(\"div\", {\n    className: \"radio-option stripe\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"payment-group\",\n    id: \"payment-2\",\n    onClick: function onClick() {\n      return checkhandle(\"stripe\");\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"payment-2\"\n  }, \"Stripe\"))), __jsx(\"li\", null, __jsx(\"div\", {\n    className: \"radio-option paypal\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"payment-group\",\n    id: \"payment-1\",\n    onClick: function onClick() {\n      return checkhandle(\"paypal\");\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"payment-1\"\n  }, \"PayPal\", __jsx(\"span\", {\n    className: \"image\"\n  }, __jsx(Media, {\n    src: paypal,\n    alt: \"\"\n  })))))))), cartTotal !== 0 ? __jsx(\"div\", {\n    className: \"text-right\"\n  }, payment === \"stripe\" ? __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-solid btn\"\n  }, \"Place Order\") : payment === \"paypal\" ? __jsx(PayPalButton, {\n    paypalOptions: paypalOptions,\n    amount: 1,\n    onPaymentSuccess: onSuccess,\n    onPaymentError: onError,\n    onApprove: onSuccess,\n    onPaymentCancel: onCancel\n  }) : payment === \"Razorpay\" ? __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-solid btn\"\n  }, \"Razorpay Place Order\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-solid btn\"\n  }, \"Gpay Place Order\")) : \"\")) : \"\")))))));\n};\n\nexport var __N_SSP = true;\nexport default CheckoutPage;","map":null,"metadata":{},"sourceType":"module"}