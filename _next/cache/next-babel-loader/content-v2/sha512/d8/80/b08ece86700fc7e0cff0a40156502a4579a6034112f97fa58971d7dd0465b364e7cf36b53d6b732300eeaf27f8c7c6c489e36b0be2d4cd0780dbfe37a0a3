{"ast":null,"code":"import _extends from \"C:/Mani/Office/Template/StwEcommerce/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"C:/Mani/Office/Template/StwEcommerce/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Template\\\\StwEcommerce\\\\frontend\\\\components\\\\common\\\\Collections\\\\TabCollection9.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n            items {\\n                id\\n                title\\n                description\\n                type\\n                brand\\n                category \\n                price\\n                new\\n                sale\\n                stock\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from 'react';\nimport { TabList, TabPanel, Tabs, Tab } from 'react-tabs';\nimport { Col, Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Slider from 'react-slick';\nimport ProductItem from '../product-box/ProductBox3';\nimport CartContext from '../../../helpers/cart/index';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport { Product3 } from '../../../services/script';\nimport PostLoader from '../PostLoader';\nimport Background from '../../../public/assets/images/parallax/23.jpg';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar TabCollection = function TabCollection(_ref) {\n  _s();\n\n  var type = _ref.type,\n      cartClass = _ref.cartClass,\n      spanClass = _ref.spanClass;\n\n  var _useState = useState(type),\n      activeTab = _useState[0],\n      setActiveTab = _useState[1];\n\n  var context = useContext(CartContext);\n  var wishListContext = useContext(WishlistContext);\n  var contextCompare = useContext(CompareContext);\n  var quatity = context.quatity;\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: activeTab,\n      indexFrom: 0,\n      limit: 26\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"full-banner parallax tools-parallax-product tab-left ratio_square tools-grey border-box bg-size blur-up lazyloaded\",\n    style: {\n      backgroundImage: \"url(\" + Background + \")\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, __jsx(Tabs, {\n    className: \"theme-tab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"left-side\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"left-tab-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }\n  }, \"our shop\"), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }, \"Buy Marijuana\")), __jsx(TabList, {\n    className: \"tabs tab-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, __jsx(Tab, {\n    className: activeTab == type ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab(type);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, __jsx(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }, \"Cannabis Oils\")), __jsx(Tab, {\n    className: activeTab == 'marijuana' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab('marijuana');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 41\n    }\n  }, __jsx(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 45\n    }\n  }, \"pre rolls\")), __jsx(Tab, {\n    className: activeTab == 'marijuana' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab('marijuana');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  }, __jsx(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 45\n    }\n  }, \"marijuana edibles\")), __jsx(Tab, {\n    className: activeTab == 'marijuana' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab('marijuana');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, __jsx(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 45\n    }\n  }, \"marijuana weeds\")), __jsx(Tab, {\n    className: activeTab == 'marijuana' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab('marijuana');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 41\n    }\n  }, __jsx(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }, \"CBD oils\")), __jsx(Tab, {\n    className: activeTab == 'marijuana' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab('marijuana');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }, __jsx(\"a\", {\n    href: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }\n  }, \"marijuana seeds\")))), __jsx(\"div\", {\n    className: \"tab-content-cls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, __jsx(TabPanel, {\n    id: \"tab-1\",\n    className: \"tab-content active default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, __jsx(Slider, _extends({}, Product3, {\n    className: \"product-3 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(0, 5).map(function (product, index) {\n    return __jsx(ProductItem, {\n      product: product,\n      spanClass: spanClass,\n      addCart: function addCart() {\n        return context.addToCart(product, quatity);\n      },\n      key: index,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addWishlist: function addWishlist() {\n        return wishListContext.addToWish(product);\n      },\n      cartclassName: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 53\n      }\n    });\n  }))), __jsx(TabPanel, {\n    id: \"tab-2\",\n    className: \"tab-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 49\n    }\n  })) : __jsx(Slider, _extends({}, Product3, {\n    className: \"product-3 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(5, 10).map(function (product, index) {\n    return __jsx(ProductItem, {\n      product: product,\n      spanClass: spanClass,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quatity);\n      },\n      key: index,\n      addWishlist: function addWishlist() {\n        return wishListContext.addToWish(product);\n      },\n      cartclassName: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 53\n      }\n    });\n  }))), __jsx(TabPanel, {\n    id: \"tab-3\",\n    className: \"tab-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 49\n    }\n  })) : __jsx(Slider, _extends({}, Product3, {\n    className: \"product-3 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(10, 15).map(function (product, index) {\n    return __jsx(ProductItem, {\n      product: product,\n      spanClass: spanClass,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quatity);\n      },\n      key: index,\n      addWishlist: function addWishlist() {\n        return wishListContext.addToWish(product);\n      },\n      cartclassName: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 53\n      }\n    });\n  }))), __jsx(TabPanel, {\n    id: \"tab-4\",\n    className: \"tab-content \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 49\n    }\n  })) : __jsx(Slider, _extends({}, Product3, {\n    className: \"product-3 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(15, 20).map(function (product, index) {\n    return __jsx(ProductItem, {\n      product: product,\n      spanClass: spanClass,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quatity);\n      },\n      key: index,\n      addWishlist: function addWishlist() {\n        return wishListContext.addToWish(product);\n      },\n      cartclassName: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 53\n      }\n    });\n  }))), __jsx(TabPanel, {\n    id: \"tab-5\",\n    className: \"tab-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 37\n    }\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 49\n    }\n  })) : __jsx(Slider, _extends({}, Product3, {\n    className: \"product-3 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(20, 25).map(function (product, index) {\n    return __jsx(ProductItem, {\n      product: product,\n      spanClass: spanClass,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quatity);\n      },\n      key: index,\n      addWishlist: function addWishlist() {\n        return wishListContext.addToWish(product);\n      },\n      cartclassName: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 53\n      }\n    });\n  }))), __jsx(TabPanel, {\n    id: \"tab-6\",\n    className: \"tab-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 49\n    }\n  }), __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 49\n    }\n  })) : __jsx(Slider, _extends({}, Product3, {\n    className: \"product-3 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(0, 10).map(function (product, index) {\n    return __jsx(ProductItem, {\n      product: product,\n      spanClass: spanClass,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quatity);\n      },\n      key: index,\n      addWishlist: function addWishlist() {\n        return wishListContext.addToWish(product);\n      },\n      cartclassName: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 53\n      }\n    });\n  }))))))))));\n};\n\n_s(TabCollection, \"iKOdIA1prfV9Xdu0H8k82Lytf6U=\", false, function () {\n  return [useQuery];\n});\n\n_c = TabCollection;\nexport default TabCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabCollection\");","map":{"version":3,"sources":["C:/Mani/Office/Template/StwEcommerce/frontend/components/common/Collections/TabCollection9.js"],"names":["React","useState","useContext","TabList","TabPanel","Tabs","Tab","Col","Container","Row","useQuery","gql","Slider","ProductItem","CartContext","WishlistContext","CompareContext","Product3","PostLoader","Background","GET_PRODUCTS","TabCollection","type","cartClass","spanClass","activeTab","setActiveTab","context","wishListContext","contextCompare","quatity","variables","indexFrom","limit","loading","data","backgroundImage","products","items","slice","map","product","index","addToCart","addToCompare","addToWish","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TabList, TabPanel, Tabs, Tab } from 'react-tabs';\nimport { Col, Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport Slider from 'react-slick';\nimport ProductItem from '../product-box/ProductBox3';\nimport CartContext from '../../../helpers/cart/index'\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport { Product3 } from '../../../services/script';\nimport PostLoader from '../PostLoader';\nimport Background from '../../../public/assets/images/parallax/23.jpg';\n\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                sale\n                stock\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst TabCollection = ({ type, cartClass, spanClass }) => {\n    const [activeTab, setActiveTab] = useState(type);\n    const context = useContext(CartContext);\n    const wishListContext = useContext(WishlistContext);\n    const contextCompare = useContext(CompareContext);\n    const quatity = context.quatity;\n\n    var { loading, data } = useQuery(GET_PRODUCTS, {\n        variables: {\n            type: activeTab,\n            indexFrom: 0,\n            limit: 26\n        }\n    });\n\n\n\n    return (\n        <>\n            <section className=\"full-banner parallax tools-parallax-product tab-left ratio_square tools-grey border-box bg-size blur-up lazyloaded\" style={{ backgroundImage: \"url(\" + Background + \")\" }}>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Tabs className=\"theme-tab\">\n                                <div className=\"left-side\">\n                                    <div className=\"left-tab-title\">\n                                        <h4>our shop</h4>\n                                        <h3>Buy Marijuana</h3>\n                                    </div>\n                                    <TabList className=\"tabs tab-title\">\n                                        <Tab className={activeTab == type ? 'active' : ''} onClick={() => setActiveTab(type)}>\n                                            <a href={null}>Cannabis Oils</a>\n                                        </Tab>\n                                        <Tab className={activeTab == 'marijuana' ? 'active' : ''} onClick={() => setActiveTab('marijuana')}>\n                                            <a href={null}>pre rolls</a>\n                                        </Tab>\n                                        <Tab className={activeTab == 'marijuana' ? 'active' : ''} onClick={() => setActiveTab('marijuana')}>\n                                            <a href={null}>marijuana edibles</a>\n                                        </Tab>\n                                        <Tab className={activeTab == 'marijuana' ? 'active' : ''} onClick={() => setActiveTab('marijuana')}>\n                                            <a href={null}>marijuana weeds</a>\n                                        </Tab>\n                                        <Tab className={activeTab == 'marijuana' ? 'active' : ''} onClick={() => setActiveTab('marijuana')}>\n                                            <a href={null}>CBD oils</a>\n                                        </Tab>\n                                        <Tab className={activeTab == 'marijuana' ? 'active' : ''} onClick={() => setActiveTab('marijuana')}>\n                                            <a href={null}>marijuana seeds</a>\n                                        </Tab>\n                                    </TabList>\n                                </div>\n                                <div className=\"tab-content-cls\">\n                                    <TabPanel id=\"tab-1\" className=\"tab-content active default\">\n                                            <Slider {...Product3} className=\"product-3 product-m no-arrow\">\n                                                {data && data.products.items.slice(0, 5).map((product, index) =>\n                                                    <ProductItem product={product}\n                                                        spanClass={spanClass}\n                                                        addCart={() => context.addToCart(product, quatity)} key={index}\n                                                        addCompare={() => contextCompare.addToCompare(product)}\n                                                        addWishlist={() => wishListContext.addToWish(product)}\n                                                        cartclassName={cartClass} />\n                                                )\n                                                }\n                                            </Slider>\n                                    </TabPanel>\n                                    <TabPanel id=\"tab-2\" className=\"tab-content\">\n                                        {(!data || !data.products || !data.products.items || data.products.items.length === 0 || loading) ?\n                                            <>\n                                                <PostLoader />\n                                                <PostLoader />\n                                                <PostLoader />\n                                            </>\n                                            :\n                                            <Slider {...Product3} className=\"product-3 product-m no-arrow\">\n                                                {data && data.products.items.slice(5, 10).map((product, index) =>\n                                                    <ProductItem product={product}\n                                                        spanClass={spanClass}\n                                                        addCompare={() => contextCompare.addToCompare(product)}\n                                                        addCart={() => context.addToCart(product, quatity)} key={index}\n                                                        addWishlist={() => wishListContext.addToWish(product)}\n                                                        cartclassName={cartClass} />\n                                                )\n                                                }\n                                            </Slider>\n                                        }\n                                    </TabPanel>\n                                    <TabPanel id=\"tab-3\" className=\"tab-content\">\n                                        {(!data || !data.products || !data.products.items || data.products.items.length === 0 || loading) ?\n                                            <>\n                                                <PostLoader />\n                                                <PostLoader />\n                                                <PostLoader />\n                                            </>\n                                            :\n                                            <Slider {...Product3} className=\"product-3 product-m no-arrow\">\n\n                                                {data && data.products.items.slice(10, 15).map((product, index) =>\n                                                    <ProductItem product={product}\n                                                        spanClass={spanClass}\n                                                        addCompare={() => contextCompare.addToCompare(product)}\n                                                        addCart={() => context.addToCart(product, quatity)} key={index}\n                                                        addWishlist={() => wishListContext.addToWish(product)}\n                                                        cartclassName={cartClass} />\n                                                )\n                                                }\n\n                                            </Slider>\n                                        }\n                                    </TabPanel>\n                                    <TabPanel id=\"tab-4\" className=\"tab-content \">\n                                        {(!data || !data.products || !data.products.items || data.products.items.length === 0 || loading) ?\n                                            <>\n                                                <PostLoader />\n                                                <PostLoader />\n                                                <PostLoader />\n                                            </>\n                                            :\n                                            <Slider {...Product3} className=\"product-3 product-m no-arrow\">\n\n                                                {data && data.products.items.slice(15, 20).map((product, index) =>\n                                                    <ProductItem product={product}\n                                                        spanClass={spanClass}\n                                                        addCompare={() => contextCompare.addToCompare(product)}\n                                                        addCart={() => context.addToCart(product, quatity)} key={index}\n                                                        addWishlist={() => wishListContext.addToWish(product)}\n                                                        cartclassName={cartClass} />\n                                                )\n                                                }\n\n                                            </Slider>\n                                        }\n                                    </TabPanel>\n                                    <TabPanel id=\"tab-5\" className=\"tab-content\">\n                                        {(!data || !data.products || !data.products.items || data.products.items.length === 0 || loading) ?\n                                            <>\n                                                <PostLoader />\n                                                <PostLoader />\n                                                <PostLoader />\n                                            </>\n                                            :\n                                            <Slider {...Product3} className=\"product-3 product-m no-arrow\">\n\n                                                {data && data.products.items.slice(20, 25).map((product, index) =>\n                                                    <ProductItem product={product}\n                                                        spanClass={spanClass}\n                                                        addCompare={() => contextCompare.addToCompare(product)}\n                                                        addCart={() => context.addToCart(product, quatity)} key={index}\n                                                        addWishlist={() => wishListContext.addToWish(product)}\n                                                        cartclassName={cartClass} />\n                                                )\n                                                }\n\n                                            </Slider>\n                                        }\n                                    </TabPanel>\n                                    <TabPanel id=\"tab-6\" className=\"tab-content\">\n                                        {(!data || !data.products || !data.products.items || data.products.items.length === 0 || loading) ?\n                                            <>\n                                                <PostLoader />\n                                                <PostLoader />\n                                                <PostLoader />\n                                            </>\n                                            :\n                                            <Slider {...Product3} className=\"product-3 product-m no-arrow\">\n                                                {data && data.products.items.slice(0, 10).map((product, index) =>\n                                                    <ProductItem product={product}\n                                                        spanClass={spanClass}\n                                                        addCompare={() => contextCompare.addToCompare(product)}\n                                                        addCart={() => context.addToCart(product, quatity)} key={index}\n                                                        addWishlist={() => wishListContext.addToWish(product)}\n                                                        cartclassName={cartClass} />\n                                                )\n                                                }\n\n                                            </Slider>\n                                        }\n                                    </TabPanel>\n                                </div>\n                            </Tabs>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </>\n    )\n}\n\nexport default TabCollection;"]},"metadata":{},"sourceType":"module"}