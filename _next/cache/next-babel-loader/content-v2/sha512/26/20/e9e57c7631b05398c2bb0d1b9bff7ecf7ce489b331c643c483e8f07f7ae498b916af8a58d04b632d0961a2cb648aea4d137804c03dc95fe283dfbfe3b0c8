{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query product ($id:Int!) {\\n        product (id:$id) {\\n            id\\n            title\\n            description\\n            type\\n            brand\\n            category \\n            price\\n            new\\n            sale\\n            discount\\n            stock\\n            variants{\\n              id\\n              sku\\n              size\\n              color\\n              image_id\\n            }\\n            images{\\n              alt\\n              src\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport Slider from 'react-slick';\nimport { Modal, ModalBody, ModalHeader, Media, Input } from 'reactstrap';\nimport CountdownComponent from '../../../components/common/widgets/countdownComponent';\nimport sizeChart from '../../../public/assets/images/size-chart.jpg';\nimport CartContext from '../../../helpers/cart';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar GET_SINGLE_PRODUCTS = gql(_templateObject());\n\nvar DetailBox = function DetailBox(_ref) {\n  var item = _ref.item,\n      changeColorVar = _ref.changeColorVar;\n\n  var _useState = useState(false),\n      modal = _useState[0],\n      setModal = _useState[1];\n\n  var CurContect = useContext(CurrencyContext);\n  var symbol = CurContect.state.symbol;\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var cartContext = useContext(CartContext);\n  var addToCart = cartContext.addToCart;\n  var plusQty = cartContext.plusQty;\n  var minusQty = cartContext.minusQty;\n  var quantity = cartContext.quantity;\n  var uniqueColor = [];\n  var uniqueSize = [];\n\n  var onCloseModal = function onCloseModal() {\n    setOpen(false);\n  };\n\n  var changeQty = function changeQty(e) {\n    setQuantity(parseInt(e.target.value));\n  };\n\n  return __jsx(\"div\", {\n    className: \"product-right product-form-box\"\n  }, __jsx(\"h4\", null, __jsx(\"del\", null, item.price, \"%\"), __jsx(\"span\", null, item.discount, \"% off\")), __jsx(\"h3\", null, symbol, item.price), __jsx(\"ul\", null, item.variants.map(function (vari) {\n    var findItem = uniqueColor.find(function (x) {\n      return x.color === vari.color;\n    });\n    if (!findItem) uniqueColor.push(vari);\n    var findItemSize = uniqueSize.find(function (x) {\n      return x === vari.size;\n    });\n    if (!findItemSize) uniqueSize.push(vari.size);\n  }), uniqueColor ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, uniqueColor.map(function (vari, i) {\n    return __jsx(\"li\", {\n      className: vari.color,\n      key: i,\n      title: vari.color,\n      onClick: function onClick() {\n        return changeColorVar(i);\n      }\n    });\n  })) : ''), __jsx(\"div\", {\n    className: \"product-description border-product\"\n  }, __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"Time Reminder\"), __jsx(CountdownComponent, null), __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"select size\"), item.variants ? __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"size-box\"\n  }, __jsx(\"ul\", null, uniqueSize.map(function (data, i) {\n    return __jsx(\"li\", {\n      key: i\n    }, __jsx(\"a\", {\n      href: null\n    }, data));\n  })))) : '', __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"quantity\"), __jsx(\"div\", {\n    className: \"qty-box\"\n  }, __jsx(\"div\", {\n    className: \"input-group\"\n  }, __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-left-minus\",\n    onClick: minusQty,\n    \"data-type\": \"minus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-left\"\n  }))), __jsx(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: changeQty,\n    className: \"form-control input-number\"\n  }), __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-right-plus\",\n    onClick: function onClick() {\n      return plusQty(item);\n    },\n    \"data-type\": \"plus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-right\"\n  })))))), __jsx(\"div\", {\n    className: \"product-buttons\"\n  }, __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addtocart\",\n    onClick: function onClick() {\n      return addToCart(item, quantity);\n    },\n    className: \"btn btn-solid\"\n  }, \"add to cart\"), \" \", __jsx(\"a\", {\n    href: \"#\",\n    className: \"btn btn-solid\"\n  }, \"buy now\")));\n};\n\nexport default DetailBox;","map":null,"metadata":{},"sourceType":"module"}