{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Template/StwEcommerce/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Template\\\\StwEcommerce\\\\frontend\\\\components\\\\headers\\\\common\\\\currency.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n   query {\\n    getCurrency {\\n        currency\\n        name\\n        symbol\\n        value\\n    }\\n   }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Media } from 'reactstrap';\nimport language from '../../constant/langConfig.json';\nimport i18next from '../../constant/i18n';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nimport { withApollo } from '../../../helpers/apollo/apollo';\nvar GET_CURRENCY = gql(_templateObject());\n\nvar Currency = function Currency(_ref) {\n  _s();\n\n  var icon = _ref.icon;\n\n  var _useQuery = useQuery(GET_CURRENCY),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  var Context = useContext(CurrencyContext);\n  var selectedCurrency = Context.currencyContext.selectedCurrency;\n\n  var changeLanguage = function changeLanguage(lng) {\n    i18next.changeLanguage(lng);\n  };\n\n  return __jsx(\"li\", {\n    className: \"onhover-div mobile-setting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Media, {\n    src: icon,\n    className: \"img-fluid\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }), __jsx(\"i\", {\n    className: \"fa fa-cog\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"show-div setting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"language\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, language.map(function (item, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      href: null,\n      onClick: function onClick() {\n        changeLanguage(item.val);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 38\n      }\n    }, item.lang));\n  })), __jsx(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"currency\"), __jsx(\"ul\", {\n    className: \"list-inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, data && data.getCurrency.map(function (cur, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      onClick: function onClick() {\n        return selectedCurrency(cur);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, cur.symbol, \"  \", cur.currency));\n  }))));\n};\n\n_s(Currency, \"WrCgnjOCMiQ2+DQKSXCVDTSxwkk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Currency;\nexport default _c2 = withApollo(Currency);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Currency\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Mani/Office/Template/StwEcommerce/frontend/components/headers/common/currency.js"],"names":["React","useContext","useQuery","gql","Media","language","i18next","CurrencyContext","withApollo","GET_CURRENCY","Currency","icon","loading","data","Context","selectedCurrency","currencyContext","changeLanguage","lng","map","item","i","val","lang","getCurrency","cur","symbol","currency"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AAGA,IAAMC,YAAY,GAAGN,GAAH,mBAAlB;;AAWA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAAA,kBACDT,QAAQ,CAACO,YAAD,CADP;AAAA,MACnBG,OADmB,aACnBA,OADmB;AAAA,MACVC,IADU,aACVA,IADU;;AAEzB,MAAMC,OAAO,GAAGb,UAAU,CAACM,eAAD,CAA1B;AACA,MAAMQ,gBAAgB,GAAGD,OAAO,CAACE,eAAR,CAAwBD,gBAAjD;;AAEA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAI;AAC1BZ,IAAAA,OAAO,CAACW,cAAR,CAAuBC,GAAvB;AACH,GAFD;;AAIA,SACI;AAAI,IAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,MAAC,KAAD;AAAO,IAAA,GAAG,EAAEP,IAAZ;AAAkB,IAAA,SAAS,EAAC,WAA5B;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,EACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QAAQ,CAACc,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP;AAAA,WACV;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa;AAAG,MAAA,IAAI,EAAE,IAAT;AAAe,MAAA,OAAO,EAAE,mBAAM;AAAEJ,QAAAA,cAAc,CAACG,IAAI,CAACE,GAAN,CAAd;AAA0B,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DF,IAAI,CAACG,IAAlE,CAAb,CADU;AAAA,GAAb,CADL,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,IAAI,IAAIA,IAAI,CAACW,WAAL,CAAiBL,GAAjB,CAAqB,UAACM,GAAD,EAAMJ,CAAN;AAAA,WAC1B;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY;AAAK,MAAA,OAAO,EAAE;AAAA,eAAMN,gBAAgB,CAACU,GAAD,CAAtB;AAAA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CA,GAAG,CAACC,MAAhD,QAA0DD,GAAG,CAACE,QAA9D,CAAZ,CAD0B;AAAA,GAArB,CADb,CARJ,CAJJ,CADJ;AAqBH,CA9BD;;GAAMjB,Q;UACsBR,Q;;;KADtBQ,Q;AAgCN,qBAAeF,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Media } from 'reactstrap';\r\nimport language from '../../constant/langConfig.json';\r\nimport i18next from '../../constant/i18n';\r\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\r\nimport { withApollo } from '../../../helpers/apollo/apollo';\r\n\r\n\r\nconst GET_CURRENCY = gql`\r\n   query {\r\n    getCurrency {\r\n        currency\r\n        name\r\n        symbol\r\n        value\r\n    }\r\n   }\r\n`\r\n\r\nconst Currency = ({icon}) => {\r\n    var { loading, data } = useQuery(GET_CURRENCY);\r\n    const Context = useContext(CurrencyContext);\r\n    const selectedCurrency = Context.currencyContext.selectedCurrency;\r\n\r\n    const changeLanguage = lng => {\r\n        i18next.changeLanguage(lng);\r\n    };\r\n\r\n    return (\r\n        <li className=\"onhover-div mobile-setting\">\r\n            <div><Media src={icon} className=\"img-fluid\" alt=\"\" />\r\n                <i className=\"fa fa-cog\"></i>\r\n            </div>\r\n            <div className=\"show-div setting\">\r\n                <h6>language</h6>\r\n                <ul>\r\n                    {language.map((item, i) =>\r\n                        <li key={i} ><a href={null} onClick={() => { changeLanguage(item.val) }}>{item.lang}</a></li>\r\n                    )}\r\n                </ul>\r\n                <h6>currency</h6>\r\n                <ul className=\"list-inline\">\r\n                    {data && data.getCurrency.map((cur, i) =>\r\n                        <li key={i}><div onClick={() => selectedCurrency(cur)}>{cur.symbol}  {cur.currency}</div></li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default withApollo(Currency);"]},"metadata":{},"sourceType":"module"}