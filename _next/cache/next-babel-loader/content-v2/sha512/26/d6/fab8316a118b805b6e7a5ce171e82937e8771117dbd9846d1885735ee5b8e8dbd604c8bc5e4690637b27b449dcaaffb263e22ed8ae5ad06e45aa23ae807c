{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useContext, useState } from 'react';\nimport { Container, Row, Col, Media, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport PostLoader from '../PostLoader';\nimport { useRouter } from 'next/router';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items{\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                sale\n                discount\n                stock\n                variants{\n                    id\n                    color\n                    image_id\n                    variant_id\n                    size\n                }\n                images{\n                    image_id\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst ProductSection = ({\n  type\n}) => {\n  const cartContext = useContext(CartContext);\n  const wishlistContext = useContext(WishlistContext);\n  const compareContext = useContext(CompareContext);\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: modalCompare,\n    1: setModalCompare\n  } = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const toggleCompare = () => setModalCompare(!modalCompare);\n\n  const curContext = useContext(CurrencyContext);\n  const currency = curContext.state;\n  const qty = cartContext.quantity;\n  const router = useRouter();\n  const {\n    0: stock,\n    1: setStock\n  } = useState('InStock');\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(1);\n\n  const minusQty = () => {\n    if (quantity > 1) {\n      setStock('InStock');\n      setQuantity(quantity - 1);\n    }\n  };\n\n  const plusQty = product => {\n    if (product.stock >= quantity) {\n      setQuantity(quantity + 1);\n    } else {\n      setStock('Out of Stock !');\n    }\n  };\n\n  const changeQty = e => {\n    setQuantity(parseInt(e.target.value));\n  };\n\n  const clickProductDetail = product => {\n    const titleProps = product.title.split(' ').join('');\n    router.push(`/product-details/${product.id}` + '-' + `${titleProps}`);\n  };\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(Fragment, null, __jsx(\"section\", {\n    className: \"section-b-space box-product\"\n  }, __jsx(\"div\", {\n    className: \"full-box\"\n  }, __jsx(Container, null, __jsx(\"div\", {\n    className: \"title4\"\n  }, __jsx(\"h2\", {\n    className: \"title-inner4\"\n  }, \"special products\"), __jsx(\"div\", {\n    className: \"line\"\n  }, __jsx(\"span\", null))), __jsx(Row, null, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null))) : data && data.products.items.slice(0, 4).map((product, index) => __jsx(Col, {\n    xl: \"3\",\n    md: \"6\",\n    sm: \"12\",\n    key: index\n  }, __jsx(\"div\", {\n    className: \"theme-card\"\n  }, __jsx(\"div\", {\n    className: \"offer-slider\"\n  }, __jsx(\"div\", {\n    className: \"\"\n  }, __jsx(\"div\", {\n    className: \"product-box2 product-box\"\n  }, __jsx(\"div\", {\n    className: \"media img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\"\n  }))), __jsx(\"div\", {\n    className: \"back\"\n  }, __jsx(\"a\", {\n    onClick: () => clickProductDetail(product)\n  }, __jsx(Media, {\n    src: product.images[1].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\"\n  }))), __jsx(\"div\", {\n    className: \"media-body align-self-center\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  })), __jsx(\"a\", {\n    onClick: () => clickProductDetail(product)\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, currency.symbol, (product.price * currency.value).toFixed(2)), __jsx(\"div\", {\n    className: \"cart-bottom\"\n  }, __jsx(\"button\", {\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addtocart\",\n    onClick: () => cartContext.addToCart(product, qty),\n    title: \"Add to cart\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Add to Wishlist\",\n    onClick: () => wishlistContext.addToWish(product)\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    onClick: toggle,\n    title: \"Quick View\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-plus-circle\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Compare\",\n    onClick: toggleCompare\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  })))))), __jsx(\"div\", {\n    className: \"product-box2 product-box\"\n  }, __jsx(\"div\", {\n    className: \"media img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\"\n  }))), __jsx(\"div\", {\n    className: \"back\"\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    src: product.images[1].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\"\n  }))), __jsx(\"div\", {\n    className: \"media-body align-self-center\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), __jsx(\"i\", {\n    className: \"fa fa-star\"\n  })), __jsx(\"a\", {\n    onClick: () => clickProductDetail(product)\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, currency.symbol, (product.price * currency.value).toFixed(2)), __jsx(\"div\", {\n    className: \"cart-bottom\"\n  }, __jsx(\"button\", {\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addtocart\",\n    title: \"Add to cart\",\n    onClick: () => cartContext.addToCart(product, qty)\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Add to Wishlist\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\",\n    onClick: () => wishlistContext.addToWish(product)\n  })), __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    onClick: toggle,\n    title: \"Quick View\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-plus-circle\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Compare\",\n    onClick: toggleCompare\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  }))), __jsx(Modal, {\n    isOpen: modalCompare,\n    toggle: toggleCompare,\n    className: \"modal-content\",\n    centered: true\n  }, __jsx(ModalHeader, {\n    toggle: toggleCompare\n  }, \"Quick View\"), __jsx(ModalBody, null, __jsx(Row, {\n    className: \"compare-modal\"\n  }, __jsx(Col, {\n    lg: \"12\"\n  }, __jsx(\"div\", {\n    className: \"media\"\n  }, __jsx(Media, {\n    src: `${product.variants ? product.images[0].src : product.images[0].src}`,\n    alt: \"\",\n    className: \"img-fluid\"\n  }), __jsx(\"div\", {\n    className: \"media-body align-self-center text-center\"\n  }, __jsx(\"h5\", null, __jsx(\"i\", {\n    className: \"fa fa-check\"\n  }), \"Item \", __jsx(\"span\", null, product.title), __jsx(\"span\", null, \"successfully added to your Compare list\")), __jsx(\"div\", {\n    className: \"buttons d-flex justify-content-center\"\n  }, __jsx(Link, {\n    href: \"/page/compare\"\n  }, __jsx(\"a\", {\n    href: null,\n    className: \"btn-sm btn-solid\",\n    onClick: () => compareContext.addToCompare(product)\n  }, \"View Compare list\"))))))))), __jsx(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: \"quikeview-modal\",\n    size: \"lg\",\n    centered: true\n  }, __jsx(ModalHeader, {\n    toggle: toggle\n  }, \"Quick View\"), __jsx(ModalBody, null, __jsx(Row, null, __jsx(Col, {\n    lg: \"6\",\n    xs: \"12\"\n  }, __jsx(\"div\", {\n    className: \"quick-view-img\"\n  }, __jsx(Media, {\n    src: `${product.variants ? product.images[0].src : product.images[0].src}`,\n    alt: \"\",\n    className: \"img-fluid\"\n  }))), __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\"\n  }, __jsx(\"div\", {\n    className: \"product-right\"\n  }, __jsx(\"h2\", null, \" \", product.title, \" \"), __jsx(\"h3\", null, currency.symbol, (product.price * currency.value).toFixed(2)), product.variants ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, product.variants.map((vari, i) => __jsx(\"li\", {\n    className: vari.color,\n    key: i,\n    title: vari.color,\n    onClick: () => onClickHandle(vari.images)\n  }))) : '', __jsx(\"div\", {\n    className: \"border-product\"\n  }, __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"product details\"), __jsx(\"p\", null, product.shortDetails)), __jsx(\"div\", {\n    className: \"product-description border-product\"\n  }, product.size ? __jsx(\"div\", {\n    className: \"size-box\"\n  }, __jsx(\"ul\", null, product.size.map((size, i) => {\n    return __jsx(\"li\", {\n      key: i\n    }, __jsx(\"a\", {\n      href: null\n    }, size));\n  }))) : '', __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"quantity\"), __jsx(\"div\", {\n    className: \"qty-box\"\n  }, __jsx(\"div\", {\n    className: \"input-group\"\n  }, __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-left-minus\",\n    onClick: minusQty,\n    \"data-type\": \"minus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-left\"\n  }))), __jsx(\"input\", {\n    type: \"text\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: changeQty,\n    className: \"form-control input-number\"\n  }), __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-right-plus\",\n    onClick: () => plusQty(product),\n    \"data-type\": \"plus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-right\"\n  })))))), __jsx(\"div\", {\n    className: \"product-buttons\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-solid\",\n    onClick: () => cartContext.addToCart(product, quantity)\n  }, \"add to cart\"), __jsx(\"button\", {\n    className: \"btn btn-solid\",\n    onClick: clickProductDetail\n  }, \"View detail\"))))))))))))))))))));\n};\n\nexport default ProductSection;","map":null,"metadata":{},"sourceType":"module"}