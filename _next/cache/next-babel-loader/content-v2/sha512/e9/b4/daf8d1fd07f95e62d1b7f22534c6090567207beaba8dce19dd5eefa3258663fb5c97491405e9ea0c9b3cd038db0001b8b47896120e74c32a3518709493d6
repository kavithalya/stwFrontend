{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query  getBrands($type:String) {\\n        getBrands(type: $type) {\\n            brand\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Collapse, Input } from 'reactstrap';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nvar GET_BRAND = gql(_templateObject());\n\nvar Brand = function Brand() {\n  var context = useContext(FilterContext);\n  var isChecked = context.isChecked;\n  var filterChecked = context.filterChecked;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var toggleBrand = function toggleBrand() {\n    return setIsOpen(!isOpen);\n  };\n\n  var _useQuery = useQuery(GET_BRAND, {\n    variables: {\n      type: context.state\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block open\"\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggleBrand\n  }, \"brand\"), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\"\n  }, __jsx(\"div\", {\n    className: \"collection-brand-filter\"\n  }, !data || !data.getBrands || data.getBrands.length === 0 || loading ? 'loading' : data && data.getBrands.brand.map(function (brand, index) {\n    return __jsx(\"div\", {\n      className: \"custom-control custom-checkbox collection-filter-checkbox\",\n      key: index\n    }, __jsx(Input, {\n      checked: context.selectedBrands.includes(brand),\n      onChange: function onChange() {\n        context.handleBrands(brand, isChecked), context.setFilterChecked(brand, !filterChecked.isChecked);\n      },\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: brand\n    }), __jsx(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: brand\n    }, brand));\n  })))));\n};\n\nexport default Brand;","map":null,"metadata":{},"sourceType":"module"}