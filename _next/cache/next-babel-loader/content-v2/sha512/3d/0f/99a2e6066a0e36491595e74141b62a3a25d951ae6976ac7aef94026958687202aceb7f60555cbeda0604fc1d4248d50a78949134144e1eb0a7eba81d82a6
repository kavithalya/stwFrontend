{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Template\\\\StwEcommerce\\\\frontend\\\\components\\\\common\\\\Collections\\\\Collection10.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox11';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport PostLoader from '../PostLoader';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                picture\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst CollectionTen = ({\n  type\n}) => {\n  const context = useContext(CartContext);\n  const contextWishlist = useContext(WishlistContext);\n  const compareContext = useContext(CompareContext);\n  const quantity = context.quantity;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 12\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"section-b-space p-t-0 ratio_asos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"game-product grid-products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }))) : data && data.products.items.slice(0, 12).map((product, index) => __jsx(ProductItem, {\n    product: product,\n    addToCompare: () => compareContext.addToCompare(product),\n    key: index,\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product, quantity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 41\n    }\n  }))))));\n};\n\nexport default CollectionTen;","map":{"version":3,"sources":["C:/Mani/Office/Template/StwEcommerce/frontend/components/common/Collections/Collection10.js"],"names":["React","useContext","Container","Row","useQuery","gql","ProductItem","CartContext","WishlistContext","PostLoader","CompareContext","GET_PRODUCTS","CollectionTen","type","context","contextWishlist","compareContext","quantity","loading","data","variables","indexFrom","limit","products","items","length","slice","map","product","index","addToCompare","addToWish","addToCart"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox11';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport PostLoader from '../PostLoader'\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\n\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                picture\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst CollectionTen = ({ type }) => {\n    const context = useContext(CartContext)\n    const contextWishlist = useContext(WishlistContext);\n    const compareContext = useContext(CompareContext);\n    const quantity = context.quantity;\n\n    var { loading, data } = useQuery(GET_PRODUCTS, {\n        variables: {\n            type: type,\n            indexFrom: 0,\n            limit: 12\n        }\n    });\n\n    return (\n        <>\n            <section className=\"section-b-space p-t-0 ratio_asos\">\n                <Container>\n                    <Row className=\"game-product grid-products\">\n\n                        {(!data || !data.products || !data.products.items || data.products.items.length === 0 || loading) ?\n                            <div className=\"row mx-0 margin-default\">\n                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                <PostLoader />\n                            </div>\n                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                <PostLoader />\n                            </div>\n                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                <PostLoader />\n                            </div>\n                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                <PostLoader />\n                            </div>\n                        </div>\n                            :\n                                data && data.products.items.slice(0, 12).map((product, index) =>\n                                        <ProductItem product={product} \n                                            addToCompare={() => compareContext.addToCompare(product)}\n                                            key={index}\n                                            addWishlist={() => contextWishlist.addToWish(product)}\n                                            addCart={() => context.addToCart(product,quantity)} />\n                                )\n                        }\n\n                    </Row>\n                </Container>\n            </section>\n        </>\n    )\n}\n\nexport default CollectionTen;"]},"metadata":{},"sourceType":"module"}