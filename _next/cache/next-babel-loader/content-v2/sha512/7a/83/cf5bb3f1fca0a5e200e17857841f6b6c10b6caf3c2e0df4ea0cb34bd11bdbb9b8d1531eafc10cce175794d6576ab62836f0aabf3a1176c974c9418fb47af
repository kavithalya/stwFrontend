{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getSize($type:String)  {\\n        getSize(type:$type){\\n            size\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Collapse, Input } from 'reactstrap';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nvar GET_SIZE = gql(_templateObject());\n\nvar Size = function Size() {\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var context = useContext(FilterContext);\n  var isChecked = context.isChecked;\n  var filterChecked = context.filterChecked;\n\n  var toggle = function toggle() {\n    return setIsOpen(!isOpen);\n  };\n\n  var _useQuery = useQuery(GET_SIZE, {\n    variables: {\n      type: context.state\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block border-0 open\"\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggle\n  }, \"size\"), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\"\n  }, __jsx(\"div\", {\n    className: \"collection-size-filter\"\n  }, !data || !data.getSize || data.getSize.length === 0 || loading ? 'loading' : data && data.getSize.size.map(function (size, index) {\n    return __jsx(\"div\", {\n      className: \"custom-control custom-checkbox collection-filter-checkbox\",\n      key: index\n    }, __jsx(Input, {\n      checked: context.selectedSize.includes(size),\n      onChange: function onChange() {\n        context.handleSizes(size, isChecked), context.setFilterChecked(size, !filterChecked.isChecked);\n      },\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: size\n    }), __jsx(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: size\n    }, size));\n  })))));\n};\n\nexport default Size;","map":null,"metadata":{},"sourceType":"module"}