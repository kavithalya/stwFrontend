{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n            items {\\n                id\\n                title\\n                description\\n                type\\n                brand\\n                category \\n                price\\n                new\\n                picture\\n                stock\\n                sale\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox11';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport PostLoader from '../PostLoader';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar CollectionTen = function CollectionTen(_ref) {\n  var type = _ref.type;\n  var context = useContext(CartContext);\n  var contextWishlist = useContext(WishlistContext);\n  var compareContext = useContext(CompareContext);\n  var quantity = context.quantity;\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 12\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"section-b-space p-t-0 ratio_asos\"\n  }, __jsx(Container, null, __jsx(Row, {\n    className: \"game-product grid-products\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null))) : data && data.products.items.slice(0, 12).map(function (product, index) {\n    return __jsx(ProductItem, {\n      product: product,\n      addToCompare: function addToCompare() {\n        return compareContext.addToCompare(product);\n      },\n      key: index,\n      addWishlist: function addWishlist() {\n        return contextWishlist.addToWish(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quantity);\n      }\n    });\n  })))));\n};\n\nexport default CollectionTen;","map":null,"metadata":{},"sourceType":"module"}