{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n            items {\\n                id\\n                title\\n                description\\n                type\\n                brand\\n                category \\n                price\\n                new\\n                sale\\n                stock\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment, useContext } from 'react';\nimport { Container } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport CartContext from '../../../helpers/cart';\nimport Masonry from 'react-masonry-css';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport ProductBox from '../product-box/ProductBox9';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar ProductsCollection = function ProductsCollection(_ref) {\n  var type = _ref.type,\n      col = _ref.col;\n  var cartContext = useContext(CartContext);\n  var wishlistContext = useContext(WishlistContext);\n  var compareContext = useContext(CompareContext);\n  var quantity = cartContext.quantity;\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 20\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(Fragment, null, __jsx(\"section\", {\n    className: \"portfolio-section portfolio-padding metro-section port-col\"\n  }, __jsx(Container, {\n    fluid: col == 'full'\n  }, __jsx(Masonry, {\n    breakpointCols: col == 'metro' ? 4 : 6,\n    className: \"isotopeContainer row\",\n    columnClassName: \"isotopeSelector \".concat(col == 'metro' ? 'col-xl-3 col-sm-6' : 'col-xl-2 col-lg-3 col-md-4 col-sm-6')\n  }, data && data.products.items.slice(0, 20).map(function (product, index) {\n    return __jsx(ProductBox, {\n      product: product,\n      addCart: function addCart() {\n        return cartContext.addToCart(product, quantity);\n      },\n      addWish: function addWish() {\n        return wishlistContext.addToWish(product);\n      },\n      addCompare: function addCompare() {\n        return compareContext.addToCompare(product);\n      },\n      key: index\n    });\n  })))));\n};\n\nexport default ProductsCollection;","map":null,"metadata":{},"sourceType":"module"}