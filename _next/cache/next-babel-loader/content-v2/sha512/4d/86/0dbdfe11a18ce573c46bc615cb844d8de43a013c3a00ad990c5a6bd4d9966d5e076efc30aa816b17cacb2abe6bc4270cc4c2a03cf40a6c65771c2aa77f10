{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment, useContext } from \"react\";\nimport Slider from \"react-slick\";\nimport { tools_product_4 } from \"../../../../services/script\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport CartContext from \"../../../../helpers/cart\";\nimport { CompareContext } from \"../../../../helpers/Compare/CompareContext\";\nimport { CurrencyContext } from \"../../../../helpers/Currency/CurrencyContext\";\nimport { WishlistContext } from '../../../../helpers/wishlist/WishlistContext';\nimport { Container, Row, Col } from \"reactstrap\";\nimport ProductItem from \"../../../../components/common/product-box/ProductBox3\";\nconst GET_PRODUCTS = gql`\n      query  productByCategory($category: String!) {\n        productByCategory (category: $category ) {\n            id\n            title\n            description\n            type\n            brand\n            collection\n            category\n            price\n            sale\n            discount\n            new\n            images {\n                image_id\n                id\n                alt\n                src\n            }\n            variants {\n                variant_id\n                id\n                sku\n                size\n                color\n                image_id\n            }\n        }\n    }\n`;\n\nconst ParallaxSlider = () => {\n  const context = useContext(CartContext);\n  const compareContext = useContext(CompareContext);\n  const curContext = useContext(CurrencyContext);\n  const wishListContext = useContext(WishlistContext);\n  var {\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      category: \"tools\"\n    }\n  });\n  return __jsx(Fragment, null, __jsx(\"section\", {\n    className: \"full-banner parallax small-slider tools-parallax-product\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    lg: \"4\"\n  }, __jsx(\"div\", {\n    className: \"tools-description\"\n  }, __jsx(\"div\", null, __jsx(\"h3\", null, \"select your vehical\"), __jsx(\"div\", {\n    className: \"tools-form\"\n  }, __jsx(\"div\", {\n    className: \"search-box\"\n  }, __jsx(\"select\", {\n    className: \"form-control\"\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Select Make\"), __jsx(\"option\", {\n    value: \"1\"\n  }, \"Audi\"), __jsx(\"option\", {\n    value: \"2\"\n  }, \"BMW\"), __jsx(\"option\", {\n    value: \"3\"\n  }, \"Fiat\"), __jsx(\"option\", {\n    value: \"4\"\n  }, \"Hyndai\"), __jsx(\"option\", {\n    value: \"5\"\n  }, \"Skoda\"))), __jsx(\"div\", {\n    className: \"search-box\"\n  }, __jsx(\"select\", {\n    name: \"model\",\n    className: \"form-control\"\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Select Model\"))), __jsx(\"div\", {\n    className: \"search-box\"\n  }, __jsx(\"select\", {\n    name: \"engine\",\n    className: \"form-control\"\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Select category\"))), __jsx(\"div\", {\n    className: \"search-box\"\n  }, __jsx(\"select\", {\n    name: \"year\",\n    className: \"form-control\"\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Select Year\"))), __jsx(\"div\", {\n    className: \"search-button\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    className: \"btn btn-solid btn-find\"\n  }, \"find my part\")))))), __jsx(Col, {\n    lg: \"8\",\n    className: \"tools-grey ratio_square\"\n  }, __jsx(Slider, _extends({}, tools_product_4, {\n    className: \"tools-product-4 product-m\"\n  }), data && data.productByCategory.slice(0, 8).map((data, i) => {\n    return __jsx(ProductItem, {\n      product: data,\n      key: i,\n      spanClass: true,\n      addToCompare: () => compareContext.addToCompare(data),\n      addCart: () => context.addToCart(data),\n      key: i,\n      addWishlist: () => wishListContext.addToWish(data)\n    });\n  })))))));\n};\n\nexport default ParallaxSlider;","map":null,"metadata":{},"sourceType":"module"}