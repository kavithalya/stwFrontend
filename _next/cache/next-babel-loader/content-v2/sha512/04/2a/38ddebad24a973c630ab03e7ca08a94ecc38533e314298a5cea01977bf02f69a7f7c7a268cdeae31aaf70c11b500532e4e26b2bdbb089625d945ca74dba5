{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Template\\\\StwEcommerce\\\\frontend\\\\pages\\\\page\\\\account\\\\common\\\\checkout-page.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nimport { Media, Container, Form, Row, Input, Col } from \"reactstrap\";\nimport { PayPalButton } from \"react-paypal-button\";\nimport CartContext from \"../../../../helpers/cart\";\nimport paypal from \"../../../../public/assets/images/paypal.png\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from \"next/router\";\nimport { CurrencyContext } from \"../../../../helpers/Currency/CurrencyContext\";\n\nconst stripe = require('stripe')('pk_live_51IYvwgAR19qkTg2Rtd20aLk5vwFsCRajMN8I9aZl8zFfXj14qDxppEDhfLMp51b9OohTumAh7vSlO6IccIP5iIh600zA024lK7');\n\nconst CheckoutPage = () => {\n  const cartContext = useContext(CartContext);\n  const cartItems = cartContext.state;\n  const cartTotal = cartContext.cartTotal.toFixed(2);\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const {\n    0: obj,\n    1: setObj\n  } = useState({});\n  const {\n    0: payment,\n    1: setPayment\n  } = useState(\"stripe\");\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialise the hook\n\n  const router = useRouter();\n\n  const checkhandle = value => {\n    setPayment(value);\n  };\n\n  const onSuccess = payment => {\n    router.push({\n      pathname: \"/page/order-success\",\n      state: {\n        payment: payment,\n        items: cartItems,\n        orderTotal: total,\n        symbol: symbol\n      }\n    });\n  };\n\n  const onSubmit = data => {\n    if (data !== \"\") {\n      stripe.customers.create({\n        email: data.email\n      }).then(customer => {\n        // have access to the customer object\n        return stripe.invoiceItems.create({\n          customer: data.email,\n          // set the customer id\n          amount: 1,\n          // 25\n          currency: 'usd',\n          description: 'One-time setup fee'\n        }).then(invoiceItem => {\n          return stripe.invoices.create({\n            collection_method: 'send_invoice',\n            customer: invoiceItem.customer\n          });\n        }).then(invoice => {\n          // New invoice created on a new customer\n          console.log(invoice);\n        }).catch(err => {\n          console.log(err); // Deal with an error\n        });\n      });\n      router.push({\n        pathname: \"/page/order-success\",\n        state: {\n          items: cartItems,\n          orderTotal: cartTotal,\n          symbol: symbol\n        }\n      });\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  const setStateFromInput = event => {\n    obj[event.target.name] = event.target.value;\n    setObj(obj);\n  };\n\n  const onCancel = data => {\n    console.log(\"The payment was cancelled!\", data);\n  };\n\n  const onError = err => {\n    console.log(\"Paypal not display\");\n    console.log(\"Error!\", err);\n  };\n\n  const paypalOptions = {\n    clientId: \"Ac5ZmTkjwJE7VGJWF0eAzrdFNTjVwxUYlqMzZZW3OwC0i3SmfNG4KkmkbP0Z8OsoeS3kDZHHUIR_yf2P\",\n    intent: 'capture'\n  };\n  return __jsx(\"section\", {\n    className: \"section-b-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"checkout-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"checkout-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    lg: \"6\",\n    sm: \"12\",\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"checkout-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Billing Details\")), __jsx(\"div\", {\n    className: \"row check-out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: `${errors.firstName ? \"error_border\" : \"\"}`,\n    name: \"first_name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }\n  }, errors.firstName && \"First name is required\")), __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    type: \"text\",\n    className: `${errors.last_name ? \"error_border\" : \"\"}`,\n    name: \"last_name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }, errors.last_name && \"Last name is required\")), __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }, \"Phone\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: `${errors.phone ? \"error_border\" : \"\"}`,\n    ref: register({\n      pattern: /\\d+/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, errors.phone && \"Please enter number for phone.\")), __jsx(\"div\", {\n    className: \"form-group col-md-6 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }\n  }, \"Email Address\"), __jsx(\"input\", {\n    className: \"form-control\",\n    className: `${errors.email ? \"error_border\" : \"\"}`,\n    type: \"text\",\n    name: \"email\",\n    ref: register({\n      required: true,\n      pattern: /^\\S+@\\S+$/i\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 23\n    }\n  }, errors.email && \"Please enter proper email address .\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-12 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, \"Country\"), __jsx(\"select\", {\n    name: \"country\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, \"India\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"South Africa\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, \"United State\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Australia\"))), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-12 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, \"Address\"), __jsx(\"input\", {\n    className: \"form-control\",\n    className: `${errors.address ? \"error_border\" : \"\"}`,\n    type: \"text\",\n    name: \"address\",\n    ref: register({\n      required: true,\n      min: 20,\n      max: 120\n    }),\n    placeholder: \"Street address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, errors.address && \"Please right your address .\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-12 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, \"Town/City\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    className: `${errors.city ? \"error_border\" : \"\"}`,\n    name: \"city\",\n    ref: register({\n      required: true\n    }),\n    onChange: setStateFromInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }\n  }, errors.city && \"select one city\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }\n  }, \"State / County\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    className: `${errors.state ? \"error_border\" : \"\"}`,\n    name: \"state\",\n    ref: register({\n      required: true\n    }),\n    onChange: setStateFromInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, errors.state && \"select one state\")), __jsx(\"div\", {\n    className: \"form-group col-md-12 col-sm-6 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"field-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  }, \"Postal Code\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"pincode\",\n    className: `${errors.pincode ? \"error_border\" : \"\"}`,\n    ref: register({\n      pattern: /\\d+/\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, errors.pincode && \"Required integer\")), __jsx(\"div\", {\n    className: \"form-group col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"create_account\",\n    id: \"account-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }), \"\\u2002\", \" \", __jsx(\"label\", {\n    htmlFor: \"account-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 23\n    }\n  }, \"Create An Account?\")))), __jsx(Col, {\n    lg: \"6\",\n    sm: \"12\",\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, cartItems && cartItems.length > 0 > 0 ? __jsx(\"div\", {\n    className: \"checkout-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"order-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    className: \"title-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 27\n    }\n  }, \"Product \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 37\n    }\n  }, \"Total\"))), __jsx(\"ul\", {\n    className: \"qty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, cartItems.map((item, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, item.title, \" \\xD7 \", item.qty, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 31\n    }\n  }, symbol, item.total.toFixed(2))))), __jsx(\"ul\", {\n    className: \"sub-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 27\n    }\n  }, \"Subtotal\", __jsx(\"span\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, symbol, cartTotal)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 27\n    }\n  }, \"Shipping\", __jsx(\"div\", {\n    className: \"shipping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"shopping-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 31\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"free-shipping\",\n    id: \"free-shipping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"free-shipping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, \"Free Shipping\")), __jsx(\"div\", {\n    className: \"shopping-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 31\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"local-pickup\",\n    id: \"local-pickup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"local-pickup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, \"Local Pickup\"))))), __jsx(\"ul\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 27\n    }\n  }, \"Total\", \" \", __jsx(\"span\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, symbol, cartTotal)))), __jsx(\"div\", {\n    className: \"payment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, __jsx(\"div\", {\n    className: \"upper-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"payment-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 27\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 31\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-option stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"payment-group\",\n    id: \"payment-2\",\n    defaultChecked: true,\n    onClick: () => checkhandle(\"stripe\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 35\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"payment-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 35\n    }\n  }, \"Stripe\"))), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 31\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-option paypal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 33\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"payment-group\",\n    id: \"payment-1\",\n    onClick: () => checkhandle(\"paypal\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 35\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"payment-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 35\n    }\n  }, \"PayPal\", __jsx(\"span\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 37\n    }\n  }, __jsx(Media, {\n    src: paypal,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 39\n    }\n  })))))))), cartTotal !== 0 ? __jsx(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 27\n    }\n  }, payment === \"stripe\" ? __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-solid btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 31\n    }\n  }, \"Place Order\") : __jsx(PayPalButton, {\n    paypalOptions: paypalOptions,\n    amount: 1,\n    onPaymentSuccess: onSuccess,\n    onPaymentError: onError,\n    onApprove: onSuccess,\n    onPaymentCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 31\n    }\n  })) : \"\")) : \"\")))))));\n};\n\nexport default CheckoutPage;","map":{"version":3,"sources":["C:/Mani/Office/Template/StwEcommerce/frontend/pages/page/account/common/checkout-page.js"],"names":["React","useContext","useState","Media","Container","Form","Row","Input","Col","PayPalButton","CartContext","paypal","useForm","useRouter","CurrencyContext","stripe","require","CheckoutPage","cartContext","cartItems","state","cartTotal","toFixed","curContext","symbol","obj","setObj","payment","setPayment","register","handleSubmit","errors","router","checkhandle","value","onSuccess","push","pathname","items","orderTotal","total","onSubmit","data","customers","create","email","then","customer","invoiceItems","amount","currency","description","invoiceItem","invoices","collection_method","invoice","console","log","catch","err","showMessages","setStateFromInput","event","target","name","onCancel","onError","paypalOptions","clientId","intent","firstName","required","last_name","phone","pattern","address","min","max","city","pincode","length","map","item","index","title","qty"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Media, Container, Form, Row, Input, Col } from \"reactstrap\";\r\nimport { PayPalButton } from \"react-paypal-button\";\r\nimport CartContext from \"../../../../helpers/cart\";\r\nimport paypal from \"../../../../public/assets/images/paypal.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRouter } from \"next/router\";\r\nimport { CurrencyContext } from \"../../../../helpers/Currency/CurrencyContext\";\r\nconst stripe = require('stripe')('pk_live_51IYvwgAR19qkTg2Rtd20aLk5vwFsCRajMN8I9aZl8zFfXj14qDxppEDhfLMp51b9OohTumAh7vSlO6IccIP5iIh600zA024lK7');\r\n\r\nconst CheckoutPage = () => {\r\n  const cartContext = useContext(CartContext);\r\n  const cartItems = cartContext.state;\r\n  const cartTotal = (cartContext.cartTotal).toFixed(2);\r\n  const curContext = useContext(CurrencyContext);\r\n  const symbol = curContext.state.symbol;\r\n  const [obj, setObj] = useState({});\r\n  const [payment, setPayment] = useState(\"stripe\");\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  const router = useRouter();\r\n\r\n  const checkhandle = (value) => {\r\n    setPayment(value);\r\n  };\r\n\r\n  const onSuccess = (payment) => {\r\n    router.push({\r\n      pathname: \"/page/order-success\",\r\n      state: {\r\n        payment: payment,\r\n        items: cartItems,\r\n        orderTotal: total,\r\n        symbol: symbol,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    if (data !== \"\") {\r\n      \r\n      stripe.customers\r\n      .create({\r\n        email: data.email,\r\n      })\r\n      .then((customer) => {\r\n        // have access to the customer object\r\n        return stripe.invoiceItems\r\n          .create({\r\n            customer: data.email, // set the customer id\r\n            amount: 1, // 25\r\n            currency: 'usd',\r\n            description: 'One-time setup fee',\r\n          })\r\n          .then((invoiceItem) => {\r\n            return stripe.invoices.create({\r\n              collection_method: 'send_invoice',\r\n              customer: invoiceItem.customer,\r\n            });\r\n          })\r\n          .then((invoice) => {\r\n            // New invoice created on a new customer\r\n            console.log(invoice);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            // Deal with an error\r\n          });\r\n      });\r\n      \r\n      router.push({\r\n        pathname: \"/page/order-success\",\r\n        state: { items: cartItems, orderTotal: cartTotal, symbol: symbol },\r\n      });\r\n    } else {\r\n      errors.showMessages();\r\n    }\r\n  };\r\n\r\n  const setStateFromInput = (event) => {\r\n    obj[event.target.name] = event.target.value;\r\n    setObj(obj);\r\n  };\r\n\r\n  const onCancel = (data) => {\r\n    console.log(\"The payment was cancelled!\", data);\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(\"Paypal not display\");\r\n    console.log(\"Error!\", err);\r\n  };\r\n\r\n\r\n\r\n  const paypalOptions = {\r\n    clientId:\"Ac5ZmTkjwJE7VGJWF0eAzrdFNTjVwxUYlqMzZZW3OwC0i3SmfNG4KkmkbP0Z8OsoeS3kDZHHUIR_yf2P\",\r\n    intent: 'capture'\r\n  };\r\n\r\n  return (\r\n    <section className=\"section-b-space\">\r\n      <Container>\r\n        <div className=\"checkout-page\">\r\n          <div className=\"checkout-form\">\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Row>\r\n                <Col lg=\"6\" sm=\"12\" xs=\"12\">\r\n                  <div className=\"checkout-title\">\r\n                    <h3>Billing Details</h3>\r\n                  </div>\r\n                  <div className=\"row check-out\">\r\n                    <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                      <div className=\"field-label\">First Name</div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={`${errors.firstName ? \"error_border\" : \"\"}`}\r\n                        name=\"first_name\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.firstName && \"First name is required\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                      <div className=\"field-label\">Last Name</div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={`${errors.last_name ? \"error_border\" : \"\"}`}\r\n                        name=\"last_name\"\r\n                        ref={register({ required: true })}\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.last_name && \"Last name is required\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                      <div className=\"field-label\">Phone</div>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        className={`${errors.phone ? \"error_border\" : \"\"}`}\r\n                        ref={register({ pattern: /\\d+/ })}\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.phone && \"Please enter number for phone.\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                      <div className=\"field-label\">Email Address</div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        className={`${errors.email ? \"error_border\" : \"\"}`}\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        ref={register({\r\n                          required: true,\r\n                          pattern: /^\\S+@\\S+$/i,\r\n                        })}\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.email && \"Please enter proper email address .\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-md-12 col-sm-12 col-xs-12\">\r\n                      <div className=\"field-label\">Country</div>\r\n                      <select name=\"country\" ref={register({ required: true })}>\r\n                        <option>India</option>\r\n                        <option>South Africa</option>\r\n                        <option>United State</option>\r\n                        <option>Australia</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form-group col-md-12 col-sm-12 col-xs-12\">\r\n                      <div className=\"field-label\">Address</div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        className={`${errors.address ? \"error_border\" : \"\"}`}\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        ref={register({ required: true, min: 20, max: 120 })}\r\n                        placeholder=\"Street address\"\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.address && \"Please right your address .\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-md-12 col-sm-12 col-xs-12\">\r\n                      <div className=\"field-label\">Town/City</div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        className={`${errors.city ? \"error_border\" : \"\"}`}\r\n                        name=\"city\"\r\n                        ref={register({ required: true })}\r\n                        onChange={setStateFromInput}\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.city && \"select one city\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-md-12 col-sm-6 col-xs-12\">\r\n                      <div className=\"field-label\">State / County</div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        className={`${errors.state ? \"error_border\" : \"\"}`}\r\n                        name=\"state\"\r\n                        ref={register({ required: true })}\r\n                        onChange={setStateFromInput}\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.state && \"select one state\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-md-12 col-sm-6 col-xs-12\">\r\n                      <div className=\"field-label\">Postal Code</div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"pincode\"\r\n                        className={`${errors.pincode ? \"error_border\" : \"\"}`}\r\n                        ref={register({ pattern: /\\d+/ })}\r\n                      />\r\n                      <span className=\"error-message\">\r\n                        {errors.pincode && \"Required integer\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"create_account\"\r\n                        id=\"account-option\"\r\n                      />\r\n                      &ensp;{\" \"}\r\n                      <label htmlFor=\"account-option\">Create An Account?</label>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col lg=\"6\" sm=\"12\" xs=\"12\">\r\n                  {cartItems && cartItems.length > 0 > 0 ? (\r\n                    <div className=\"checkout-details\">\r\n                      <div className=\"order-box\">\r\n                        <div className=\"title-box\">\r\n                          <div>\r\n                            Product <span>Total</span>\r\n                          </div>\r\n                        </div>\r\n                        <ul className=\"qty\">\r\n                          {cartItems.map((item, index) => (\r\n                            <li key={index}>\r\n                              {item.title} × {item.qty}\r\n                              <span>\r\n                                {symbol}\r\n                                {(item.total).toFixed(2)}\r\n                              </span>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                        <ul className=\"sub-total\">\r\n                          <li>\r\n                            Subtotal\r\n                            <span className=\"count\">\r\n                              {symbol}\r\n                              {cartTotal}\r\n                            </span>\r\n                          </li>\r\n                          <li>\r\n                            Shipping\r\n                            <div className=\"shipping\">\r\n                              <div className=\"shopping-option\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  name=\"free-shipping\"\r\n                                  id=\"free-shipping\"\r\n                                />\r\n                                <label htmlFor=\"free-shipping\">\r\n                                  Free Shipping\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"shopping-option\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  name=\"local-pickup\"\r\n                                  id=\"local-pickup\"\r\n                                />\r\n                                <label htmlFor=\"local-pickup\">\r\n                                  Local Pickup\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                        <ul className=\"total\">\r\n                          <li>\r\n                            Total{\" \"}\r\n                            <span className=\"count\">\r\n                              {symbol}\r\n                              {cartTotal}\r\n                            </span>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"payment-box\">\r\n                        <div className=\"upper-box\">\r\n                          <div className=\"payment-options\">\r\n                            <ul>\r\n                              <li>\r\n                                <div className=\"radio-option stripe\">\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    name=\"payment-group\"\r\n                                    id=\"payment-2\"\r\n                                    defaultChecked={true}\r\n                                    onClick={() => checkhandle(\"stripe\")}\r\n                                  />\r\n                                  <label htmlFor=\"payment-2\">Stripe</label>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"radio-option paypal\">\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    name=\"payment-group\"\r\n                                    id=\"payment-1\"\r\n                                    onClick={() => checkhandle(\"paypal\")}\r\n                                  />\r\n                                  <label htmlFor=\"payment-1\">\r\n                                    PayPal\r\n                                    <span className=\"image\">\r\n                                      <Media src={paypal} alt=\"\" />\r\n                                    </span>\r\n                                  </label>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        {cartTotal !== 0 ? (\r\n                          <div className=\"text-right\">\r\n                            {payment === \"stripe\" ? (\r\n                              <button type=\"submit\" className=\"btn-solid btn\">\r\n                                Place Order\r\n                              </button>\r\n                            ) : (\r\n\r\n                              <PayPalButton\r\n                                paypalOptions={paypalOptions}\r\n                                amount={1}\r\n                                onPaymentSuccess={onSuccess}\r\n                                onPaymentError={onError}\r\n                                onApprove={onSuccess}\r\n                                onPaymentCancel={onCancel}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"]},"metadata":{},"sourceType":"module"}