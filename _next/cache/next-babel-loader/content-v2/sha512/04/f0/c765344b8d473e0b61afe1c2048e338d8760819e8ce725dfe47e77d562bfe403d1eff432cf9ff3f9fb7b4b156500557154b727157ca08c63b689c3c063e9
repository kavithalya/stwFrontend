{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox1';\nimport CartContext from '../../../helpers/cart/index';\nimport { Container, Row, Col } from 'reactstrap';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport PostLoader from '../PostLoader';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                stock\n                new\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst SpecialProducts = ({\n  type,\n  designClass,\n  cartClass,\n  noTitle\n}) => {\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(type);\n  const context = useContext(CartContext);\n  const wishListContext = useContext(WishlistContext);\n  const compareContext = useContext(CompareContext);\n  const quantity = context.quantity;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: activeTab,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(\"div\", null, noTitle ? '' : __jsx(\"div\", {\n    className: \"title1 section-t-space\"\n  }, __jsx(\"h4\", null, \"exclusive products\"), __jsx(\"h2\", {\n    className: \"title-inner1\"\n  }, \"special products\")), __jsx(\"section\", {\n    className: designClass\n  }, __jsx(Container, null, __jsx(Tabs, {\n    className: \"theme-tab\"\n  }, __jsx(TabList, {\n    className: \"tabs tab-title\"\n  }, __jsx(Tab, {\n    className: activeTab == type ? 'active' : '',\n    onClick: () => setActiveTab(type)\n  }, \"NEW ARRIVAL\"), __jsx(Tab, {\n    className: activeTab == 'furniture' ? 'active' : '',\n    onClick: () => setActiveTab('furniture')\n  }, \"FEATURED \"), __jsx(Tab, {\n    className: activeTab == 'furniture' ? 'active' : '',\n    onClick: () => setActiveTab('furniture')\n  }, \"SPECIAL\")), __jsx(TabPanel, null, __jsx(Row, {\n    className: \"no-slider\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? data && data.products && data.products.items && data.products.items.length === 0 ? __jsx(Col, {\n    xs: \"12\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"col-sm-12 empty-cart-cls text-center\"\n  }, __jsx(\"img\", {\n    src: `/static/images/empty-search.jpg`,\n    className: \"img-fluid mb-4 mx-auto\",\n    alt: \"\"\n  }), __jsx(\"h3\", null, __jsx(\"strong\", null, \"Your Cart is Empty\")), __jsx(\"h4\", null, \"Explore more shortlist some items.\")))) : __jsx(\"div\", {\n    className: \"row mx-0 margin-default\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null))) : data && data.products.items.slice(0, 8).map((product, i) => __jsx(ProductItem, {\n    product: product,\n    key: i,\n    addCompare: () => compareContext.addToCompare(product),\n    addCart: () => context.addToCart(product, quantity),\n    addWishlist: () => wishListContext.addToWish(product),\n    cartClass: cartClass\n  })))), __jsx(TabPanel, null, __jsx(Row, {\n    className: \"no-slider\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? data && data.products && data.products.items && data.products.items.length === 0 ? __jsx(Col, {\n    xs: \"12\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"col-sm-12 empty-cart-cls text-center\"\n  }, __jsx(\"img\", {\n    src: `/static/images/empty-search.jpg`,\n    className: \"img-fluid mb-4 mx-auto\",\n    alt: \"\"\n  }), __jsx(\"h3\", null, __jsx(\"strong\", null, \"Your Cart is Empty\")), __jsx(\"h4\", null, \"Explore more shortlist some items.\")))) : __jsx(React.Fragment, null, __jsx(PostLoader, null), __jsx(PostLoader, null), __jsx(PostLoader, null)) : data && data.products.items.slice(0, 8).map((product, i) => __jsx(ProductItem, {\n    product: product,\n    key: i,\n    addCompare: () => compareContext.addToCompare(product),\n    addCart: () => context.addToCart(product, quantity),\n    addWishlist: () => wishListContext.addToWish(product),\n    cartClass: cartClass\n  })))), __jsx(TabPanel, null, __jsx(Row, {\n    className: \"no-slider\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? data && data.products && data.products.items && data.products.items.length === 0 ? __jsx(Col, {\n    xs: \"12\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"col-sm-12 empty-cart-cls text-center\"\n  }, __jsx(\"img\", {\n    src: `/static/images/empty-search.jpg`,\n    className: \"img-fluid mb-4 mx-auto\",\n    alt: \"\"\n  }), __jsx(\"h3\", null, __jsx(\"strong\", null, \"Your Cart is Empty\")), __jsx(\"h4\", null, \"Explore more shortlist some items.\")))) : __jsx(React.Fragment, null, __jsx(PostLoader, null), __jsx(PostLoader, null), __jsx(PostLoader, null)) : data && data.products.items.slice(0, 8).map((product, i) => __jsx(ProductItem, {\n    product: product,\n    key: i,\n    addCompare: () => compareContext.addToCompare(product),\n    addCart: () => context.addToCart(product, quantity),\n    addWishlist: () => wishListContext.addToWish(product),\n    cartClass: cartClass\n  }))))))));\n};\n\nexport default SpecialProducts;","map":null,"metadata":{},"sourceType":"module"}