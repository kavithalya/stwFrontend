{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Projects\\\\Shoptheworld\\\\STWCommerceFrontEnd\\\\components\\\\common\\\\Collections\\\\TabCollection3.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment, useState, useContext } from \"react\";\nimport Slider from \"react-slick\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox3';\nimport CartContext from '../../../helpers/cart/index';\nimport { Container, Media, Col, Row } from 'reactstrap';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport banner from '../../../public/assets/images/tools/banner.jpg';\nimport { CurrencyContext } from \"../../../helpers/Currency/CurrencyContext\";\nimport { Product4 } from \"../../../services/script\";\nimport { CompareContext } from \"../../../helpers/Compare/CompareContext\";\nimport LeftCollection from \"./LeftCollection\";\nconst GET_PRODUCTS = gql`\n      query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst NewProduct = ({\n  type,\n  designClass,\n  cartClass,\n  spanClass\n}) => {\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(type);\n  const context = useContext(CartContext);\n  const compareContext = useContext(CompareContext);\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const wishListContext = useContext(WishlistContext);\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: activeTab,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"section\", {\n    className: \"tools_product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"multiple-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    xl: \"3\",\n    lg: \"4\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, __jsx(LeftCollection, {\n    type: type,\n    product: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  })), __jsx(Col, {\n    xl: \"9\",\n    lg: \"8\",\n    md: \"12\",\n    className: designClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, __jsx(Container, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, __jsx(Tabs, {\n    className: \"theme-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, __jsx(TabList, {\n    className: \"tabs tab-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, __jsx(Tab, {\n    className: activeTab == type ? 'active' : '',\n    onClick: () => setActiveTab(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, \"New Products\"), __jsx(Tab, {\n    className: activeTab == 'furniture' ? 'active' : '',\n    onClick: () => setActiveTab('furniture'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, \"Featured Products \")), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, __jsx(Slider, _extends({}, Product4, {\n    className: \"product-4 product-m no-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(0, 8).map((product, i) => __jsx(ProductItem, {\n    product: product,\n    spanClass: spanClass,\n    addToCompare: () => compareContext.addToCompare(product),\n    addCart: () => context.addToCart(product),\n    key: i,\n    addWishlist: () => wishListContext.addToWish(product),\n    cartClass: cartClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 53\n    }\n  })))), __jsx(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, __jsx(Slider, _extends({}, Product4, {\n    className: \"product-4 product-m no-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 45\n    }\n  }), data && data.products.items.slice(0, 8).map((product, i) => __jsx(ProductItem, {\n    product: product,\n    spanClass: spanClass,\n    addCart: () => context.addToCart(product),\n    key: i,\n    addWishlist: () => wishListContext.addToWish(product),\n    cartClass: cartClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 53\n    }\n  })))))), __jsx(\"div\", {\n    className: \"banner-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, __jsx(Media, {\n    src: banner,\n    alt: \"\",\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default NewProduct;","map":{"version":3,"sources":["C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/components/common/Collections/TabCollection3.js"],"names":["React","Fragment","useState","useContext","Slider","Tab","Tabs","TabList","TabPanel","useQuery","gql","ProductItem","CartContext","Container","Media","Col","Row","WishlistContext","banner","CurrencyContext","Product4","CompareContext","LeftCollection","GET_PRODUCTS","NewProduct","type","designClass","cartClass","spanClass","activeTab","setActiveTab","context","compareContext","curContext","symbol","state","wishListContext","loading","data","variables","indexFrom","limit","products","items","slice","map","product","i","addToCompare","addToCart","addToWish"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,YAA3C;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,OAAOC,MAAP,MAAmB,gDAAnB;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,YAAY,GAAGb,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;;AAiCA,MAAMc,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA;AAAhC,CAAD,KAAiD;AAChE,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,QAAQ,CAACuB,IAAD,CAA1C;AACA,QAAMM,OAAO,GAAG5B,UAAU,CAACS,WAAD,CAA1B;AACA,QAAMoB,cAAc,GAAG7B,UAAU,CAACkB,cAAD,CAAjC;AACA,QAAMY,UAAU,GAAG9B,UAAU,CAACgB,eAAD,CAA7B;AACA,QAAMe,MAAM,GAAGD,UAAU,CAACE,KAAX,CAAiBD,MAAhC;AACA,QAAME,eAAe,GAAGjC,UAAU,CAACc,eAAD,CAAlC;AAEA,MAAI;AAAEoB,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoB7B,QAAQ,CAACc,YAAD,EAAe;AAC3CgB,IAAAA,SAAS,EAAE;AACPd,MAAAA,IAAI,EAAEI,SADC;AAEPW,MAAAA,SAAS,EAAE,CAFJ;AAGPC,MAAAA,KAAK,EAAE;AAHA;AADgC,GAAf,CAAhC;AASA,SACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAEhB,IAAtB;AAA4B,IAAA,OAAO,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,IAAtB;AAA2B,IAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEG,SAAS,IAAIJ,IAAb,GAAoB,QAApB,GAA+B,EAA/C;AAAmD,IAAA,OAAO,EAAE,MAAMK,YAAY,CAACL,IAAD,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEI,SAAS,IAAI,WAAb,GAA2B,QAA3B,GAAsC,EAAtD;AAA0D,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CADJ,EAMI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,MAAC,MAAD,eAAYV,QAAZ;AAAsB,IAAA,SAAS,EAAC,8BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKkB,IAAI,IAAIA,IAAI,CAACI,QAAL,CAAcC,KAAd,CAAoBC,KAApB,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCC,GAAhC,CAAoC,CAACC,OAAD,EAAUC,CAAV,KACzC,MAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AACI,IAAA,SAAS,EAAElB,SADf;AAEI,IAAA,YAAY,EAAE,MAAMI,cAAc,CAACgB,YAAf,CAA4BF,OAA5B,CAFxB;AAGI,IAAA,OAAO,EAAE,MAAMf,OAAO,CAACkB,SAAR,CAAkBH,OAAlB,CAHnB;AAG+C,IAAA,GAAG,EAAEC,CAHpD;AAII,IAAA,WAAW,EAAE,MAAMX,eAAe,CAACc,SAAhB,CAA0BJ,OAA1B,CAJvB;AAKI,IAAA,SAAS,EAAEnB,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CADb,CADR,CANJ,EAkBI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,MAAC,MAAD,eAAYP,QAAZ;AAAsB,IAAA,SAAS,EAAC,8BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKkB,IAAI,IAAIA,IAAI,CAACI,QAAL,CAAcC,KAAd,CAAoBC,KAApB,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCC,GAAhC,CAAoC,CAACC,OAAD,EAAUC,CAAV,KACzC,MAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AACI,IAAA,SAAS,EAAElB,SADf;AAEI,IAAA,OAAO,EAAE,MAAMG,OAAO,CAACkB,SAAR,CAAkBH,OAAlB,CAFnB;AAE+C,IAAA,GAAG,EAAEC,CAFpD;AAGI,IAAA,WAAW,EAAE,MAAMX,eAAe,CAACc,SAAhB,CAA0BJ,OAA1B,CAHvB;AAII,IAAA,SAAS,EAAEnB,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CADb,CAFR,CAlBJ,CADJ,CADJ,EAmCI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAET,MAAZ;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAA2B,IAAA,SAAS,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnCJ,CAJJ,CADJ,CADJ,CADJ,CADJ;AAoDH,CArED;;AAuEA,eAAeM,UAAf","sourcesContent":["import React, { Fragment, useState, useContext } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport ProductItem from '../product-box/ProductBox3';\r\nimport CartContext from '../../../helpers/cart/index'\r\nimport { Container, Media, Col, Row } from 'reactstrap';\r\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\r\nimport banner from '../../../public/assets/images/tools/banner.jpg';\r\nimport { CurrencyContext } from \"../../../helpers/Currency/CurrencyContext\";\r\nimport { Product4 } from \"../../../services/script\";\r\nimport { CompareContext } from \"../../../helpers/Compare/CompareContext\";\r\nimport LeftCollection from \"./LeftCollection\";\r\n\r\nconst GET_PRODUCTS = gql`\r\n      query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\r\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\r\n            items {\r\n                id\r\n                title\r\n                description\r\n                type\r\n                brand\r\n                category \r\n                price\r\n                new\r\n                stock\r\n                sale\r\n                discount\r\n                variants{\r\n                    id\r\n                    sku\r\n                    size\r\n                    color\r\n                    image_id\r\n                }\r\n                images{\r\n                    image_id\r\n                    id\r\n                    alt\r\n                    src\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst NewProduct = ({ type, designClass, cartClass, spanClass }) => {\r\n    const [activeTab, setActiveTab] = useState(type);\r\n    const context = useContext(CartContext);\r\n    const compareContext = useContext(CompareContext);\r\n    const curContext = useContext(CurrencyContext);\r\n    const symbol = curContext.state.symbol;\r\n    const wishListContext = useContext(WishlistContext)\r\n\r\n    var { loading, data } = useQuery(GET_PRODUCTS, {\r\n        variables: {\r\n            type: activeTab,\r\n            indexFrom: 0,\r\n            limit: 8\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"tools_product\">\r\n                <Container>\r\n                    <Row className=\"multiple-slider\">\r\n                        <Col xl=\"3\" lg=\"4\" md=\"12\" >\r\n                            <LeftCollection type={type} product={4} />\r\n                        </Col>\r\n                        <Col xl=\"9\" lg=\"8\" md=\"12\" className={designClass}>\r\n                            <Container className=\"p-0\">\r\n                                <Tabs className=\"theme-tab\">\r\n                                    <TabList className=\"tabs tab-title\">\r\n                                        <Tab className={activeTab == type ? 'active' : ''} onClick={() => setActiveTab(type)}>New Products</Tab>\r\n                                        <Tab className={activeTab == 'furniture' ? 'active' : ''} onClick={() => setActiveTab('furniture')}>Featured Products </Tab>\r\n                                    </TabList>\r\n\r\n                                    <TabPanel>\r\n                                            <Slider {...Product4} className=\"product-4 product-m no-arrow\">\r\n                                                {data && data.products.items.slice(0, 8).map((product, i) =>\r\n                                                    <ProductItem product={product}\r\n                                                        spanClass={spanClass}\r\n                                                        addToCompare={() => compareContext.addToCompare(product)}\r\n                                                        addCart={() => context.addToCart(product)} key={i}\r\n                                                        addWishlist={() => wishListContext.addToWish(product)}\r\n                                                        cartClass={cartClass} />\r\n                                                )}\r\n                                            </Slider>\r\n                                    </TabPanel>\r\n                                    <TabPanel>\r\n\r\n                                            <Slider {...Product4} className=\"product-4 product-m no-arrow\">\r\n                                                {data && data.products.items.slice(0, 8).map((product, i) =>\r\n                                                    <ProductItem product={product}\r\n                                                        spanClass={spanClass}\r\n                                                        addCart={() => context.addToCart(product)} key={i}\r\n                                                        addWishlist={() => wishListContext.addToWish(product)}\r\n                                                        cartClass={cartClass} />\r\n                                                )}\r\n                                            </Slider>\r\n\r\n                                    </TabPanel>\r\n                                </Tabs>\r\n                            </Container>\r\n                            <div className=\"banner-tools\">\r\n                                <Media src={banner} alt=\"\" className=\"img-fluid\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NewProduct;"]},"metadata":{},"sourceType":"module"}