{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport { Container, Row, Col, ModalBody, Modal, ModalHeader, Media, Input } from 'reactstrap';\nimport Link from 'next/link';\nimport Slider from 'react-slick';\nimport sizeChart from '../../../public/assets/images/size-chart.jpg';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nimport CountdownComponent from '../../../components/common/widgets/countdownComponent';\nimport ImageZoom from '../common/image-zoom';\nimport CartContext from '../../../helpers/cart';\nconst GET_SINGLE_PRODUCTS = gql`\n    query product ($id:Int!) {\n        product (id:$id) {\n            id\n            title\n            description\n            type\n            brand\n            category \n            price\n            new\n            sale\n            discount\n            stock\n            variants\n            {\n                id\n                color\n                image_id\n                variant_id\n                size\n            }\n            images\n            {\n                image_id\n                src\n            }\n        }\n    }\n`;\n\nconst OutsideImagePage = () => {\n  const context = useContext(CartContext);\n  const addToCart = context.addToCart;\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const stock = context.stock;\n  const plusQty = context.plusQty;\n  const minusQty = context.minusQty;\n  const quantity = context.quantity;\n  const uniqueColor = [];\n  const uniqueSize = [];\n\n  const onCloseModal = () => {\n    setOpen(false);\n  };\n\n  const changeQty = e => {\n    setQuantity(parseInt(e.target.value));\n  };\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: 1\n    }\n  });\n  var products = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: false,\n    arrows: true,\n    fade: true\n  };\n  var productsnav = {\n    slidesToShow: 3,\n    swipeToSlide: true,\n    arrows: false,\n    dots: false,\n    focusOnSelect: true\n  };\n  useEffect(() => {\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, [data]);\n\n  const changeColorVar = img_id => {\n    slider2.current.slickGoTo(img_id);\n  };\n\n  const {\n    nav1,\n    nav2\n  } = state;\n  return __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"collection-wrapper\"\n  }, __jsx(Container, null, !data || !data.product || data.product.length === 0 || loading ? 'loading' : __jsx(Row, null, __jsx(Col, {\n    lg: \"6\"\n  }, __jsx(Slider, _extends({}, products, {\n    asNavFor: nav2,\n    ref: slider => slider1.current = slider,\n    className: \"product-right-slick\"\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index\n  }, __jsx(ImageZoom, {\n    image: vari\n  }))) : data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index\n  }, __jsx(ImageZoom, {\n    image: vari\n  }))))), __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\"\n  }, __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    className: \"product-right\"\n  }, __jsx(\"h2\", null, \" \", data.product.name, \" \"), __jsx(\"h4\", null, __jsx(\"del\", null, symbol, data.product.price), __jsx(\"span\", null, data.product.discount, \"% off\")), __jsx(\"h3\", null, symbol, data.product.price - data.product.price * data.product.discount / 100, \" \"), data.product.variants.map(vari => {\n    var findItem = uniqueColor.find(x => x.color === vari.color);\n    if (!findItem) uniqueColor.push(vari);\n    var findItemSize = uniqueSize.find(x => x === vari.size);\n    if (!findItemSize) uniqueSize.push(vari.size);\n  }), uniqueColor ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, uniqueColor.map((vari, i) => {\n    return __jsx(\"li\", {\n      className: vari.color,\n      key: i,\n      title: vari.color,\n      onClick: () => changeColorVar(i)\n    });\n  })) : '', __jsx(\"div\", {\n    className: \"product-description border-product\"\n  }, data.product.variants ? __jsx(\"div\", null, __jsx(\"h6\", {\n    className: \"product-title size-text\"\n  }, \"select size\", __jsx(\"span\", null, __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#sizemodal\",\n    onClick: toggle\n  }, \"size chart\"))), __jsx(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    centered: true\n  }, __jsx(ModalHeader, {\n    toggle: toggle\n  }, \"Sheer Straight Kurta\"), __jsx(ModalBody, null, __jsx(Media, {\n    src: sizeChart,\n    alt: \"size\",\n    className: \"img-fluid\"\n  }))), __jsx(\"div\", {\n    className: \"size-box\"\n  }, __jsx(\"ul\", null, uniqueSize.map((data, i) => {\n    return __jsx(\"li\", {\n      key: i\n    }, __jsx(\"a\", {\n      href: null\n    }, data));\n  })))) : '', __jsx(\"span\", {\n    className: \"instock-cls\"\n  }, stock), __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"quantity\"), __jsx(\"div\", {\n    className: \"qty-box\"\n  }, __jsx(\"div\", {\n    className: \"input-group\"\n  }, __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-left-minus\",\n    onClick: minusQty,\n    \"data-type\": \"minus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-left\"\n  }))), __jsx(Input, {\n    type: \"text\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: changeQty,\n    className: \"form-control input-number\"\n  }), __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-right-plus\",\n    onClick: () => plusQty(data.product),\n    \"data-type\": \"plus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-right\"\n  })))))), __jsx(\"div\", {\n    className: \"product-buttons\"\n  }, __jsx(\"a\", {\n    href: null,\n    className: \"btn btn-solid\",\n    onClick: () => addToCart(data.product, quantity)\n  }, \"add to cart\"), __jsx(Link, {\n    href: `/page/account/checkout`\n  }, __jsx(\"a\", {\n    className: \"btn btn-solid\",\n    onClick: () => BuynowClicked(item, quantity)\n  }, \"buy now\"))), __jsx(\"div\", {\n    className: \"border-product\"\n  }, __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"product details\"), __jsx(\"p\", null, data.product.shortDetails)), __jsx(\"div\", {\n    className: \"border-product\"\n  }, __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"share it\"), __jsx(\"div\", {\n    className: \"product-icon\"\n  }, __jsx(\"ul\", {\n    className: \"product-social\"\n  }, __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"https://www.facebook.com\",\n    target: \"_blank\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-facebook\"\n  }))), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"https://plus.google.com\",\n    target: \"_blank\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-google-plus\"\n  }))), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"https://twitter.com\",\n    target: \"_blank\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-twitter\"\n  }))), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"https://www.instagram.com\",\n    target: \"_blank\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-instagram\"\n  })))))), __jsx(\"div\", {\n    className: \"border-product\"\n  }, __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"Time Reminder\"), __jsx(CountdownComponent, null))), __jsx(Modal, {\n    open: open,\n    onClose: onCloseModal,\n    center: true\n  }, __jsx(\"div\", {\n    className: \"modal-dialog modal-dialog-centered\",\n    role: \"document\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(ModalHeader, {\n    className: \"modal-header\"\n  }, __jsx(\"h5\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Sheer Straight Kurta\")), __jsx(ModalBody, {\n    className: \"modal-body\"\n  }, __jsx(Media, {\n    src: sizeChart,\n    alt: \"\",\n    className: \"img-fluid\"\n  }))))), __jsx(Row, {\n    className: \"imgae-outside-thumbnail mt-4\"\n  }, __jsx(Slider, _extends({\n    className: \"slider-nav\"\n  }, productsnav, {\n    asNavFor: nav1,\n    ref: slider => slider2.current = slider\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index\n  }, __jsx(Media, {\n    src: `${vari.src}`,\n    key: index,\n    alt: vari.alt,\n    className: \"img-fluid\"\n  }))) : '')))))))));\n};\n\nexport default OutsideImagePage;","map":null,"metadata":{},"sourceType":"module"}