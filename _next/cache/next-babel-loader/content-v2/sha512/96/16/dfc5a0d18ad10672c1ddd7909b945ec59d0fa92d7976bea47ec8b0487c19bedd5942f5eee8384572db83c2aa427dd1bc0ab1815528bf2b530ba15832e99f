{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { TabList, TabPanel, Tabs, Tab } from 'react-tabs';\nimport { Col, Container, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox6';\nimport CartContext from '../../../helpers/cart/index';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport PostLoader from '../PostLoader';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                sale\n                stock\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst TabCollection = ({\n  type,\n  cartClass\n}) => {\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(type);\n  const context = useContext(CartContext);\n  const wishListContext = useContext(WishlistContext);\n  const compareContext = useContext(CompareContext);\n  const quantity = context.quantity;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: activeTab,\n      indexFrom: 0,\n      limit: 19\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1  section-t-space\"\n  }, __jsx(\"h4\", null, \"special offer\"), __jsx(\"h2\", {\n    className: \"title-inner1\"\n  }, \"top collection\")), __jsx(\"section\", {\n    className: \"game-product ratio_asos pt-0\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    lg: \"6\",\n    className: \"m-auto\"\n  }, __jsx(\"div\", {\n    className: \"product-para\"\n  }, __jsx(\"p\", {\n    className: \"text-center\"\n  }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\")))), __jsx(Row, null, __jsx(Col, null, __jsx(Tabs, {\n    className: \"theme-tab\"\n  }, __jsx(TabList, {\n    className: \"tabs tab-title\"\n  }, __jsx(Tab, {\n    className: activeTab == type ? 'active' : '',\n    onClick: () => setActiveTab(type)\n  }, \"New Products\"), __jsx(Tab, {\n    className: activeTab == 'game' ? 'active' : '',\n    onClick: () => setActiveTab('game')\n  }, \"Featured Products\"), __jsx(Tab, {\n    className: activeTab == 'game' ? 'active' : '',\n    onClick: () => setActiveTab('game')\n  }, \"Best Sellers\")), __jsx(\"div\", {\n    className: \"tab-content-cls\"\n  }, __jsx(TabPanel, {\n    id: \"tab-4\",\n    className: \"tab-content active default\"\n  }, __jsx(Row, {\n    className: \" no-slider five-product\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null))) : __jsx(React.Fragment, null, data && data.products.items.slice(0, 10).map((product, index) => __jsx(ProductItem, {\n    product: product,\n    addToComapre: () => compareContext.addToCompare(product),\n    addCart: () => context.addToCart(product, quantity),\n    key: index,\n    addWishlist: () => wishListContext.addToWish(product),\n    cartclassName: cartClass\n  }))))), __jsx(TabPanel, {\n    id: \"tab-5\",\n    className: \"tab-content\"\n  }, __jsx(Row, {\n    className: \"no-slider five-product\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null))) : __jsx(React.Fragment, null, data && data.products.items.slice(9, 19).map((product, index) => __jsx(ProductItem, {\n    product: product,\n    addCart: () => context.addToCart(product, quantity),\n    key: index,\n    addWishlist: () => wishListContext.addToWish(product),\n    cartclassName: cartClass\n  }))))), __jsx(TabPanel, {\n    id: \"tab-6\",\n    className: \"tab-content\"\n  }, __jsx(Row, {\n    className: \" no-slider five-product row\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\"\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null)), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\"\n  }, __jsx(PostLoader, null))) : __jsx(React.Fragment, null, data && data.products.items.slice(0, 10).map((product, index) => __jsx(ProductItem, {\n    product: product,\n    addCart: () => context.addToCart(product, quantity),\n    key: index,\n    addWishlist: () => wishListContext.addToWish(product),\n    cartclassName: cartClass\n  }))))))))))));\n};\n\nexport default TabCollection;","map":null,"metadata":{},"sourceType":"module"}