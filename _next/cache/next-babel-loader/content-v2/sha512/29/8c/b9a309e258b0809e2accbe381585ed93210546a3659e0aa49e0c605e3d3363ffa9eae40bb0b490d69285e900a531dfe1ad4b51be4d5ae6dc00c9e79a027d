{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Collapse, Input } from 'reactstrap';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nconst GET_BRAND = gql`\n    query  getBrands($type:String) {\n        getBrands(type: $type) {\n            brand\n        }\n    }\n`;\n\nconst Brand = () => {\n  const context = useContext(FilterContext);\n  const isChecked = context.isChecked;\n  const filterChecked = context.filterChecked;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggleBrand = () => setIsOpen(!isOpen);\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_BRAND, {\n    variables: {\n      type: context.state\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block open\"\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggleBrand\n  }, \"brand\"), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\"\n  }, __jsx(\"div\", {\n    className: \"collection-brand-filter\"\n  }, !data || !data.getBrands || data.getBrands.length === 0 || loading ? 'loading' : data && data.getBrands.brand.map((brand, index) => __jsx(\"div\", {\n    className: \"custom-control custom-checkbox collection-filter-checkbox\",\n    key: index\n  }, __jsx(Input, {\n    checked: context.selectedBrands.includes(brand),\n    onChange: () => {\n      context.handleBrands(brand, isChecked), context.setFilterChecked(brand, !filterChecked.isChecked);\n    },\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    id: brand\n  }), __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: brand\n  }, brand)))))));\n};\n\nexport default Brand;","map":null,"metadata":{},"sourceType":"module"}