{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport imageOne from '../../../public/assets/images/fashion/pro/001.jpg';\nimport imageTwo from '../../../public/assets/images/fashion/pro/002.jpg';\nimport imageThree from '../../../public/assets/images/fashion/pro/003.jpg';\nimport imageFour from '../../../public/assets/images/fashion/pro/004.jpg';\nimport DetailsWithPrice from '../common/detail-price';\nimport { Col, Container, Row } from 'reactstrap';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nconst GET_SINGLE_PRODUCTS = gql`\n    query product ($id:Int!) {\n        product (id:$id) {\n            id\n            title\n            description\n            type\n            brand\n            category \n            price\n            new\n            sale\n            discount\n            stock\n            variants\n            {\n                id\n                color\n                image_id\n                variant_id\n                size\n            }\n            images\n            {\n                image_id\n                src\n            }\n        }\n    }\n`;\n\nconst FourImagePage = () => {\n  const context = useContext(FilterContext);\n  const addToCart = context.addToCart;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  var {\n    loading,\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: 1\n    }\n  });\n\n  const addToCartUnsafe = product => {\n    toast.success(\"Item Added to Compare\");\n    dispatch({\n      type: 'ADD_TO_COMPARE',\n      payload: product\n    });\n  };\n\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const {\n    nav1,\n    nav2\n  } = state;\n  return __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"collection-wrapper ratio_asos\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    lg: \"6\"\n  }, __jsx(Row, {\n    className: \"product_image_4\"\n  }, __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: imageOne,\n    alt: \"\",\n    className: \"img-fluid blur-up lazyload bg-img\"\n  }))), __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: imageTwo,\n    alt: \"\",\n    className: \"img-fluid blur-up lazyload bg-img \"\n  }))), __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: imageThree,\n    alt: \"\",\n    className: \"img-fluid blur-up lazyload bg-img\"\n  }))), __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: imageFour,\n    alt: \"\",\n    className: \"img-fluid blur-up lazyload bg-img\"\n  }))))), data ? __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\"\n  }, __jsx(DetailsWithPrice, {\n    symbol: symbol,\n    item: data.product,\n    navOne: nav1,\n    addToCartClicked: addToCart,\n    BuynowClicked: addToCartUnsafe\n  })) : 'false'))));\n};\n\nexport default FourImagePage;","map":null,"metadata":{},"sourceType":"module"}