{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Projects\\\\Shoptheworld\\\\STWCommerceFrontEnd\\\\components\\\\common\\\\Collections\\\\Collection14.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox1';\nimport { Row, Col, Container } from 'reactstrap';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst TopCollection = ({\n  type,\n  title,\n  subtitle,\n  designClass,\n  noSlider,\n  cartClass\n}) => {\n  const context = useContext(CartContext);\n  const contextWishlist = useContext(WishlistContext);\n  const contextCompare = useContext(CompareContext);\n  const quatity = context.quatity;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1 title-gradient  section-t-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, subtitle) : '', __jsx(\"h2\", {\n    className: \"title-inner1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, title)), __jsx(\"section\", {\n    className: designClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, noSlider ? __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, data && data.products.items.slice(0, 8).map((product, index) => __jsx(Col, {\n    xl: \"3\",\n    xs: \"6\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, __jsx(ProductItem, {\n    product: product,\n    addCompare: () => contextCompare.addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product, quatity),\n    key: index,\n    cartClass: cartClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }))))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1 title-gradient  section-t-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 41\n    }\n  }, subtitle) : '', __jsx(\"h2\", {\n    className: \"title-inner1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, title)), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, __jsx(Row, {\n    className: \"partition-cls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, data && data.products.items.slice(0, 8).map((product, index) => __jsx(Col, {\n    xl: \"3\",\n    xs: \"6\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, __jsx(ProductItem, {\n    product: product,\n    addCompare: () => contextCompare.addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product, quatity),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  })))))))));\n};\n\nexport default TopCollection;","map":{"version":3,"sources":["C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/components/common/Collections/Collection14.js"],"names":["React","useContext","useQuery","gql","ProductItem","Row","Col","Container","CartContext","WishlistContext","CompareContext","GET_PRODUCTS","TopCollection","type","title","subtitle","designClass","noSlider","cartClass","context","contextWishlist","contextCompare","quatity","loading","data","variables","indexFrom","limit","products","items","slice","map","product","index","addToCompare","addToWish","addToCart"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox1';\nimport { Row, Col, Container } from 'reactstrap';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\n\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst TopCollection = ({ type, title, subtitle, designClass, noSlider, cartClass }) => {\n    const context = useContext(CartContext)\n    const contextWishlist = useContext(WishlistContext);\n    const contextCompare = useContext(CompareContext);\n    const quatity = context.quatity;\n\n    var { loading, data } = useQuery(GET_PRODUCTS, {\n        variables: {\n            type: type,\n            indexFrom: 0,\n            limit: 8\n        }\n    });\n\n\n    return (\n        <>\n            <div className=\"title1 title-gradient  section-t-space\">\n                {subtitle ? <h4>{subtitle}</h4> : ''}\n                <h2 className=\"title-inner1\">{title}</h2>\n            </div>\n            <section className={designClass}>\n                {noSlider ?\n                    <Container>\n                        <Row>\n                            {data && data.products.items.slice(0, 8).map((product, index) =>\n                                <Col xl=\"3\" xs=\"6\" key={index} >\n                                    <ProductItem product={product}\n                                        addCompare={() => contextCompare.addToCompare(product)}\n                                        addWishlist={() => contextWishlist.addToWish(product)}\n                                        addCart={() => context.addToCart(product,quatity)} key={index} cartClass={cartClass} />\n                                </Col>\n                            )\n                            }\n                        </Row>\n                    </Container>\n                    :\n                    <>\n                        <div className=\"title1 title-gradient  section-t-space\">\n                            {subtitle ? <h4>{subtitle}</h4> : ''}\n                            <h2 className=\"title-inner1\">{title}</h2>\n                        </div>\n                        <Container>\n                            <Row className=\"partition-cls\">\n                                {data && data.products.items.slice(0, 8).map((product, index) =>\n                                    <Col xl=\"3\" xs=\"6\" key={index}>\n                                        <div>\n                                            <ProductItem product={product}\n                                                addCompare={() => contextCompare.addToCompare(product)}\n                                                addWishlist={() => contextWishlist.addToWish(product)}\n                                                addCart={() => context.addToCart(product,quatity)} key={index} />\n                                        </div>\n                                    </Col>\n                                )\n                                }\n                            </Row>\n                        </Container>\n                    </>\n                }\n\n            </section>\n        </>\n    )\n}\n\n\nexport default TopCollection;"]},"metadata":{},"sourceType":"module"}