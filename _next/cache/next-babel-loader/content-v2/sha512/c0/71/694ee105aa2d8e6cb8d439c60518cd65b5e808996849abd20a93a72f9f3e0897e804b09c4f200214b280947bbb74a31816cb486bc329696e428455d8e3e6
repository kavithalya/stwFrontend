{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Collapse, Input } from 'reactstrap';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nconst GET_SIZE = gql`\n    query getSize($type:String)  {\n        getSize(type:$type){\n            size\n        }\n    }\n`;\n\nconst Size = () => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const context = useContext(FilterContext);\n  const isChecked = context.isChecked;\n  const filterChecked = context.filterChecked;\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_SIZE, {\n    variables: {\n      type: context.state\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block border-0 open\"\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggle\n  }, \"size\"), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\"\n  }, __jsx(\"div\", {\n    className: \"collection-size-filter\"\n  }, !data || !data.getSize || data.getSize.length === 0 || loading ? 'loading' : data && data.getSize.size.map((size, index) => __jsx(\"div\", {\n    className: \"custom-control custom-checkbox collection-filter-checkbox\",\n    key: index\n  }, __jsx(Input, {\n    checked: context.selectedSize.includes(size),\n    onChange: () => {\n      context.handleSizes(size, isChecked), context.setFilterChecked(size, !filterChecked.isChecked);\n    },\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    id: size\n  }), __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: size\n  }, size)))))));\n};\n\nexport default Size;","map":null,"metadata":{},"sourceType":"module"}