{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nexport const Context = /*#__PURE__*/createContext({\n  compareItems: Function,\n  addToCompare: Function,\n  removeFromComapre: Function\n});\n\nconst getLocalCompareItems = () => {\n  try {\n    const list = localStorage.getItem('compare');\n\n    if (list === null) {\n      return [];\n    } else {\n      return JSON.parse(list);\n    }\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const Provider = props => {\n  const {\n    0: compareItems,\n    1: setcompareItems\n  } = useState(getLocalCompareItems());\n  useEffect(() => {\n    localStorage.setItem('compare', JSON.stringify(compareItems));\n  }, [compareItems]); // Add Product To Wishlist\n\n  const addToCompare = item => {\n    const index = compareItems.findIndex(compare => compare.id === item.id);\n\n    if (index === -1) {\n      toast.success(\"Product Added Successfully !\");\n      setcompareItems([...compareItems, item]);\n    } else {\n      toast.error(\"This Product Already Added !\");\n    }\n  }; // Remove Product From compare\n\n\n  const removeFromComapre = item => {\n    setcompareItems(compareItems.filter(e => e.id !== item.id));\n    toast.error(\"Product Removed Successfully !\");\n  };\n\n  const {\n    value\n  } = props;\n  return __jsx(Context.Provider, {\n    value: {\n      compareItems: compareItems,\n      addToCompare: addToCompare,\n      removeFromComapre: removeFromComapre\n    }\n  }, props.children);\n};\nexport { Context as CompareContext, Provider as CompareContextProvider } from \"./CompareContext\";","map":null,"metadata":{},"sourceType":"module"}