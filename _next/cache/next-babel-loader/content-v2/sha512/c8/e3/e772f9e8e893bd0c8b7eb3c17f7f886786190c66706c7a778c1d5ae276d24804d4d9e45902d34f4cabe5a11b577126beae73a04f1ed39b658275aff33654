{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mani\\\\Office\\\\Template\\\\StwEcommerce\\\\frontend\\\\pages\\\\product-details\\\\product\\\\3_col_left_page.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport { Container, Row, Col, Media } from 'reactstrap';\nimport Slider from 'react-slick';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nimport ImageZoom from '../common/image-zoom';\nimport DetailBox from '../common/detail-box';\nimport Detail from '../common/detailPage';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nimport CartContext from '../../../helpers/cart';\nconst GET_SINGLE_PRODUCTS = gql`\n    query product ($id:Int!) {\n        product (id:$id) {\n            id\n            title\n            description\n            type\n            brand\n            category \n            price\n            new\n            sale\n            discount\n            stock\n            variants\n            {\n                id\n                color\n                image_id\n                variant_id\n                size\n            }\n            images\n            {\n                image_id\n                src\n            }\n        }\n    }\n`;\n\nconst ThreeColLeftPage = () => {\n  const context = useContext(CartContext);\n  const addToCart = context.addToCart;\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n  var {\n    loading,\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: 1\n    }\n  });\n  var products = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: false,\n    arrows: true,\n    fade: true\n  };\n  var productsnav = {\n    slidesToShow: 3,\n    swipeToSlide: true,\n    arrows: false,\n    dots: false,\n    vertical: true,\n    focusOnSelect: true\n  };\n\n  const filterClick = () => {\n    document.getElementById(\"filter\").style.left = \"-15px\";\n  };\n\n  const changeColorVar = img_id => {\n    slider2.current.slickGoTo(img_id);\n  };\n\n  useEffect(() => {\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, [data]);\n  const {\n    nav1,\n    nav2\n  } = state;\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, !data || !data.product || data.product.length === 0 || loading ? 'loading' : __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    lg: \"1\",\n    sm: \"2\",\n    xs: \"12\",\n    className: \"p-0 pb-cls-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, __jsx(Slider, _extends({\n    className: \"slider-nav\"\n  }, productsnav, {\n    asNavFor: nav1,\n    ref: slider => slider2.current = slider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 45\n    }\n  }, __jsx(Media, {\n    src: `${vari.src}`,\n    key: index,\n    alt: vari.alt,\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 49\n    }\n  }))) : '')), __jsx(Col, {\n    lg: \"3\",\n    sm: \"10\",\n    xs: \"12\",\n    className: \"order-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, __jsx(Slider, _extends({}, products, {\n    asNavFor: nav2,\n    ref: slider => slider1.current = slider,\n    className: \"product-right-slick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 53\n    }\n  }, __jsx(ImageZoom, {\n    image: vari,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 57\n    }\n  }))) : data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 53\n    }\n  }, __jsx(ImageZoom, {\n    image: vari,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 57\n    }\n  }))))))), __jsx(Col, {\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, __jsx(Detail, {\n    item: data.product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  })), __jsx(Col, {\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, __jsx(DetailBox, {\n    symbol: symbol,\n    item: data.product,\n    changeColorVar: changeColorVar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }))))));\n};\n\nexport default ThreeColLeftPage;","map":{"version":3,"sources":["C:/Mani/Office/Template/StwEcommerce/frontend/pages/product-details/product/3_col_left_page.js"],"names":["React","useContext","useState","useRef","useEffect","Container","Row","Col","Media","Slider","gql","useQuery","FilterContext","ImageZoom","DetailBox","Detail","CurrencyContext","CartContext","GET_SINGLE_PRODUCTS","ThreeColLeftPage","context","addToCart","curContext","symbol","state","setState","nav1","nav2","slider1","slider2","loading","data","variables","id","products","slidesToShow","slidesToScroll","dots","arrows","fade","productsnav","swipeToSlide","vertical","focusOnSelect","filterClick","document","getElementById","style","left","changeColorVar","img_id","current","slickGoTo","product","length","slider","variants","images","map","vari","index","src","alt"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,MAAtC,EAA8CC,SAA9C,QAA8D,OAA9D;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,QAA2C,YAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,MAAMC,mBAAmB,GAAGR,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;;AA8BA,MAAMS,gBAAgB,GAAG,MAAM;AAE3B,QAAMC,OAAO,GAAGnB,UAAU,CAACgB,WAAD,CAA1B;AACA,QAAMI,SAAS,GAAGD,OAAO,CAACC,SAA1B;AACA,QAAMC,UAAU,GAAGrB,UAAU,CAACe,eAAD,CAA7B;AACA,QAAMO,MAAM,GAAGD,UAAU,CAACE,KAAX,CAAiBD,MAAhC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBvB,QAAQ,CAAC;AAAEwB,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAAD,CAAlC;AACA,QAAMC,OAAO,GAAGzB,MAAM,EAAtB;AACA,QAAM0B,OAAO,GAAG1B,MAAM,EAAtB;AACA,MAAI;AAAE2B,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBpB,QAAQ,CAACO,mBAAD,EAAsB;AAClDc,IAAAA,SAAS,EAAE;AACPC,MAAAA,EAAE,EAAE;AADG;AADuC,GAAtB,CAAhC;AAKA,MAAIC,QAAQ,GAAG;AACXC,IAAAA,YAAY,EAAE,CADH;AAEXC,IAAAA,cAAc,EAAE,CAFL;AAGXC,IAAAA,IAAI,EAAE,KAHK;AAIXC,IAAAA,MAAM,EAAE,IAJG;AAKXC,IAAAA,IAAI,EAAE;AALK,GAAf;AAOA,MAAIC,WAAW,GAAG;AACdL,IAAAA,YAAY,EAAE,CADA;AAEdM,IAAAA,YAAY,EAAE,IAFA;AAGdH,IAAAA,MAAM,EAAE,KAHM;AAIdD,IAAAA,IAAI,EAAE,KAJQ;AAKdK,IAAAA,QAAQ,EAAC,IALK;AAMdC,IAAAA,aAAa,EAAE;AAND,GAAlB;;AASA,QAAMC,WAAW,GAAG,MAAM;AACtBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,IAAxC,GAA+C,OAA/C;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAIC,MAAD,IAAY;AAC/BrB,IAAAA,OAAO,CAACsB,OAAR,CAAgBC,SAAhB,CAA0BF,MAA1B;AACH,GAFD;;AAIA9C,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEE,OAAO,CAACuB,OADT;AAELxB,MAAAA,IAAI,EAAEE,OAAO,CAACsB;AAFT,KAAD,CAAR;AAIH,GALQ,EAKN,CAACpB,IAAD,CALM,CAAT;AAMA,QAAM;AAAEL,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBH,KAAvB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,CAACO,IAAD,IAAS,CAACA,IAAI,CAACsB,OAAf,IAA0BtB,IAAI,CAACsB,OAAL,CAAaC,MAAb,KAAwB,CAAlD,IAAuDxB,OAAxD,GACG,SADH,GAGG,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,IAAtB;AAA2B,IAAA,SAAS,EAAC,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACQU,WADR;AAEI,IAAA,QAAQ,EAAEd,IAFd;AAGI,IAAA,GAAG,EAAE6B,MAAM,IAAK1B,OAAO,CAACsB,OAAR,GAAkBI,MAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKKxB,IAAI,CAACsB,OAAL,CAAaG,QAAb,GACGzB,IAAI,CAACsB,OAAL,CAAaI,MAAb,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KACpB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAG,GAAED,IAAI,CAACE,GAAI,EAAxB;AAA2B,IAAA,GAAG,EAAED,KAAhC;AAAuC,IAAA,GAAG,EAAED,IAAI,CAACG,GAAjD;AAAsD,IAAA,SAAS,EAAC,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADH,GAMG,EAXR,CADJ,CADJ,EAgBI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,IAAf;AAAoB,IAAA,EAAE,EAAC,IAAvB;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD,eAAY5B,QAAZ;AAAsB,IAAA,QAAQ,EAAEP,IAAhC;AAAsC,IAAA,GAAG,EAAE4B,MAAM,IAAK3B,OAAO,CAACuB,OAAR,GAAkBI,MAAxE;AAAiF,IAAA,SAAS,EAAC,qBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKxB,IAAI,CAACsB,OAAL,CAAaG,QAAb,GACGzB,IAAI,CAACsB,OAAL,CAAaI,MAAb,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KACpB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADH,GAMG5B,IAAI,CAACsB,OAAL,CAAaI,MAAb,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KACpB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAPR,CADJ,CADJ,CADJ,CAhBJ,EAoCI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE5B,IAAI,CAACsB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApCJ,EAuCI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,MAAM,EAAE9B,MAAnB;AAA2B,IAAA,IAAI,EAAEQ,IAAI,CAACsB,OAAtC;AAA+C,IAAA,cAAc,EAAEJ,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvCJ,CAJR,CADJ,CADJ,CADJ;AAuDH,CArGD;;AAuGA,eAAe9B,gBAAf","sourcesContent":["import React, { useContext, useState, useRef ,useEffect} from 'react';\nimport { Container, Row, Col, Media } from 'reactstrap';\nimport Slider from 'react-slick';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nimport ImageZoom from '../common/image-zoom';\nimport DetailBox from '../common/detail-box';\nimport Detail from '../common/detailPage';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nimport CartContext from '../../../helpers/cart';\n\nconst GET_SINGLE_PRODUCTS = gql`\n    query product ($id:Int!) {\n        product (id:$id) {\n            id\n            title\n            description\n            type\n            brand\n            category \n            price\n            new\n            sale\n            discount\n            stock\n            variants\n            {\n                id\n                color\n                image_id\n                variant_id\n                size\n            }\n            images\n            {\n                image_id\n                src\n            }\n        }\n    }\n`;\nconst ThreeColLeftPage = () => {\n\n    const context = useContext(CartContext);\n    const addToCart = context.addToCart;\n    const curContext = useContext(CurrencyContext);\n    const symbol = curContext.state.symbol;\n    const [state, setState] = useState({ nav1: null, nav2: null });\n    const slider1 = useRef();\n    const slider2 = useRef();\n    var { loading, data } = useQuery(GET_SINGLE_PRODUCTS, {\n        variables: {\n            id: 1\n        }\n    });\n    var products = {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        dots: false,\n        arrows: true,\n        fade: true\n    };\n    var productsnav = {\n        slidesToShow: 3,\n        swipeToSlide: true,\n        arrows: false,\n        dots: false,\n        vertical:true,\n        focusOnSelect: true\n    };\n\n    const filterClick = () => {\n        document.getElementById(\"filter\").style.left = \"-15px\";\n    }\n\n    const changeColorVar = (img_id) => {\n        slider2.current.slickGoTo(img_id)\n    }\n\n    useEffect(() => {\n        setState({\n            nav1: slider1.current,\n            nav2: slider2.current\n        });\n    }, [data]);\n    const { nav1, nav2 } = state;\n\n    return (\n        <section>\n            <div className=\"collection-wrapper\">\n                <Container>\n                    {(!data || !data.product || data.product.length === 0 || loading) ?\n                        'loading'\n                        :\n                        <Row>\n                            <Col lg=\"1\" sm=\"2\" xs=\"12\" className=\"p-0 pb-cls-slider\">\n                                <Slider className=\"slider-nav\"\n                                    {...productsnav}\n                                    asNavFor={nav1}\n                                    ref={slider => (slider2.current = slider)}\n                                >\n                                    {data.product.variants ?\n                                        data.product.images.map((vari, index) =>\n                                            <div key={index}>\n                                                <Media src={`${vari.src}`} key={index} alt={vari.alt} className=\"img-fluid\" />\n                                            </div>\n                                        ) :\n                                        ''}\n                                </Slider>\n                            </Col>\n                            <Col lg=\"3\" sm=\"10\" xs=\"12\" className=\"order-up\">\n                                <Row>\n                                    <Col>\n                                        <Slider {...products} asNavFor={nav2} ref={slider => (slider1.current = slider)} className=\"product-right-slick\">\n                                            {data.product.variants ?\n                                                data.product.images.map((vari, index) =>\n                                                    <div key={index}>\n                                                        <ImageZoom image={vari} />\n                                                    </div>\n                                                ) :\n                                                data.product.images.map((vari, index) =>\n                                                    <div key={index}>\n                                                        <ImageZoom image={vari} />\n                                                    </div>\n                                                )}\n                                        </Slider>\n                                    </Col>\n                                </Row>\n\n                            </Col>\n                            <Col lg=\"4\">\n                                <Detail item={data.product} />\n                            </Col>\n                            <Col lg=\"4\">\n                                <DetailBox symbol={symbol} item={data.product} changeColorVar={changeColorVar} />\n                            </Col>\n                        </Row>\n                    }\n                </Container>\n            </div>\n        </section>\n    )\n}\n\nexport default ThreeColLeftPage;"]},"metadata":{},"sourceType":"module"}