{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Mani/Office/Projects/Shoptheworld/STWCommerceFrontEnd/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n            items {\\n                id\\n                title\\n                description\\n                type\\n                brand\\n                category \\n                price\\n                new\\n                stock\\n                sale\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from 'react';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport { Col, Container, Media, Row } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport PostLoader from '../PostLoader';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nimport { useRouter } from 'next/router';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar TabCollection = function TabCollection(_ref) {\n  var type = _ref.type,\n      bgClass = _ref.bgClass;\n  var router = useRouter();\n\n  var _useState = useState(type),\n      activeTab = _useState[0],\n      setActiveTab = _useState[1];\n\n  var curContext = useContext(CurrencyContext);\n  var currency = curContext.state;\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: activeTab,\n      indexFrom: 0,\n      limit: 8\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  var clickProductDetail = function clickProductDetail(product) {\n    var titleProps = product.title.split(' ').join('');\n    router.push(\"/product-details/\".concat(product.id) + '-' + \"\".concat(titleProps));\n  };\n\n  return __jsx(\"div\", {\n    className: bgClass\n  }, __jsx(\"section\", {\n    className: \"p-0\"\n  }, __jsx(Container, {\n    fluid: true\n  }, __jsx(Row, null, __jsx(Col, null, __jsx(\"div\", {\n    className: \"title4\"\n  }, __jsx(\"h2\", {\n    className: \"title-inner4\"\n  }, \"trending products\"), __jsx(\"div\", {\n    className: \"line\"\n  }, __jsx(\"span\", null))), __jsx(Tabs, {\n    className: \"theme-tab\"\n  }, __jsx(TabList, {\n    className: \"tabs tab-title\"\n  }, __jsx(Tab, {\n    className: activeTab == type ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab(type);\n    }\n  }, \"winter\"), __jsx(Tab, {\n    className: activeTab == 'greens' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab(type);\n    }\n  }, \"greens\"), __jsx(Tab, {\n    className: activeTab == 'various' ? 'active' : '',\n    onClick: function onClick() {\n      return setActiveTab(type);\n    }\n  }, \"various\")), __jsx(\"div\", {\n    className: \"tab-content-cls\"\n  }, __jsx(TabPanel, {\n    id: \"tab-7\",\n    className: \"tab-content active default\"\n  }, __jsx(Row, {\n    className: \"product-tab\"\n  }, __jsx(React.Fragment, null, data && data.products.items.slice(0, 8).map(function (item, i) {\n    return __jsx(\"div\", {\n      className: \"tab-box\",\n      key: i\n    }, __jsx(\"div\", {\n      className: \"product-box2\"\n    }, __jsx(\"div\", {\n      className: \"media\"\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return clickProductDetail(item);\n      }\n    }, __jsx(Media, {\n      className: \"img-fluid blur-up lazyload\",\n      src: item.images[0].src,\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"media-body align-self-center\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    })), __jsx(\"a\", {\n      onClick: function onClick() {\n        return clickProductDetail(item);\n      }\n    }, __jsx(\"h6\", null, item.title)), __jsx(\"h4\", null, currency.symbol, (item.price * currency.value).toFixed(2))))));\n  })))), __jsx(TabPanel, {\n    id: \"tab-8\",\n    className: \"tab-content\"\n  }, __jsx(Row, {\n    className: \"product-tab\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, null), __jsx(PostLoader, null), __jsx(PostLoader, null)) : __jsx(React.Fragment, null, data && data.products.items.slice(4, 12).map(function (item, i) {\n    return __jsx(\"div\", {\n      className: \"tab-box\",\n      key: i\n    }, __jsx(\"div\", {\n      className: \"product-box2\"\n    }, __jsx(\"div\", {\n      className: \"media\"\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return clickProductDetail(item);\n      }\n    }, __jsx(Media, {\n      className: \"img-fluid blur-up lazyload\",\n      src: item.images[0].src,\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"media-body align-self-center\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    })), __jsx(\"a\", {\n      onClick: function onClick() {\n        return clickProductDetail(item);\n      }\n    }, __jsx(\"h6\", null, item.title)), __jsx(\"h4\", null, currency.symbol, (item.price * currency.value).toFixed(2))))));\n  })))), __jsx(TabPanel, {\n    id: \"tab-9\",\n    className: \"tab-content\"\n  }, __jsx(Row, {\n    className: \"product-tab\"\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, null), __jsx(PostLoader, null), __jsx(PostLoader, null)) : __jsx(React.Fragment, null, data && data.products.items.slice(2, 10).map(function (item, i) {\n    return __jsx(\"div\", {\n      className: \"tab-box\",\n      key: i\n    }, __jsx(\"div\", {\n      className: \"product-box2\"\n    }, __jsx(\"div\", {\n      className: \"media\"\n    }, __jsx(\"a\", {\n      onClick: function onClick() {\n        return clickProductDetail(item);\n      }\n    }, __jsx(Media, {\n      className: \"img-fluid blur-up lazyload\",\n      src: item.images[0].src,\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"media-body align-self-center\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    }), \" \", __jsx(\"i\", {\n      className: \"fa fa-star\"\n    })), __jsx(\"a\", {\n      onClick: function onClick() {\n        return clickProductDetail(item);\n      }\n    }, __jsx(\"h6\", null, item.title)), __jsx(\"h4\", null, currency.symbol, (item.price * currency.value).toFixed(2))))));\n  })))))))))));\n};\n\nexport default TabCollection;","map":null,"metadata":{},"sourceType":"module"}