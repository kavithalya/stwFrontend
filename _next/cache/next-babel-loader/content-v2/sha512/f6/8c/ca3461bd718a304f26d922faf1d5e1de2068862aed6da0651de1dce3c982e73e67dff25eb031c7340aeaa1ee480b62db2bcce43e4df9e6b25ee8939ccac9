{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { Container, Row, Col, Media, Modal, ModalBody } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport { useRouter } from 'next/router';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst ProductSection = () => {\n  const router = useRouter();\n  const curContext = useContext(CurrencyContext);\n  const wishlistContext = useContext(WishlistContext);\n  const compareContext = useContext(CompareContext);\n  const symbol = curContext.state.symbol;\n  const currency = curContext.state;\n  const cartCtx = useContext(CartContext);\n  const addToCart = cartCtx.addToCart;\n  const quantity = cartCtx.quantity;\n  const plusQty = cartCtx.plusQty;\n  const minusQty = cartCtx.minusQty;\n  const setQuantity = cartCtx.setQuantity;\n  const {\n    0: selectedProduct,\n    1: setSelectedProduct\n  } = useState();\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const uniqueTags = [];\n\n  const changeQty = e => {\n    setQuantity(parseInt(e.target.value));\n  };\n\n  const clickProductDetail = product => {\n    const titleProps = product.title.split(' ').join('');\n    router.push(`/product-details/${product.id}` + '-' + `${titleProps}`);\n  };\n\n  const getSelectedProduct = item => {\n    setSelectedProduct(item);\n    toggle();\n  };\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: \"fashion\",\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(\"section\", {\n    className: \"section-b-space ratio_asos\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    className: \"product-related\"\n  }, __jsx(\"h2\", null, \"related products\"))), __jsx(Row, {\n    className: \"search-product\"\n  }, !data || !data.products || data.products.items.length === 0 || loading ? 'loading' : __jsx(React.Fragment, null, data && data.products.items.slice(0, 6).map((product, index) => __jsx(Col, {\n    xl: \"2\",\n    md: \"4\",\n    sm: \"6\",\n    key: index\n  }, __jsx(\"div\", {\n    className: \"product-box\"\n  }, __jsx(\"div\", {\n    className: \"img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    onClick: () => clickProductDetail(product),\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload bg-img\",\n    alt: \"\"\n  }))), __jsx(\"div\", {\n    className: \"back\"\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    src: product.images[1].src,\n    className: \"img-fluid blur-up lazyload bg-img\",\n    alt: \"\"\n  }))), __jsx(\"div\", {\n    className: \"cart-info cart-wrap\"\n  }, __jsx(\"button\", {\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addtocart\",\n    title: \"Add to cart\",\n    onClick: () => addToCart(product, quantity)\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => wishlistContext.addToWish(product),\n    title: \"Add to Wishlist\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => getSelectedProduct(product),\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    title: \"Quick View\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => compareContext.addToCompare(product),\n    title: \"Compare\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  })))), __jsx(\"div\", {\n    className: \"product-detail\"\n  }, __jsx(\"div\", {\n    className: \"rating\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\"\n  })), __jsx(\"a\", {\n    href: null\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, symbol, product.price), __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, __jsx(\"li\", {\n    className: \"bg-light0\"\n  }), __jsx(\"li\", {\n    className: \"bg-light1\"\n  }), __jsx(\"li\", {\n    className: \"bg-light2\"\n  })))))))), selectedProduct ? __jsx(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: \"modal-lg quickview-modal\",\n    centered: true\n  }, __jsx(ModalBody, null, __jsx(Row, null, __jsx(Col, {\n    lg: \"6\",\n    xs: \"12\"\n  }, __jsx(\"div\", {\n    className: \"quick-view-img\"\n  }, __jsx(Media, {\n    src: `${selectedProduct.variants ? image ? image : selectedProduct.images[0].src : selectedProduct.images[0].src}`,\n    alt: \"\",\n    className: \"img-fluid\"\n  }))), __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\"\n  }, __jsx(\"div\", {\n    className: \"product-right\"\n  }, __jsx(\"h2\", null, \" \", selectedProduct.title, \" \"), __jsx(\"h3\", null, \"\\\"$\\\" \", (selectedProduct.price * 1).toFixed(2)), selectedProduct.variants ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, uniqueTags ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, selectedProduct.type === 'jewellery' || selectedProduct.type === 'nursery' || selectedProduct.type === 'beauty' || selectedProduct.type === 'electronics' || selectedProduct.type === 'goggles' || selectedProduct.type === 'watch' || selectedProduct.type === 'pets' ? '' : __jsx(React.Fragment, null, uniqueTags ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, uniqueTags.map((vari, i) => {\n    return __jsx(\"li\", {\n      className: vari.color,\n      key: i,\n      title: vari.color,\n      onClick: () => variantChangeByColor(vari.image_id, selectedProduct.images)\n    });\n  })) : '')) : '') : '', __jsx(\"div\", {\n    className: \"border-product\"\n  }, __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"product details\"), __jsx(\"p\", null, selectedProduct.description)), __jsx(\"div\", {\n    className: \"product-description border-product\"\n  }, selectedProduct.size ? __jsx(\"div\", {\n    className: \"size-box\"\n  }, __jsx(\"ul\", null, selectedProduct.size.map((size, i) => {\n    return __jsx(\"li\", {\n      key: i\n    }, __jsx(\"a\", {\n      href: null\n    }, size));\n  }))) : '', __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"quantity\"), __jsx(\"div\", {\n    className: \"qty-box\"\n  }, __jsx(\"div\", {\n    className: \"input-group\"\n  }, __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-left-minus\",\n    onClick: minusQty,\n    \"data-type\": \"minus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-left\"\n  }))), __jsx(\"input\", {\n    type: \"text\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: changeQty,\n    className: \"form-control input-number\"\n  }), __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-right-plus\",\n    onClick: () => plusQty(selectedProduct),\n    \"data-type\": \"plus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-right\"\n  })))))), __jsx(\"div\", {\n    className: \"product-buttons\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-solid\",\n    onClick: () => addToCart(selectedProduct, quantity)\n  }, \"add to cart\"), __jsx(\"button\", {\n    className: \"btn btn-solid\",\n    onClick: () => clickProductDetail(selectedProduct)\n  }, \"View detail\"))))))) : \"\"));\n};\n\nexport default ProductSection;","map":null,"metadata":{},"sourceType":"module"}