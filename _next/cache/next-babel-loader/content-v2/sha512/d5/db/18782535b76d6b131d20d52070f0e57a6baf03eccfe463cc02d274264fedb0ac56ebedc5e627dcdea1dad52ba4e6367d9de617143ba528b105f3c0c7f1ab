{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useContext, useState } from \"react\";\nimport { Container, Row, Col, Media, Modal, ModalBody } from \"reactstrap\";\nimport gql from 'graphql-tag';\nimport CartContext from '../../../../helpers/cart';\nimport { WishlistContext } from '../../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../../helpers/Compare/CompareContext';\nimport { CurrencyContext } from '../../../../helpers/Currency/CurrencyContext';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst MasonryProduct = ({\n  type,\n  cartClass\n}) => {\n  const router = useRouter();\n  const cartContext = useContext(CartContext);\n  const wishlistContext = useContext(WishlistContext);\n  const compareContext = useContext(CompareContext);\n  const {\n    0: productPopUp,\n    1: setProductPopUp\n  } = useState();\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: stock,\n    1: setStock\n  } = useState('InStock');\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(1);\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const uniqueTags = [];\n\n  const toggle = () => setModal(!modal);\n\n  const curContext = useContext(CurrencyContext);\n  const currency = curContext.state;\n  const qty = cartContext.quantity;\n\n  const minusQty = () => {\n    if (quantity > 1) {\n      setStock('InStock');\n      setQuantity(quantity - 1);\n    }\n  };\n\n  const plusQty = product => {\n    if (product.stock >= quantity) {\n      setQuantity(quantity + 1);\n    } else {\n      setStock('Out of Stock !');\n    }\n  };\n\n  const changeQty = e => {\n    setQuantity(parseInt(e.target.value));\n  };\n\n  const singleProduct = product => {\n    setProductPopUp(product);\n    toggle();\n  };\n\n  const variantChangeByColor = (imgId, product_images) => {\n    product_images.map(data => {\n      if (data.image_id == imgId) {\n        setImage(data.src);\n      }\n    });\n  };\n\n  var {\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 20\n    }\n  });\n\n  const clickProductDetail = product => {\n    const titleProps = product.title.split(' ').join('');\n    router.push(`/product-details/${product.id}` + '-' + `${titleProps}`);\n  };\n\n  return __jsx(Fragment, null, data ? __jsx(\"section\", {\n    className: \"section-b-space layout7-product\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    md: \"6\",\n    sm: \"12\",\n    className: \"p-0\"\n  }, __jsx(Row, {\n    className: \"m-0\"\n  }, data && data.products.items.slice(0, 2).map((product, i) => __jsx(Col, {\n    sm: \"6\",\n    className: \"col-12 p-0\",\n    key: i\n  }, __jsx(\"div\", {\n    className: \"product-box\"\n  }, __jsx(\"div\", {\n    className: \"img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: \"#\"\n  }, __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\",\n    onClick: () => clickProductDetail(product)\n  }))), __jsx(\"div\", {\n    className: cartClass\n  }, __jsx(\"button\", {\n    onClick: () => cartContext.addToCart(product, qty),\n    title: \"Add to cart\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Add to Wishlist\",\n    onClick: () => wishlistContext.addToWish(product)\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    title: \"Quick View\",\n    onClick: () => singleProduct(product)\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Compare\",\n    onClick: () => compareContext.addToCompare(product)\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  })))), __jsx(\"div\", {\n    className: \"details-product\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => clickProductDetail(product)\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, \"$\", product.price, \" \", __jsx(\"del\", null, \"$600.00\"))))))), __jsx(Row, {\n    className: \"m-0\"\n  }, __jsx(Col, {\n    className: \"col-12 p-0\"\n  }, __jsx(\"div\", {\n    className: \"product-box\"\n  }, __jsx(\"div\", {\n    className: \"img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: \"#\"\n  }, __jsx(Media, {\n    src: data.products.items[2].images[0].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\",\n    onClick: () => clickProductDetail(data.products.items[2])\n  }))), __jsx(\"div\", {\n    className: cartClass\n  }, __jsx(\"button\", {\n    onClick: () => cartContext.addToCart(data.products.items[2], qty),\n    title: \"Add to cart\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Add to Wishlist\",\n    onClick: () => wishlistContext.addToWish(data.products.items[2])\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    title: \"Quick View\",\n    onClick: () => singleProduct(data.products.items[2])\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Compare\",\n    onClick: () => compareContext.addToCompare(data.products.items[2])\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  })))), __jsx(\"div\", {\n    className: \"details-product\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => clickProductDetail(data.products.items[2])\n  }, __jsx(\"h6\", null, data.products.items[2].title)), __jsx(\"h4\", null, \"$\", data.products.items[2].price)))))), __jsx(Col, {\n    md: \"6\",\n    className: \"col-12 p-0\"\n  }, __jsx(\"div\", {\n    className: \"product-box\"\n  }, __jsx(\"div\", {\n    className: \"img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    src: data.products.items[3].images[0].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\",\n    onClick: () => clickProductDetail(data.products.items[3])\n  }))), __jsx(\"div\", {\n    className: cartClass\n  }, __jsx(\"button\", {\n    onClick: () => cartContext.addToCart(data.products.items[3], qty),\n    title: \"Add to cart\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Add to Wishlist\",\n    onClick: () => wishlistContext.addToWish(data.products.items[3])\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    title: \"Quick View\",\n    onClick: () => singleProduct(data.products.items[3])\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Compare\",\n    onClick: () => compareContext.addToCompare(data.products.items[3])\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  })))), __jsx(\"div\", {\n    className: \"details-product\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => clickProductDetail(data.products.items[3])\n  }, __jsx(\"h6\", null, data.products.items[3].title)), __jsx(\"h4\", null, \"$\", data.products.items[3].price))))), __jsx(Row, null, __jsx(Col, {\n    md: \"6\",\n    className: \"col-12 p-0\"\n  }, __jsx(\"div\", {\n    className: \"product-box\"\n  }, __jsx(\"div\", {\n    className: \"img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: null\n  }, __jsx(Media, {\n    src: data.products.items[4].images[0].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\",\n    onClick: () => clickProductDetail(data.products.items[4])\n  }))), __jsx(\"div\", {\n    className: cartClass\n  }, __jsx(\"button\", {\n    onClick: () => cartContext.addToCart(data.products.items[4], qty),\n    title: \"Add to cart\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Add to Wishlist\",\n    onClick: () => wishlistContext.addToWish(data.products.items[4])\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    title: \"Quick View\",\n    onClick: () => singleProduct(data.products.items[4])\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Compare\",\n    onClick: () => compareContext.addToCompare(data.products.items[4])\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  })))), __jsx(\"div\", {\n    className: \"details-product\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => clickProductDetail(data.products.items[4])\n  }, __jsx(\"h6\", null, data.products.items[4].title)), __jsx(\"h4\", null, \"$\", data.products.items[4].price)))), __jsx(Col, {\n    md: \"6\",\n    className: \"col-12 p-0\"\n  }, __jsx(Row, {\n    className: \"m-0\"\n  }, data && data.products.items.slice(5, 9).map((product, i) => __jsx(Col, {\n    sm: \"6\",\n    className: \"col-12 p-0\",\n    key: i\n  }, __jsx(\"div\", {\n    className: \"product-box\"\n  }, __jsx(\"div\", {\n    className: \"img-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"front\"\n  }, __jsx(\"a\", {\n    href: \"#\"\n  }, __jsx(Media, {\n    src: product.images[0].src,\n    className: \"img-fluid blur-up lazyload\",\n    alt: \"\",\n    onClick: () => clickProductDetail(product)\n  }))), __jsx(\"div\", {\n    className: cartClass\n  }, __jsx(\"button\", {\n    onClick: () => cartContext.addToCart(product, qty),\n    title: \"Add to cart\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Add to Wishlist\",\n    onClick: () => wishlistContext.addToWish(product)\n  }, __jsx(\"i\", {\n    className: \"fa fa-heart\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#quick-view\",\n    title: \"Quick View\",\n    onClick: () => singleProduct(product)\n  }, __jsx(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\"\n  })), __jsx(\"a\", {\n    href: null,\n    title: \"Compare\",\n    onClick: () => compareContext.addToCompare(product)\n  }, __jsx(\"i\", {\n    className: \"fa fa-refresh\",\n    \"aria-hidden\": \"true\"\n  })))), __jsx(\"div\", {\n    className: \"details-product\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: () => clickProductDetail(product)\n  }, __jsx(\"h6\", null, product.title)), __jsx(\"h4\", null, \"$\", product.price)))))))), __jsx(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: \"modal-lg quickview-modal\",\n    centered: true\n  }, __jsx(ModalBody, null, productPopUp ? __jsx(Row, null, __jsx(Col, {\n    lg: \"6\",\n    xs: \"12\"\n  }, __jsx(\"div\", {\n    className: \"quick-view-img\"\n  }, __jsx(Media, {\n    src: `${productPopUp.variants ? image ? image : productPopUp.images[0].src : productPopUp.images[0].src}`,\n    alt: \"\",\n    className: \"img-fluid\"\n  }))), __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\"\n  }, __jsx(\"div\", {\n    className: \"product-right\"\n  }, __jsx(\"h2\", null, \" \", productPopUp.title, \" \"), __jsx(\"h3\", null, currency.symbol, (productPopUp.price * currency.value).toFixed(2)), productPopUp.variants ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, uniqueTags ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, productPopUp.type === 'jewellery' || productPopUp.type === 'nursery' || productPopUp.type === 'beauty' || productPopUp.type === 'electronics' || productPopUp.type === 'goggles' || productPopUp.type === 'watch' || productPopUp.type === 'pets' ? '' : __jsx(React.Fragment, null, uniqueTags ? __jsx(\"ul\", {\n    className: \"color-variant\"\n  }, uniqueTags.map((vari, i) => {\n    return __jsx(\"li\", {\n      className: vari.color,\n      key: i,\n      title: vari.color,\n      onClick: () => variantChangeByColor(vari.image_id, productPopUp.images)\n    });\n  })) : '')) : '') : '', __jsx(\"div\", {\n    className: \"border-product\"\n  }, __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"product details\"), __jsx(\"p\", null, productPopUp.description)), __jsx(\"div\", {\n    className: \"product-description border-product\"\n  }, productPopUp.size ? __jsx(\"div\", {\n    className: \"size-box\"\n  }, __jsx(\"ul\", null, productPopUp.size.map((size, i) => {\n    return __jsx(\"li\", {\n      key: i\n    }, __jsx(\"a\", {\n      href: null\n    }, size));\n  }))) : '', __jsx(\"h6\", {\n    className: \"product-title\"\n  }, \"quantity\"), __jsx(\"div\", {\n    className: \"qty-box\"\n  }, __jsx(\"div\", {\n    className: \"input-group\"\n  }, __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-left-minus\",\n    onClick: minusQty,\n    \"data-type\": \"minus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-left\"\n  }))), __jsx(\"input\", {\n    type: \"text\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: changeQty,\n    className: \"form-control input-number\"\n  }), __jsx(\"span\", {\n    className: \"input-group-prepend\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn quantity-right-plus\",\n    onClick: () => plusQty(productPopUp),\n    \"data-type\": \"plus\",\n    \"data-field\": \"\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-angle-right\"\n  })))))), __jsx(\"div\", {\n    className: \"product-buttons\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-solid\",\n    onClick: () => cartContext.addToCart(productPopUp, qty)\n  }, \"add to cart\"), __jsx(\"button\", {\n    className: \"btn btn-solid\",\n    onClick: () => clickProductDetail(productPopUp)\n  }, \"View detail\"))))) : \"\")))) : \"\");\n};\n\nexport default MasonryProduct;","map":null,"metadata":{},"sourceType":"module"}