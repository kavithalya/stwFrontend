{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport CartContext from '../../../../helpers/cart';\nimport { Container, Row, Col, Media, Input } from 'reactstrap';\nimport { CurrencyContext } from '../../../../helpers/Currency/CurrencyContext';\nimport cart from '../../../../public/assets/images/icon-empty-cart.png';\n\nconst CartPage = () => {\n  const context = useContext(CartContext);\n  const cartItems = context.state;\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const total = context.cartTotal;\n  const removeFromCart = context.removeFromCart;\n  const {\n    0: stock1,\n    1: setStock\n  } = useState(\"InStock\");\n  const {\n    0: quantity,\n    1: setQty\n  } = useState(1);\n  const {\n    0: quantityError,\n    1: setQuantityError\n  } = useState(false);\n  const updateQty = context.updateQty;\n\n  const handleQtyUpdate = (item, quantity) => {\n    if (quantity >= 1) {\n      setQuantityError(false);\n      updateQty(item, quantity);\n    } else {\n      setQuantityError(true);\n    }\n  };\n\n  const changeQty = e => {\n    setQuantity(parseInt(e.target.value));\n  };\n\n  const minusQty = () => {\n    if (quantity > 1) {\n      setStock('InStock');\n      setQty(quantity - 1);\n    }\n  };\n\n  const plusQty = product => {\n    if (product.stock >= quantity) {\n      setQty(quantity + 1);\n    } else {\n      setStock('Out of Stock !');\n    }\n  };\n\n  return __jsx(\"div\", null, cartItems && cartItems.length > 0 ? __jsx(\"section\", {\n    className: \"cart-section section-b-space\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    sm: \"12\"\n  }, __jsx(\"table\", {\n    className: \"table cart-table table-responsive-xs\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", {\n    className: \"table-head\"\n  }, __jsx(\"th\", {\n    scope: \"col\"\n  }, \"image\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"product name\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"price\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"quantity\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"action\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"total\"))), cartItems.map((item, index) => {\n    return __jsx(\"tbody\", {\n      key: index\n    }, __jsx(\"tr\", null, __jsx(\"td\", null, __jsx(Link, {\n      href: `/left-sidebar/product/` + item.id\n    }, __jsx(\"a\", null, __jsx(Media, {\n      src: item.images ? item.images[0].src : item.images[0].src,\n      alt: \"\"\n    })))), __jsx(\"td\", null, __jsx(Link, {\n      href: `/left-sidebar/product/` + item.id\n    }, __jsx(\"a\", null, item.title)), __jsx(\"div\", {\n      className: \"mobile-cart-content row\"\n    }, __jsx(\"div\", {\n      className: \"col-xs-3\"\n    }, __jsx(\"div\", {\n      className: \"qty-box\"\n    }, __jsx(\"div\", {\n      className: \"input-group\"\n    }, __jsx(\"input\", {\n      type: \"number\",\n      name: \"quantity\",\n      onChange: e => handleQtyUpdate(item, e.target.value),\n      className: \"form-control input-number\",\n      defaultValue: item.qty,\n      style: {\n        borderColor: quantityError && 'red'\n      }\n    }))), item.qty >= item.stock ? 'out of Stock' : ''), __jsx(\"div\", {\n      className: \"col-xs-3\"\n    }, __jsx(\"h2\", {\n      className: \"td-color\"\n    }, symbol, item.price - item.price * item.discount / 100)), __jsx(\"div\", {\n      className: \"col-xs-3\"\n    }, __jsx(\"h2\", {\n      className: \"td-color\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"icon\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-times\",\n      onClick: () => removeFromCart(item)\n    })))))), __jsx(\"td\", null, __jsx(\"h2\", null, symbol, item.price - item.price * item.discount / 100)), __jsx(\"td\", null, __jsx(\"div\", {\n      className: \"qty-box\"\n    }, __jsx(\"div\", {\n      className: \"input-group\"\n    }, __jsx(\"input\", {\n      type: \"number\",\n      name: \"quantity\",\n      onChange: e => handleQtyUpdate(item, e.target.value),\n      className: \"form-control input-number\",\n      defaultValue: item.qty,\n      style: {\n        borderColor: quantityError && 'red'\n      }\n    }))), item.qty >= item.stock ? 'out of Stock' : ''), __jsx(\"td\", null, __jsx(\"i\", {\n      className: \"fa fa-times\",\n      onClick: () => removeFromCart(item)\n    })), __jsx(\"td\", null, __jsx(\"h2\", {\n      className: \"td-color\"\n    }, symbol, item.total))));\n  })), __jsx(\"table\", {\n    className: \"table cart-table table-responsive-md\"\n  }, __jsx(\"tfoot\", null, __jsx(\"tr\", null, __jsx(\"td\", null, \"total price :\"), __jsx(\"td\", null, __jsx(\"h2\", null, symbol, \" \", total, \" \"))))))), __jsx(Row, {\n    className: \"cart-buttons\"\n  }, __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(Link, {\n    href: `/shop/left_sidebar`\n  }, __jsx(\"a\", {\n    className: \"btn btn-solid\"\n  }, \"continue shopping\"))), __jsx(Col, {\n    xs: \"6\"\n  }, __jsx(Link, {\n    href: `/page/account/checkout`\n  }, __jsx(\"a\", {\n    className: \"btn btn-solid\"\n  }, \"check out\")))))) : __jsx(\"section\", {\n    className: \"cart-section section-b-space\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    sm: \"12\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"col-sm-12 empty-cart-cls text-center\"\n  }, __jsx(Media, {\n    src: cart,\n    className: \"img-fluid mb-4 mx-auto\",\n    alt: \"\"\n  }), __jsx(\"h3\", null, __jsx(\"strong\", null, \"Your Cart is Empty\")), __jsx(\"h4\", null, \"Explore more shortlist some items.\"))))))));\n};\n\nexport default CartPage;","map":null,"metadata":{},"sourceType":"module"}