{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Collapse } from 'reactstrap';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nconst GET_COLOR = gql`\n    query getColors($type:String)  {\n        getColors(type: $type){\n            colors\n        }\n    }\n`;\n\nconst Color = () => {\n  const context = useContext(FilterContext);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_COLOR, {\n    variables: {\n      type: context.state\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block open\"\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggle\n  }, \"colors\"), __jsx(Collapse, {\n    isOpen: isOpen\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\"\n  }, __jsx(\"div\", {\n    className: \"color-selector\"\n  }, __jsx(\"ul\", null, !data || !data.getColors || data.getColors.colors.length === 0 || loading ? __jsx(\"h4\", null, \"Loading\") : data.getColors.colors.map((color, i) => __jsx(\"li\", {\n    className: `${color} ${context.selectedColor === color ? 'active' : ''}`,\n    onClick: () => {\n      context.setSelectedColor(color);\n    },\n    key: i\n  })))))));\n};\n\nexport default Color;","map":null,"metadata":{},"sourceType":"module"}